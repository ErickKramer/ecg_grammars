/*
Package for "change" argument structure. Still in development, attempting to reconcile with "base" analyses. 
The "caused change" cxns are also connected to the transitive-change-property cxn in the transitives package.

Sentences: 
-the box became red
-the box became bigger than the man
-the man grew

*/

package core

// Constructions for VP-change: "the box changed from red to blue"
// "the box changed to blue"
// "the plant grew" (BareIntransitive)
general construction VPChange
   subcase of IntransitiveArgumentStructure
   constructional
	  constituents
	    v: Verb
	  constraints
	    self.features <--> v.features
	meaning: Change
	  constraints
	    self.m <--> v.m
	    self.m.temporality <-- @bounded
	    self.m.protagonist <--> ed.profiledParticipant
   

/* the box became red
   the box became bigger
TO DO: stop "the box changed red" from unifying
*/
construction VPChangeAdj
	subcase of VPChange
	constructional
	  constituents
	    adj: Adjective
	 form
	   constraints
	     v.f before adj.f
	meaning: Change
	  constraints
	    self.m.temporality <-- @bounded
	    ed.profiledParticipant <--> adj.m.modifiedThing
	    self.m.state <--> adj.m



// general construction to define change, should include:
// "changed X (from P1) to P2", "made X P1", "painted X P1", etc.
// What about "change INTO P1" (where P1 can be a nominal, etc.)
general construction TransitiveChange
	subcase of TransitiveCauseEffect
	meaning
	 evokes Change as change
	 constraints
	   self.m.affectedProcess <--> change
	   

// change X TO P1
general construction TransitivePropertyChange 
	subcase of TransitiveChange
	constructional
	 constituents
	  prep: TO-Infinitive-Marker
	  adj: PropertyAdjective
	form
	 constraints
	  prep.f meets adj.f
    meaning
     evokes StateChange as change
     constraints
      change.state <--> adj.m
      change.protagonist <--> adj.m.modifiedThing
      change <--> v.m
    
	


construction ActiveTransitiveStateChange // he changed it (from red) to blue 2/20/13
   subcase of ActiveTransitive, TransitivePropertyChange
	form
     constraints
	  	np.f before prep.f

import passive-transitives
import auxiliaries

construction PassiveTransitiveStateChange // he changed it (from red) to blue 2/20/13
   subcase of PassiveTransitive, TransitivePropertyChange

		


        
        
// the plant grew to the ceiling
/*
// ** Currently not working, since "Modification" as state is incompatible with TrajectorLandmark
construction VPScaleChange
	subcase of VPChange
	constructional
	  constituents
	    v: Verb // inherited, should be tighter for ScaleChange
	    pp: Path-PP
	 form
	   constraints
	     v.f before pp.f
	meaning: ScaleChange
	  constraints
	    //self.m.temporality <-- @bounded
	    self.m.state <--> pp.m
	    ed.profiledParticipant <--> pp.m.trajector
*/	    
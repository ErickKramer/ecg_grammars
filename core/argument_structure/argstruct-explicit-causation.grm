package explicit-causation
//package core

general construction Trans_AgentEffectCausation //  added 2/11/14
  subcase of ArgumentStructure // or sub of some more general transitive causal cxn?
    meaning: CauseEffect 
     //evokes A123 as s
     constraints
	    s.a1 <--> self.m.causalAgent
        s.a2 <--> self.m.affectedEntity

//Causing TO
general construction ObjectControl_AgentEffectCausation // he caused John to move 
   subcase of Trans_AgentEffectCausation
   constructional
     constituents
       vp: VP
    constraints 
        vp.verbform <-- Infinitive
        v.verbkind <-- ForceDynamic
        v.expectedVerbForm <-->  vp.verbform // need to decide if this is necessary
      // self.argform <-- ComplexCatenative
   form 
     constraints
	    v.f before vp.f	
  meaning
     constraints
       	//self.m.protagonist.ontological-category <-- @sentient // maybe from verb
		s.a2 <--> vp.ed.profiledParticipant
		vp.m  <--> self.m.affectedProcess
		self.m <--> v.m


construction ActiveTrans_ObjectControl_AgentEffectCausation  // he caused the block to move
  subcase of ActiveTransitive, ObjectControl_AgentEffectCausation
    form
     constraints
     v.f before np.f
	   np.f before vp.f  

//Preventing FROM
general construction ObjectControl_AgentEffectPrevention // he prevented John from moving 
   subcase of Trans_AgentEffectCausation
   constructional
     constituents
       tag1: FROM-Marker 
       vp: VP
    constraints 
        vp.verbform <-- PresentParticiple
        v.verbkind <-- ForceDynamic
        v.expectedVerbForm <-->  vp.verbform // need to decide if this is necessary
   form 
     constraints
	   tag1.f before vp.f	
  meaning
     constraints
       	//self.m.protagonist.ontological-category <-- @sentient // maybe from verb
		s.a2 <--> vp.ed.profiledParticipant
		vp.m  <--> self.m.affectedProcess
		self.m <--> v.m

construction ActiveTrans_ObjectControl_AgentEffectPrevention  // he prevented the block from moving
  subcase of ActiveTransitive, ObjectControl_AgentEffectPrevention
    form
     constraints
	   v.f before np.f
	   np.f before tag1.f 
	   

// Agent causing an event: "he caused the crisis"
general construction Trans_AgentEventCausation //  
  subcase of ArgumentStructure // or sub of some more general transitive causal cxn?
   constructional  
    	constraints
    		v.verbkind <-- ForceDynamic //this should constrain this cxn to 'causal' verbs, e.g. cause, prevent
  meaning: CausalAction
     //evokes A123 as s
     constraints
	        v.m <--> self.m
	        s.a1 <--> self.m.causalAgent
            s.a2 <--> self.m.effect
           

construction ActiveTrans_AgentEventCausation //he caused the crisis 
  subcase of ActiveTransitive, Trans_AgentEventCausation  


// Event effect causation:
general construction Trans_effectCausation // 
  subcase of ArgumentStructure // or sub of more general cxn
    meaning: CausedProcess
     //evokes A123 as s
     constraints
	    s.a1 <--> self.m.cause // currently constrained in schema to be EventRD
        s.a2 <--> self.m.affectedEntity

general construction Trans_effectCausation_effectProcess // e.g. move 
  subcase of Trans_effectCausation
   constructional
  	constraints
   		v.argform <-- AmbiTransitive // this should exclude, e.g., 'cut' and 'go'
  meaning
    constraints
        v.m <--> self.m.affectedProcess

construction ActiveTrans_effectCausation_effectProcess //e.g. "the storm moved the block"
  subcase of ActiveTransitive, Trans_effectCausation_effectProcess 
  
  
 // Causal event

  general construction Trans_EventCausation 
  subcase of ArgumentStructure // or sub of some more general transitive causal cxn?
   constructional  
    	constraints
    		v.verbkind <-- ForceDynamic //this should constrain this cxn to 'causal' verbs, e.g. cause, prevent
  meaning: CausalEvent
     //evokes A123 as s
     constraints
	       s.a1 <--> self.m.cause
           s.a2 <--> self.m.effect
           v.m <--> self.m
       // need to add constraint that restricts this to causal verbs 

construction ActiveTrans_EventCausation // his moving caused a crisis
  subcase of ActiveTransitive, Trans_EventCausation  	   
	   
/*
package explicit-causation
	
  //in this (central) subcase, the verb has cause-effect meaning, e.g. cut
	general construction Trans_Causation_central 
  	   subcase of Trans_AgentEffectCausation
    	constructional
  	 	 constraints
  	  	   //v.argform <-- Transitive
  	   	   //v.verbkind <-- EntityProcess  
    	meaning
     	constraints
	    	self.m <--> v.m
	    
	    
construction ActiveTrans_Causation_central //he cut the box
	subcase of ActiveTransitive, Trans_Causation_central     
    
   	    

// in this subcase, the verb elaborates the effect, e.g. move
general construction Trans_Causation_effectProcess  
   subcase of Trans_AgentEffectCausation
	constructional
	   constraints
		 v.argform <-- AmbiTransitive // this should exclude, e.g., 'cut' and 'go'
   meaning
	constraints
    	v.m <--> self.m.affectedProcess

     
        



  
  

	  

          







general construction ObjectControl_EventEffectCausation // the storm caused John to move 
   subcase of ArgumentStructure
   constructional
     constituents
       vp: VP
    constraints 
        vp.verbform <-- Infinitive
        v.verbkind <-- ForceDynamic
        v.expectedVerbForm <-->  vp.verbform // need to decide if this is necessary
   form 
     constraints
	    v.f before vp.f	
  meaning: CausedProcess
     constraints
        s.a2 <--> vp.ed.profiledParticipant
		vp.m  <--> self.m.affectedProcess
		self.m <--> v.m
		s.a1 <--> self.m.cause 
        s.a2 <--> self.m.affectedEntity

construction ActiveTrans_ObjectControl_EventEffectCausation  // the storm caused the block to move
  subcase of ActiveTransitive, ObjectControl_EventEffectCausation
    form
     constraints
	   np.f before vp.f  	


general construction ObjectControl_EventEffectPrevention // the storm prevented John from moving 
   subcase of ArgumentStructure
   constructional
     constituents
       tag1: FROM-Marker 
       vp: VP
    constraints 
        vp.verbform <-- PresentParticiple
        v.verbkind <-- ForceDynamic
        v.expectedVerbForm <-->  vp.verbform // need to decide if this is necessary
   form 
     constraints
	   tag1.f before vp.f	
  meaning: CausedProcess
     constraints
        s.a2 <--> vp.ed.profiledParticipant
		vp.m  <--> self.m.affectedProcess
		self.m <--> v.m
		s.a1 <--> self.m.cause 
        s.a2 <--> self.m.affectedEntity

construction ActiveTrans_ObjectControl_EventEffectPrevention  // the storm prevented the block from moving
  subcase of ActiveTransitive, ObjectControl_EventEffectPrevention
    form
     constraints
	    v.f before np.f
	    np.f before tag1.f    	


 
*/
	                     
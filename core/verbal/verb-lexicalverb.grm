package core
//import auxiliaries-testing


// STAGE VERBS
general construction StageVerb
	subcase of LexicalVerb
	constructional 
	 constraints
	   self.verbkind <-- Stage
	   self.expectedVerbForm <-- PresentParticipleOrInfinitive 


construction StageVerbType
	subcase of StageVerb, LexicalVerbType
	constructional
	  constraints
	    self.expectedVerbForm <-- PresentParticipleOrInfinitive
	meaning
	  constraints
	    self.m.actionary <-- @stage


// Used for measure/dimension: "the box weighs 5 pounds"
construction MeasureType
	subcase of LexicalVerbType
	meaning: Measure
	  constraints
	    self.m.actionary <-- @process
	    self.m.dimension <-- @measure


// State Change Type: become, etc.
construction ChangeType
	subcase of LexicalVerbType
	constructional 
	  constraints
	    self.argform <-- ArgForm
	meaning: Change
	  constraints
	    self.m.actionary <-- @statechange
	    self.m.state.property <-- @object-property
	    //self.m.state.oldValue <-- @propValue
	    
// Scale Change Type: grow, increase, etc.
construction ScaleChangeType
	subcase of LexicalVerbType
	constructional 
	  constraints
	    self.argform <-- ArgForm
	meaning: ScaleChange
	  constraints
	    self.m.actionary <-- @scalechange
	    self.m.state.property <-- @object-property
	    self.m.state.direction <-- @comparison
	    //self.m.state.oldValue <-- @propValue

construction CauseEffectType
	subcase of LexicalVerbType, GeneralTypeCxn
	meaning: CauseEffect
	 //evokes ForceApplication as fa
	 //evokes MotionPath as mp
	  constraints
	    self.m.actionary <-- @cause
	    self.m.protagonist.ontological-category <-- @physicalEntity
	    //self.fa <--> self.m.causalProcess
	    //self.mp <--> self.m.affectedProcess
	    //self.fa.actedUpon <--> self.m.affectedEntity
	    

construction CreationType
	subcase of LexicalVerbType, GeneralTypeCxn
	meaning: Creation
	  constraints
	     self.m.actionary <-- @create



// VERB Types:


construction SelfMotionType
	subcase of LexicalVerbType
	meaning: MotionPath
      constraints
         self.m.actionary <-- @motion
         self.m.speed <-- @scalarValue
         self.m.speed <-- ".5"
         self.argform <-- ArgForm
        
// You could imagine adding another constraint here on the 
// ontological category of the "Content" of the perception;
// then the "tokens" can place different constraints on that.
construction PerceptionType
   subcase of LexicalVerbType
   meaning: Perception
     constraints
        self.m.actionary <-- @perception
        self.argform <-- Transitive
        self.verbkind <-- Perceptual


// Path Verbs: "Enter", "Exit", etc.
general construction PathVerbType
   subcase of LexicalVerbType  // 7/8/15
   meaning: ChangeLocation
    evokes BoundedObject as bo
     constraints 
       self.m.actionary <-- @motion
       self.m.landmark.ontological-category <-- @location
       self.m.landmark <--> bo.boundedObject 
       
  construction PathVerbIn  //7/8/15
	subcase of  PathVerbType  
       meaning: ChangeLocation
       constraints
       self.m.spg.goal <--> bo.interior
       
 construction PathVerbOut  //7/8/15
	subcase of  PathVerbType  
       meaning: ChangeLocation
       constraints
       self.m.spg.goal <--> bo.exterior
       


      
         
package verb
import base

// STAGE VERBS
general construction StageVerb
  subcase of LexicalVerb
  constructional
    constraints
      self.verbkind <-- Stage
      self.expectedVerbForm <-- PresentParticipleOrInfinitive


construction StageVerbType
  subcase of StageVerb, LexicalVerbType
  constructional
    constraints
      self.expectedVerbForm <-- PresentParticipleOrInfinitive
  meaning
    constraints
      self.m.actionary <-- @stage


// State Change Type: become, etc.
construction ChangeType
  subcase of LexicalVerbType
  constructional
    constraints
      self.argform <-- ArgForm
  meaning: Change
    constraints
      self.m.actionary <-- @change
      //self.m.state.property <-- @object-property
      //self.m.state.oldValue <-- @propValue


// provide, supply
construction SupplyType
  subcase of LexicalVerbType
  constructional
    constraints
      self.argform <-- Transitive
  meaning: Supply
    constraints
      self.m.actionary <-- @supply


  // ST Testing (1/4/16)
// Scale Change Type: grow, increase, etc.
construction ScaleChangeType
  subcase of LexicalVerbType
  constructional
    constraints
      self.argform <-- ArgForm
  meaning: ScaleChange
    evokes ScalarModifier as mod
    constraints
      self.m.actionary <-- @scalechange
      self.mod.property <-- @object-property
      self.mod.kind <-- @comparative
      self.m.direction <-- @comparison
      self.mod.value <-- @scalarValue
      self.m.state <--> mod
      //self.m.state.oldValue <-- @propValue

// he pushed the box north
construction CauseEffectType
  subcase of LexicalVerbType, GeneralTypeCxn
  meaning: CauseEffect
    constraints
      self.m.actionary <-- @cause


// he pushed the box north
construction CauseMotionType
  subcase of LexicalVerbType, GeneralTypeCxn
  meaning: CauseMotion
    constraints
      self.m.actionary <-- @complexxnet


// he painted the house blue
construction CauseChangeType
  subcase of LexicalVerbType, GeneralTypeCxn
  meaning: CauseChange
    constraints
      self.m.actionary <-- @change

// "push the box north"
construction ApplyForceType
  subcase of LexicalVerbType
  meaning: ForceApplication
    constraints
       self.m.actionary <-- @forceapplication
       self.argform <-- Transitive



// "he carried the glass to the table"
// involves causing motion
construction EstablishHoldType
  subcase of LexicalVerbType
  meaning: EstablishHold
    constraints
       self.m.protagonist.ontological-category <-- @agent
       self.m.actionary <-- @establishhold
       self.argform <-- Transitive


// Object transfer type
construction TransferType
  subcase of LexicalVerbType
  meaning: ObjectTransfer
    constraints
      self.m.protagonist.ontological-category <-- @agent
      self.m.actionary <-- @objecttransfer


// Possession Process
construction PossessionType
  subcase of LexicalVerbType
  meaning: PossProcess
    constraints
      self.m.protagonist.ontological-category <-- @agent
      self.m.actionary <-- @possess
      self.verbkind <-- PossessionKind  // 10/3/13
      self.argform <-- Transitive
      self.voice <-- PassiveOrNotPassive


// Control verbs (added from base)
general construction ControlVerbSimple
  subcase of LexicalVerb
  constructional
    constraints
      argform <-- Control
  meaning: EmbeddedEventProcessSimple
    constraints
      self.m.actionary <-- @process
      self.m.protagonist.ontological-category <-- @entity


// He tried to move
// he wanted to walk
construction SimpleControlType
  subcase of LexicalVerbType, ControlVerbSimple
  meaning
    constraints
      self.m.actionary <-- @process


// he ran into the room
construction SelfMotionType
  subcase of LexicalVerbType
  meaning: MotionPath
    constraints
      self.m.actionary <-- @motion
      self.m.speed <-- @scalarValue
      self.m.speed <-- ".5"
      self.argform <-- ArgForm

// he saw the box
// the box was seen by him
construction PerceptionType
  subcase of LexicalVerbType
  meaning: Perception
    constraints
      self.m.actionary <-- @perception
      self.argform <-- Transitive
      self.verbkind <-- Perceptual


// Path Verbs: "Enter", "Exit", etc.
general construction PathVerbType
  subcase of LexicalVerbType  // 7/8/15
  meaning: ChangeLocation
    evokes BoundedObject as bo
    constraints
      self.m.actionary <-- @motion
      self.m.landmark.ontological-category <-- @location
      self.m.landmark <--> bo.boundedObject

construction PathVerbIn
  subcase of PathVerbType
  meaning: ChangeLocation
    constraints
      self.m.spg.goal <--> bo.interior

construction PathVerbOut
  subcase of  PathVerbType
  meaning: ChangeLocation
    constraints
      self.m.spg.goal <--> bo.exterior


construction ForceDynamicType
  subcase of LexicalVerbType
  constructional
    constraints
      self.argform <-- Transitive
      self.verbkind <-- ForceDynamic // added for testing 5/15/14
      self.expectedVerbForm <-- FiniteOrNonFinite
      // used to constrain which catenative cxns this will occur with
  meaning: GeneralCausation
    constraints
      self.m.fdType <-- @forceDynamic
      self.m.actionary <-- @process

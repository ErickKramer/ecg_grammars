/*
This file defines different types of adjectives. These are primarily lexical adjectives 
(vs. complex, phrasal adjectives, found in adj-complex.grm), and span various categories
of modification:
-PropertyAdjectives: mark a discrete property (red, blue, etc.)
-ScalarAdjectives: describe a point on a scale of a continuous property (big, heavy)
-

*/


package core

import core-modification

//
// Adjectives
// ========== 
// 

general construction Adjective  // parallel to Verb, etc. \
	subcase of  RootType  // for testing
	//subcase of HasNominalFeatures   **** for agreement in Spanish, etc.
	meaning: Modification

general construction LexicalAdjective
   subcase of Adjective, Word
 
 
/**
PROPERTIES
*/ 
    
general construction PropertyAdjective  // parallel to Verb, etc. \
	subcase of  LexicalAdjective
	//subcase of HasNominalFeatures   **** for agreement in Spanish, etc.
	meaning: PropertyModifier	


construction PropertyAdjectiveType
	subcase of PropertyAdjective, GeneralTypeCxn
	meaning: PropertyModifier
	 constraints
	   self.m.property <-- @object-property
	   self.m.value <-- @propValue
	   

construction ColorType  //subcase of non-scale Adj
  subcase of PropertyAdjective, GeneralTypeCxn 
   meaning: PropertyModifier
    constraints
       self.m.property <-- @color 
	   //self.m.domain <= @person 
	   self.m.value <-- @colorValue

/**
SCALES
*/ 

general construction ScalarAdjective
   subcase of PropertyAdjective
   meaning: ScalarModifier

      
   
construction ScalarAdjectiveType
   subcase of GeneralTypeCxn, ScalarAdjective
   meaning: ScalarModifier
     constraints
        self.m.value <-- @scalarValue //@propValue
        self.m.property <-- @object-property
        self.m.domain <-- @item
     

/*
Overspecified, but useful for robot domain. Used to denote adjectival descriptors
like "north" in "north side of the box". Is connected to notion of metonymy,
which needs more work in the grammar.
*/
construction SideAdj-Type
	subcase of GeneralTypeCxn, PropertyAdjective
	meaning
	  constraints
	    self.m.value <-- @sideValue
	    self.m.property <-- @side
	    self.m.domain <-- @part	

 
/*
EMOTIONS
*/ 
general construction EmotionAdjective  // e.g. angry
	subcase of  ScalarAdjective
	meaning: EmotionModifier	
	
	
construction EmotionAdjectiveType
  subcase of EmotionAdjective, GeneralTypeCxn
   meaning: EmotionModifier
    constraints
       self.m.value <-- @scalarValue // inherited ~ intensity; 
       self.m.property <-- @emotionKind // @anger, etc.
	   self.m.domain <-- @person // @person
	   self.m.polarity <-- "*"  // should be either + or - for tokens
	   
	   
	   
/*
HEDGES
Testing, no implementation in "base"
5/12/16 (ST)
"fake", etc.
*/
general construction HedgeAdjective  // 4/8/13
	subcase of  LexicalAdjective
	meaning: HedgeModifier
	
construction HedgeAdjectiveType 
	subcase of HedgeAdjective, GeneralTypeCxn
	meaning
	 constraints
	   self.m.hedgeValue <-- @hedgeVal

package schemas-core
import base

// Modifier Schemas
// A simple modifier schema which is the root of the modifier schema hierarchy
/// Gender? depends how we want to handle Spanish noun-adj agreement
// (Should be constructional, not semantic, but we also want it in SemSpec for ref res.)
schema Modification
  roles
    domain: @entity  // constraint on modifier
    kind // @modifier-type   comparative, etc.
    modifier
    modifiedThing  // could be verb, etc.
    negated: @boolean //@yes or blank
    temporality: @temporality

schema AdverbModification
  subcase of Modification
  roles
    modifiedThing//: Process

schema IntensifierModification
  subcase of AdverbModification
  roles
    modifiedThing: Modification

// modified thing is an RD
schema AdjectiveModification
  subcase of Modification
  roles
    modifiedThing: RD
    constraints
    domain <--> modifiedThing.ontological-category

schema ParticipleModification
  subcase of AdjectiveModification
  roles
    modifiedThing: RD
    modifier: Process  // meaning of PresentParticiple
  constraints
    ignore domain <--> modifiedThing.ontological-category

// A simple modifier schema for properties like "big" or "red"
schema PropertyModifier
  subcase of AdjectiveModification // does not use modifier role
  roles
    domain//: @physicalEntity //or below
    property // becomes scale ?? object-property, other uses ??
    value //string, number - profiled value
  constraints
    domain <-- @physicalEntity

schema ScalarModifier
  subcase of PropertyModifier  // does not use modifier role
  roles
    scale: Scale
    scaleDirection: @direction
  constraints
    scale.value <--> value
    scale.measure <--> property


schema ScalarAdverbModifier
  subcase of AdverbModification  // does not use modifier role
  roles
    property: @scale
    value //string, number


schema ComparativeAdjModifier
  subcase of ScalarModifier
  roles
    base: RD
    direction //: @comparison // more, less, the same?
  constraints
    //base.ontological-category <--> domain



// Emotions pick out different values for polarity
schema EmotionModifier
  subcase of ScalarModifier  // does not use modifier role
  roles
    polarity //  +/_
    // value ~ intensity


// HEDGES: testing (5/12/16, sT)
schema HedgeModifier
  subcase of AdjectiveModification  // does not use modifier role
  roles
    hedgeValue: @hedgeVal
  constraints
    hedgeValue <--> modifiedThing.hedge


// CHANGE
schema ChangedState
  subcase of ScalarModifier
  roles
    oldValue: @propValue
    temporality: @bounded

schema ChangedScale
  subcase of ChangedState
  roles
    oldValue
    temporality
    direction // direction of scale-change: @increase, @decrease ?
              // E.g. "grow" suggests an increase,
              // but doesn't necessarily imply oldValue <-- @small

// General notion of noun-noun modification, without more semantics
schema NounNounModifier
  subcase of Modification
  roles
    modifier: RD
    modifiedThing: RD


// Used for adjunct-vps, like "he ran for 4 hours."
schema AdjunctModification
  subcase of Modification
  roles
    kind
    adjunct

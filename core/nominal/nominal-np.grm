package core
import adjectives

/******************************************************************************
This file contains  constructions for kernel noun phrases.

The assumption is that each NP has an RD structure as its meaning.
This implies that proper nouns, pronouns, and mass/plural nouns make
RD their meaning. For sake of uniformity, we also assume that common
count nouns (which are not NPs) also denote an RD.


******************************************************************************/

 

// Not sure that this is the analysis we want, but it works: "cats are small", "boxes are red"
// 
construction UndeterminedNP_Kernel  // various uses including:  white as snow 
  subcase of UndeterminedNP
  constructional
    constituents
      k: Kernel  
  meaning: RD
    constraints
      self.m.givenness <-- @typeIdentifiable // Michael
	  self.m.bounding <-- @indeterminate   
	  self.m <--> k.m
	  
	  
construction ModifiedProperNoun
	subcase of NP
	constructional
	 constituents
	   adj: Adjective
	   np: ProperNounNP
	 constraints
	  self.features <--> np.features
   form
    constraints
      adj.f meets np.f
   meaning: RD
     constraints
       adj.m.modifiedThing <--> np.m
       self.m <--> np.m
	  
construction  KernelAdj // literal case
  subcase of Kernel 
  constructional
    constituents
     // Why was Adjective "property adjective"?
      ap: Adjective //PropertyAdjective // not optional PropertyAdj 4/26/13
      n: Nominal
    constraints
      self.features <--> n.features
  form
    constraints
      ap.f meets n.f
  meaning: RD
    constraints
      self.m <--> n.m
      self.m <--> ap.m.modifiedThing
      ap.m.temporality <-- @atemporal
      //ap.m.property <--> n.m.scale  //4/26/13  ***** n.m.scale is implicit, e.g inch
      //ap.m.domain <--> n.m.ontological-category //constraint
 
 construction  KernelParticiple //   10/16/13
  subcase of Kernel 
  constructional
    constituents
      ap: PresentParticiple
      n: Nominal
    constraints
      self.features <--> n.features
  form
    constraints
      ap.f meets n.f
  meaning: RD
    evokes ParticipleModification as pm
    constraints
      self.m <--> n.m
      self.m <--> pm.modifiedThing
      ap.m <--> pm.modifier 
      //ap.m.property <--> n.m.scale  //4/26/13  ***** n.m.scale is implicit, e.g inch
      //ap.m.domain <--> n.m.ontological-category //constraint NOT here    


 
construction Kernel-LocPP
   subcase of Kernel
   constructional
     constituents
       n: Kernel
       pp: Loc-PP
   form
     constraints
       n.f meets pp.f
   meaning
     constraints 
       self.m <--> n.m
       n.m <--> pp.m.trajector
       pp.m.temporality <-- @atemporal


construction Kernel-AccompanimentPP
   subcase of Kernel
   constructional
     constituents
       n: Kernel
       pp: AccompanimentPP
   form
     constraints
       n.f meets pp.f
   meaning
     constraints 
       self.m <--> n.m
       n.m <--> pp.m.participant
       

/*
construction KernelAdj-LocPP
	subcase of Kernel
    constructional
     constituents
       ka: KernelAdj
       pp: Loc-PP
   form
     constraints
       ka.f meets pp.f
   meaning
     constraints 
       self.m <--> ka.m
       ka.n.m <--> pp.m.trajector
       pp.m.temporality <-- @atemporal
*/
       
construction  KernelNoAdj // no adjective
  subcase of Kernel
  constructional
    constituents
      n: Nominal
    constraints
      self.features <--> n.features
  form
  meaning: RD
    constraints
      self.m <--> n.m
 


// 	   SpecifierPlusKernel, 


general construction SpecifierPlusKernel  // also subs Specifier3, QuantityNP(2)
  subcase of NP
 
general construction Specifier2PlusKernel   //also see Determiner, Wh, Possesive PN
  subcase of SpecifierPlusKernel
  constructional
    constituents   
      s: SpecifierPhrase                 //12/30/12
      k: Kernel
    constraints
      self.features <--> k.features
      self.features <--> s.features
  form
    constraints 
      s.f before k.f
  meaning
    constraints
      self.m <--> k.m
      self.m <--> s.m


construction DeterminerPlusKernel 
  subcase of Specifier2PlusKernel
  constructional
    constituents   
      s: Determiner  


construction QuantityNP
  subcase of SpecifierPlusKernel
  constructional
    constituents
      q: Quantifier
      k: Kernel
    constraints
      self.features <--> k.features
      //q.features.number <--> k.features.number
  form
    constraints
      q.f before k.f
  meaning: RD
    constraints
      self.m <--> k.m
      //self.m.number <--> q.m.number
      self.m.extras.quantity.amount <--> q.m
      self.m.givenness <-- @uniquelyIdentifiable
      self.m.extras.quantity.units <--> self.m.ontological-category



//  we now also have "his" as Possessive-NP, 

construction PossessivePronounPlusKernel // 
  subcase of Specifier2PlusKernel
  constructional
    constituents   
      s: PossessivePronoun // no need to check case
      k: Kernel 
	meaning
		constraints
			s.m <-> k.m 


// Modifier NP-PP
general construction Kernel-ModifierPP
	subcase of Kernel
	constructional
	  constituents
	    k: Kernel
	    mod: ModifierPP
	form
	  constraints
	    k.f before mod.f
	    

// genitive: dependent noun modifies head
// the weight of the box
// the color of the building
construction PropertyModifierPP
	subcase of Kernel-ModifierPP
	meaning
	  constraints
	    k.m.ontological-category <-- @object-property
	   self.m <--> mod.np.m
	   k.m <--> mod.m.modifier


construction Part-of-Whole
	subcase of Kernel-ModifierPP
	constructional
	  constraints
	    self.features <--> k.features
	meaning
	  evokes PartWhole as pw
	  constraints
	    k.m.ontological-category <-- @part
	   //self.m <--> mod.np.m	
	   self.m <--> k.m
	    self.m <--> self.pw.part
  		mod.np.m <--> self.pw.whole
  		self.m.extensions <--> self.pw	

	   
	   
	   


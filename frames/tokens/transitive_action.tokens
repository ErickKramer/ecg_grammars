do :: Intentionally_affectType :: self.m.Manner <-- "do"
do something (with to) :: Intentionally_affectType :: self.m.Manner <-- "do something (with to)"
do what (with to) :: Intentionally_affectType :: self.m.Manner <-- "do what (with to)"
silence :: SilencingType :: self.m.Manner <-- "silence"
shush :: SilencingType :: self.m.Manner <-- "shush"
hush :: SilencingType :: self.m.Manner <-- "hush"
hush up :: SilencingType :: self.m.Manner <-- "hush up"
shut up :: SilencingType :: self.m.Manner <-- "shut up"
quiet :: SilencingType :: self.m.Manner <-- "quiet"
quiet down :: SilencingType :: self.m.Manner <-- "quiet down"
punish :: Rewards_and_punishmentsType :: self.m.Manner <-- "punish"
reward :: Rewards_and_punishmentsType :: self.m.Manner <-- "reward"
discipline :: Rewards_and_punishmentsType :: self.m.Manner <-- "discipline"
recompense :: Rewards_and_punishmentsType :: self.m.Manner <-- "recompense"
fine :: FiningType :: self.m.Manner <-- "fine"
amerce :: FiningType :: self.m.Manner <-- "amerce"
ticket :: FiningType :: self.m.Manner <-- "ticket"
mulct :: FiningType :: self.m.Manner <-- "mulct"
flog :: Corporal_punishmentType :: self.m.Manner <-- "flog"
cane :: Corporal_punishmentType :: self.m.Manner <-- "cane"
scourge :: Corporal_punishmentType :: self.m.Manner <-- "scourge"
paddle :: Corporal_punishmentType :: self.m.Manner <-- "paddle"
spank :: Corporal_punishmentType :: self.m.Manner <-- "spank"
avenge :: RevengeType :: self.m.Manner <-- "avenge"
retaliate :: RevengeType :: self.m.Manner <-- "retaliate"
revenge :: RevengeType :: self.m.Manner <-- "revenge"
get even :: RevengeType :: self.m.Manner <-- "get even"
get back (at) :: RevengeType :: self.m.Manner <-- "get back (at)"
slice :: CuttingType :: self.m.Manner <-- "slice"
dice :: CuttingType :: self.m.Manner <-- "dice"
mince :: CuttingType :: self.m.Manner <-- "mince"
cube :: CuttingType :: self.m.Manner <-- "cube"
chop :: CuttingType :: self.m.Manner <-- "chop"
fillet :: CuttingType :: self.m.Manner <-- "fillet"
pare :: CuttingType :: self.m.Manner <-- "pare"
cut :: CuttingType :: self.m.Manner <-- "cut"
carve :: CuttingType :: self.m.Manner <-- "carve"
braise :: Apply_heatType :: self.m.Manner <-- "braise"
blanch :: Apply_heatType :: self.m.Manner <-- "blanch"
brown :: Apply_heatType :: self.m.Manner <-- "brown"
broil :: Apply_heatType :: self.m.Manner <-- "broil"
parboil :: Apply_heatType :: self.m.Manner <-- "parboil"
coddle :: Apply_heatType :: self.m.Manner <-- "coddle"
scald :: Apply_heatType :: self.m.Manner <-- "scald"
stew :: Apply_heatType :: self.m.Manner <-- "stew"
char :: Apply_heatType :: self.m.Manner <-- "char"
poach :: Apply_heatType :: self.m.Manner <-- "poach"
steep :: Apply_heatType :: self.m.Manner <-- "steep"
toast :: Apply_heatType :: self.m.Manner <-- "toast"
saute :: Apply_heatType :: self.m.Manner <-- "saute"
microwave :: Apply_heatType :: self.m.Manner <-- "microwave"
steam :: Apply_heatType :: self.m.Manner <-- "steam"
fry :: Apply_heatType :: self.m.Manner <-- "fry"
grill :: Apply_heatType :: self.m.Manner <-- "grill"
roast :: Apply_heatType :: self.m.Manner <-- "roast"
boil :: Apply_heatType :: self.m.Manner <-- "boil"
simmer :: Apply_heatType :: self.m.Manner <-- "simmer"
cook :: Apply_heatType :: self.m.Manner <-- "cook"
bake :: Apply_heatType :: self.m.Manner <-- "bake"
barbecue :: Apply_heatType :: self.m.Manner <-- "barbecue"
deep fry :: Apply_heatType :: self.m.Manner <-- "deep fry"
singe :: Apply_heatType :: self.m.Manner <-- "singe"
sear :: Apply_heatType :: self.m.Manner <-- "sear"
plank :: Apply_heatType :: self.m.Manner <-- "plank"
scorch :: Apply_heatType :: self.m.Manner <-- "scorch"
melt :: Apply_heatType :: self.m.Manner <-- "melt"
attack :: AttackType :: self.m.Manner <-- "attack"
assault :: AttackType :: self.m.Manner <-- "assault"
fall (upon) :: AttackType :: self.m.Manner <-- "fall (upon)"
charge :: AttackType :: self.m.Manner <-- "charge"
lay (into) :: AttackType :: self.m.Manner <-- "lay (into)"
set (upon) :: AttackType :: self.m.Manner <-- "set (upon)"
storm :: AttackType :: self.m.Manner <-- "storm"
strike :: AttackType :: self.m.Manner <-- "strike"
ambush :: AttackType :: self.m.Manner <-- "ambush"
jump :: AttackType :: self.m.Manner <-- "jump"
assail :: AttackType :: self.m.Manner <-- "assail"
raid :: AttackType :: self.m.Manner <-- "raid"
bomb :: AttackType :: self.m.Manner <-- "bomb"
infiltrate :: AttackType :: self.m.Manner <-- "infiltrate"
hit :: AttackType :: self.m.Manner <-- "hit"
bombard :: AttackType :: self.m.Manner <-- "bombard"
besiege :: BesiegingType :: self.m.Manner <-- "besiege"
beleaguer :: BesiegingType :: self.m.Manner <-- "beleaguer"
invest :: BesiegingType :: self.m.Manner <-- "invest"
siege :: BesiegingType :: self.m.Manner <-- "siege"
invade :: InvadingType :: self.m.Manner <-- "invade"
overrun :: InvadingType :: self.m.Manner <-- "overrun"
counter-attack :: CounterattackType :: self.m.Manner <-- "counter-attack"
fasten :: AttachingType :: self.m.Manner <-- "fasten"
attach :: AttachingType :: self.m.Manner <-- "attach"
tie :: AttachingType :: self.m.Manner <-- "tie"
tack :: AttachingType :: self.m.Manner <-- "tack"
glue :: AttachingType :: self.m.Manner <-- "glue"
staple :: AttachingType :: self.m.Manner <-- "staple"
tape :: AttachingType :: self.m.Manner <-- "tape"
pin :: AttachingType :: self.m.Manner <-- "pin"
nail :: AttachingType :: self.m.Manner <-- "nail"
affix :: AttachingType :: self.m.Manner <-- "affix"
chain :: AttachingType :: self.m.Manner <-- "chain"
paste :: AttachingType :: self.m.Manner <-- "paste"
sew :: AttachingType :: self.m.Manner <-- "sew"
stick :: AttachingType :: self.m.Manner <-- "stick"
lash :: AttachingType :: self.m.Manner <-- "lash"
bond :: AttachingType :: self.m.Manner <-- "bond"
cinch :: AttachingType :: self.m.Manner <-- "cinch"
secure :: AttachingType :: self.m.Manner <-- "secure"
fuse :: AttachingType :: self.m.Manner <-- "fuse"
shackle :: AttachingType :: self.m.Manner <-- "shackle"
bind :: AttachingType :: self.m.Manner <-- "bind"
detach :: AttachingType :: self.m.Manner <-- "detach"
manacle :: AttachingType :: self.m.Manner <-- "manacle"
handcuff :: AttachingType :: self.m.Manner <-- "handcuff"
fetter :: AttachingType :: self.m.Manner <-- "fetter"
rivet :: AttachingType :: self.m.Manner <-- "rivet"
tether :: AttachingType :: self.m.Manner <-- "tether"
cement :: AttachingType :: self.m.Manner <-- "cement"
gum :: AttachingType :: self.m.Manner <-- "gum"
fix :: AttachingType :: self.m.Manner <-- "fix"
weld :: AttachingType :: self.m.Manner <-- "weld"
solder :: AttachingType :: self.m.Manner <-- "solder"
agglutinate :: AttachingType :: self.m.Manner <-- "agglutinate"
moor :: AttachingType :: self.m.Manner <-- "moor"
anchor :: AttachingType :: self.m.Manner <-- "anchor"
hitch :: AttachingType :: self.m.Manner <-- "hitch"
untie :: AttachingType :: self.m.Manner <-- "untie"
hook :: AttachingType :: self.m.Manner <-- "hook"
plaster :: AttachingType :: self.m.Manner <-- "plaster"
strap :: AttachingType :: self.m.Manner <-- "strap"
adhere :: AttachingType :: self.m.Manner <-- "adhere"
append :: AttachingType :: self.m.Manner <-- "append"
concatenate :: AttachingType :: self.m.Manner <-- "concatenate"
tack on :: AttachingType :: self.m.Manner <-- "tack on"
yoke :: AttachingType :: self.m.Manner <-- "yoke"
truss :: AttachingType :: self.m.Manner <-- "truss"
link :: AttachingType :: self.m.Manner <-- "link"
connect :: AttachingType :: self.m.Manner <-- "connect"
join :: AttachingType :: self.m.Manner <-- "join"
mount :: AttachingType :: self.m.Manner <-- "mount"
wire :: AttachingType :: self.m.Manner <-- "wire"
bracket :: AttachingType :: self.m.Manner <-- "bracket"
confine :: Inhibit_movementType :: self.m.Manner <-- "confine"
lock :: Inhibit_movementType :: self.m.Manner <-- "lock"
tie :: Inhibit_movementType :: self.m.Manner <-- "tie"
shut up :: Inhibit_movementType :: self.m.Manner <-- "shut up"
restrict :: Inhibit_movementType :: self.m.Manner <-- "restrict"
imprison :: Inhibit_movementType :: self.m.Manner <-- "imprison"
detain :: Inhibit_movementType :: self.m.Manner <-- "detain"
hold :: Inhibit_movementType :: self.m.Manner <-- "hold"
immure :: Inhibit_movementType :: self.m.Manner <-- "immure"
imprison :: ImprisonmentType :: self.m.Manner <-- "imprison"
put away :: ImprisonmentType :: self.m.Manner <-- "put away"
jail :: ImprisonmentType :: self.m.Manner <-- "jail"
incarcerate :: ImprisonmentType :: self.m.Manner <-- "incarcerate"
tie up :: ImmobilizationType :: self.m.Manner <-- "tie up"
lock up :: ImmobilizationType :: self.m.Manner <-- "lock up"
handcuff :: ImmobilizationType :: self.m.Manner <-- "handcuff"
shackle :: ImmobilizationType :: self.m.Manner <-- "shackle"
straitjacket :: ImmobilizationType :: self.m.Manner <-- "straitjacket"
hire :: HiringType :: self.m.Manner <-- "hire"
sign :: HiringType :: self.m.Manner <-- "sign"
retain :: HiringType :: self.m.Manner <-- "retain"
commission :: HiringType :: self.m.Manner <-- "commission"
take on :: HiringType :: self.m.Manner <-- "take on"
give job :: HiringType :: self.m.Manner <-- "give job"
contract :: HiringType :: self.m.Manner <-- "contract"
subcontract :: HiringType :: self.m.Manner <-- "subcontract"
sign on :: HiringType :: self.m.Manner <-- "sign on"
sign up :: HiringType :: self.m.Manner <-- "sign up"
terrorize :: Cause_to_experienceType :: self.m.Manner <-- "terrorize"
torment :: Cause_to_experienceType :: self.m.Manner <-- "torment"
entertain :: Cause_to_experienceType :: self.m.Manner <-- "entertain"
amuse :: Cause_to_experienceType :: self.m.Manner <-- "amuse"
divert :: Cause_to_experienceType :: self.m.Manner <-- "divert"
make up :: ReparationType :: self.m.Manner <-- "make up"
rape :: RapeType :: self.m.Manner <-- "rape"
sexually assault :: RapeType :: self.m.Manner <-- "sexually assault"
dismiss :: FiringType :: self.m.Manner <-- "dismiss"
can :: FiringType :: self.m.Manner <-- "can"
fire :: FiringType :: self.m.Manner <-- "fire"
shitcan :: FiringType :: self.m.Manner <-- "shitcan"
sack :: FiringType :: self.m.Manner <-- "sack"
terminate :: FiringType :: self.m.Manner <-- "terminate"
let go :: FiringType :: self.m.Manner <-- "let go"
lay off :: FiringType :: self.m.Manner <-- "lay off"
give the boot :: FiringType :: self.m.Manner <-- "give the boot"
downsize :: FiringType :: self.m.Manner <-- "downsize"
discharge :: FiringType :: self.m.Manner <-- "discharge"
replace :: ReplacingType :: self.m.Manner <-- "replace"
substitute :: ReplacingType :: self.m.Manner <-- "substitute"
swap out :: ReplacingType :: self.m.Manner <-- "swap out"
exchange :: ReplacingType :: self.m.Manner <-- "exchange"
change :: ReplacingType :: self.m.Manner <-- "change"
switch :: ReplacingType :: self.m.Manner <-- "switch"
arrange :: ArrangingType :: self.m.Manner <-- "arrange"
array :: ArrangingType :: self.m.Manner <-- "array"
deploy :: ArrangingType :: self.m.Manner <-- "deploy"
format :: ArrangingType :: self.m.Manner <-- "format"
set up :: ArrangingType :: self.m.Manner <-- "set up"
order :: ArrangingType :: self.m.Manner <-- "order"
justify :: ArrangingType :: self.m.Manner <-- "justify"
adjust :: AdjustingType :: self.m.Manner <-- "adjust"
tweak :: AdjustingType :: self.m.Manner <-- "tweak"
calibrate :: AdjustingType :: self.m.Manner <-- "calibrate"
extradite :: ExtraditionType :: self.m.Manner <-- "extradite"
hide :: Hiding_objectsType :: self.m.Manner <-- "hide"
conceal :: Hiding_objectsType :: self.m.Manner <-- "conceal"
mask :: Hiding_objectsType :: self.m.Manner <-- "mask"
shroud :: Hiding_objectsType :: self.m.Manner <-- "shroud"
camouflage :: Hiding_objectsType :: self.m.Manner <-- "camouflage"
block :: Hiding_objectsType :: self.m.Manner <-- "block"
cover :: Hiding_objectsType :: self.m.Manner <-- "cover"
shoot :: Hit_targetType :: self.m.Manner <-- "shoot"
hit :: Hit_targetType :: self.m.Manner <-- "hit"
pick off :: Hit_targetType :: self.m.Manner <-- "pick off"
bathe :: GroomingType :: self.m.Manner <-- "bathe"
wash :: GroomingType :: self.m.Manner <-- "wash"
lave :: GroomingType :: self.m.Manner <-- "lave"
shower :: GroomingType :: self.m.Manner <-- "shower"
pluck :: GroomingType :: self.m.Manner <-- "pluck"
floss :: GroomingType :: self.m.Manner <-- "floss"
shave :: GroomingType :: self.m.Manner <-- "shave"
wax :: GroomingType :: self.m.Manner <-- "wax"
comb :: GroomingType :: self.m.Manner <-- "comb"
shampoo :: GroomingType :: self.m.Manner <-- "shampoo"
manicure :: GroomingType :: self.m.Manner <-- "manicure"
moisturize :: GroomingType :: self.m.Manner <-- "moisturize"
soap :: GroomingType :: self.m.Manner <-- "soap"
cleanse :: GroomingType :: self.m.Manner <-- "cleanse"
groom :: GroomingType :: self.m.Manner <-- "groom"
brush [teeth] :: GroomingType :: self.m.Manner <-- "brush [teeth]"
brush [hair] :: GroomingType :: self.m.Manner <-- "brush [hair]"
plait :: GroomingType :: self.m.Manner <-- "plait"
file :: GroomingType :: self.m.Manner <-- "file"
amalgamate :: Cause_to_amalgamateType :: self.m.Manner <-- "amalgamate"
combine :: Cause_to_amalgamateType :: self.m.Manner <-- "combine"
fuse :: Cause_to_amalgamateType :: self.m.Manner <-- "fuse"
join :: Cause_to_amalgamateType :: self.m.Manner <-- "join"
merge :: Cause_to_amalgamateType :: self.m.Manner <-- "merge"
unify :: Cause_to_amalgamateType :: self.m.Manner <-- "unify"
unite :: Cause_to_amalgamateType :: self.m.Manner <-- "unite"
meld :: Cause_to_amalgamateType :: self.m.Manner <-- "meld"
blend :: Cause_to_amalgamateType :: self.m.Manner <-- "blend"
commingle :: Cause_to_amalgamateType :: self.m.Manner <-- "commingle"
intermix :: Cause_to_amalgamateType :: self.m.Manner <-- "intermix"
mix :: Cause_to_amalgamateType :: self.m.Manner <-- "mix"
lump :: Cause_to_amalgamateType :: self.m.Manner <-- "lump"
bring together :: Cause_to_amalgamateType :: self.m.Manner <-- "bring together"
coalesce :: Cause_to_amalgamateType :: self.m.Manner <-- "coalesce"
compound :: Cause_to_amalgamateType :: self.m.Manner <-- "compound"
conflate :: Cause_to_amalgamateType :: self.m.Manner <-- "conflate"
consolidate :: Cause_to_amalgamateType :: self.m.Manner <-- "consolidate"
flux :: Cause_to_amalgamateType :: self.m.Manner <-- "flux"
admix :: Cause_to_amalgamateType :: self.m.Manner <-- "admix"
jumble :: Cause_to_amalgamateType :: self.m.Manner <-- "jumble"
pair :: Cause_to_amalgamateType :: self.m.Manner <-- "pair"
throw together :: Cause_to_amalgamateType :: self.m.Manner <-- "throw together"
fold :: Cause_to_amalgamateType :: self.m.Manner <-- "fold"
button :: ClosureType :: self.m.Manner <-- "button"
open :: ClosureType :: self.m.Manner <-- "open"
close :: ClosureType :: self.m.Manner <-- "close"
buckle :: ClosureType :: self.m.Manner <-- "buckle"
cap :: ClosureType :: self.m.Manner <-- "cap"
zip :: ClosureType :: self.m.Manner <-- "zip"
lace :: ClosureType :: self.m.Manner <-- "lace"
unzip :: ClosureType :: self.m.Manner <-- "unzip"
unbuckle :: ClosureType :: self.m.Manner <-- "unbuckle"
uncork :: ClosureType :: self.m.Manner <-- "uncork"
unscrew :: ClosureType :: self.m.Manner <-- "unscrew"
seal :: ClosureType :: self.m.Manner <-- "seal"
fasten :: ClosureType :: self.m.Manner <-- "fasten"
unfasten :: ClosureType :: self.m.Manner <-- "unfasten"
tie :: ClosureType :: self.m.Manner <-- "tie"
assemble :: Gathering_upType :: self.m.Manner <-- "assemble"
gather :: Gathering_upType :: self.m.Manner <-- "gather"
bring together :: Gathering_upType :: self.m.Manner <-- "bring together"
convene :: Gathering_upType :: self.m.Manner <-- "convene"
herd :: Gathering_upType :: self.m.Manner <-- "herd"
collect :: Gathering_upType :: self.m.Manner <-- "collect"
amass :: Gathering_upType :: self.m.Manner <-- "amass"
round up :: Gathering_upType :: self.m.Manner <-- "round up"
clasp :: ManipulationType :: self.m.Manner <-- "clasp"
claw :: ManipulationType :: self.m.Manner <-- "claw"
clutch :: ManipulationType :: self.m.Manner <-- "clutch"
finger :: ManipulationType :: self.m.Manner <-- "finger"
grab :: ManipulationType :: self.m.Manner <-- "grab"
grasp :: ManipulationType :: self.m.Manner <-- "grasp"
grip :: ManipulationType :: self.m.Manner <-- "grip"
knead :: ManipulationType :: self.m.Manner <-- "knead"
massage :: ManipulationType :: self.m.Manner <-- "massage"
nip :: ManipulationType :: self.m.Manner <-- "nip"
nudge :: ManipulationType :: self.m.Manner <-- "nudge"
paw :: ManipulationType :: self.m.Manner <-- "paw"
pinch :: ManipulationType :: self.m.Manner <-- "pinch"
pull :: ManipulationType :: self.m.Manner <-- "pull"
push :: ManipulationType :: self.m.Manner <-- "push"
seize :: ManipulationType :: self.m.Manner <-- "seize"
squeeze :: ManipulationType :: self.m.Manner <-- "squeeze"
tug :: ManipulationType :: self.m.Manner <-- "tug"
tweak :: ManipulationType :: self.m.Manner <-- "tweak"
wring :: ManipulationType :: self.m.Manner <-- "wring"
yank :: ManipulationType :: self.m.Manner <-- "yank"
fumble :: ManipulationType :: self.m.Manner <-- "fumble"
grope :: ManipulationType :: self.m.Manner <-- "grope"
rub :: ManipulationType :: self.m.Manner <-- "rub"
grab hold :: ManipulationType :: self.m.Manner <-- "grab hold"
lick :: ManipulationType :: self.m.Manner <-- "lick"
touch :: ManipulationType :: self.m.Manner <-- "touch"
kiss :: ManipulationType :: self.m.Manner <-- "kiss"
caress :: ManipulationType :: self.m.Manner <-- "caress"
stroke :: ManipulationType :: self.m.Manner <-- "stroke"
diddle :: ManipulationType :: self.m.Manner <-- "diddle"
hold :: ManipulationType :: self.m.Manner <-- "hold"
tickle :: ManipulationType :: self.m.Manner <-- "tickle"
handle :: ManipulationType :: self.m.Manner <-- "handle"
lap :: IngestionType :: self.m.Manner <-- "lap"
slurp :: IngestionType :: self.m.Manner <-- "slurp"
swig :: IngestionType :: self.m.Manner <-- "swig"
guzzle :: IngestionType :: self.m.Manner <-- "guzzle"
gulp :: IngestionType :: self.m.Manner <-- "gulp"
down :: IngestionType :: self.m.Manner <-- "down"
sip :: IngestionType :: self.m.Manner <-- "sip"
sup :: IngestionType :: self.m.Manner <-- "sup"
munch :: IngestionType :: self.m.Manner <-- "munch"
nosh :: IngestionType :: self.m.Manner <-- "nosh"
feast :: IngestionType :: self.m.Manner <-- "feast"
feed :: IngestionType :: self.m.Manner <-- "feed"
snack :: IngestionType :: self.m.Manner <-- "snack"
breakfast :: IngestionType :: self.m.Manner <-- "breakfast"
lunch :: IngestionType :: self.m.Manner <-- "lunch"
dine :: IngestionType :: self.m.Manner <-- "dine"
ingest :: IngestionType :: self.m.Manner <-- "ingest"
nurse :: IngestionType :: self.m.Manner <-- "nurse"
nibble :: IngestionType :: self.m.Manner <-- "nibble"
eat :: IngestionType :: self.m.Manner <-- "eat"
drink :: IngestionType :: self.m.Manner <-- "drink"
gobble :: IngestionType :: self.m.Manner <-- "gobble"
devour :: IngestionType :: self.m.Manner <-- "devour"
consume :: IngestionType :: self.m.Manner <-- "consume"
have :: IngestionType :: self.m.Manner <-- "have"
imbibe :: IngestionType :: self.m.Manner <-- "imbibe"
quaff :: IngestionType :: self.m.Manner <-- "quaff"
swill :: IngestionType :: self.m.Manner <-- "swill"
put away :: IngestionType :: self.m.Manner <-- "put away"
put back :: IngestionType :: self.m.Manner <-- "put back"
tuck :: IngestionType :: self.m.Manner <-- "tuck"
aim :: AimingType :: self.m.Manner <-- "aim"
target :: AimingType :: self.m.Manner <-- "target"
direct :: AimingType :: self.m.Manner <-- "direct"
release :: ReleasingType :: self.m.Manner <-- "release"
let go :: ReleasingType :: self.m.Manner <-- "let go"
set free :: ReleasingType :: self.m.Manner <-- "set free"
soak :: SoakingType :: self.m.Manner <-- "soak"
marinate :: SoakingType :: self.m.Manner <-- "marinate"
steep :: SoakingType :: self.m.Manner <-- "steep"
deceive :: Manipulate_into_doingType :: self.m.Manner <-- "deceive"
defraud :: Manipulate_into_doingType :: self.m.Manner <-- "defraud"
con :: Manipulate_into_doingType :: self.m.Manner <-- "con"
badger :: Manipulate_into_doingType :: self.m.Manner <-- "badger"
trick :: Manipulate_into_doingType :: self.m.Manner <-- "trick"
flatter :: Manipulate_into_doingType :: self.m.Manner <-- "flatter"
lure :: Manipulate_into_doingType :: self.m.Manner <-- "lure"
cheat :: Manipulate_into_doingType :: self.m.Manner <-- "cheat"
manipulate :: Manipulate_into_doingType :: self.m.Manner <-- "manipulate"
harass :: Manipulate_into_doingType :: self.m.Manner <-- "harass"
blackmail :: Manipulate_into_doingType :: self.m.Manner <-- "blackmail"
cajole :: Manipulate_into_doingType :: self.m.Manner <-- "cajole"
bully :: Manipulate_into_doingType :: self.m.Manner <-- "bully"
fool :: Manipulate_into_doingType :: self.m.Manner <-- "fool"
dupe :: Manipulate_into_doingType :: self.m.Manner <-- "dupe"
incite :: Talking_intoType :: self.m.Manner <-- "incite"
induce :: Talking_intoType :: self.m.Manner <-- "induce"
influence :: Talking_intoType :: self.m.Manner <-- "influence"
inspire :: Talking_intoType :: self.m.Manner <-- "inspire"
lead :: Talking_intoType :: self.m.Manner <-- "lead"
talk :: Talking_intoType :: self.m.Manner <-- "talk"
take :: TakingType :: self.m.Manner <-- "take"
seize :: TakingType :: self.m.Manner <-- "seize"
grab :: TakingType :: self.m.Manner <-- "grab"
commandeer :: TakingType :: self.m.Manner <-- "commandeer"
steal :: TheftType :: self.m.Manner <-- "steal"
purloin :: TheftType :: self.m.Manner <-- "purloin"
filch :: TheftType :: self.m.Manner <-- "filch"
snitch :: TheftType :: self.m.Manner <-- "snitch"
pilfer :: TheftType :: self.m.Manner <-- "pilfer"
swipe :: TheftType :: self.m.Manner <-- "swipe"
lift :: TheftType :: self.m.Manner <-- "lift"
pinch :: TheftType :: self.m.Manner <-- "pinch"
thieve :: TheftType :: self.m.Manner <-- "thieve"
snatch :: TheftType :: self.m.Manner <-- "snatch"
nick :: TheftType :: self.m.Manner <-- "nick"
embezzle :: TheftType :: self.m.Manner <-- "embezzle"
misappropriate :: TheftType :: self.m.Manner <-- "misappropriate"
shoplift :: TheftType :: self.m.Manner <-- "shoplift"
pickpocket :: TheftType :: self.m.Manner <-- "pickpocket"
flog :: TheftType :: self.m.Manner <-- "flog"
abstract :: TheftType :: self.m.Manner <-- "abstract"
cop :: TheftType :: self.m.Manner <-- "cop"
rustle :: TheftType :: self.m.Manner <-- "rustle"
bag :: TheftType :: self.m.Manner <-- "bag"
stain :: Processing_materialsType :: self.m.Manner <-- "stain"
dye :: Processing_materialsType :: self.m.Manner <-- "dye"
etch :: Processing_materialsType :: self.m.Manner <-- "etch"
treat :: Processing_materialsType :: self.m.Manner <-- "treat"
galvanize :: Processing_materialsType :: self.m.Manner <-- "galvanize"
enrich :: Processing_materialsType :: self.m.Manner <-- "enrich"
process :: Processing_materialsType :: self.m.Manner <-- "process"
reprocess :: Processing_materialsType :: self.m.Manner <-- "reprocess"
weaponize :: Processing_materialsType :: self.m.Manner <-- "weaponize"
spin :: Processing_materialsType :: self.m.Manner <-- "spin"
develop :: Processing_materialsType :: self.m.Manner <-- "develop"
mummify :: PreservingType :: self.m.Manner <-- "mummify"
pickle :: PreservingType :: self.m.Manner <-- "pickle"
embalm :: PreservingType :: self.m.Manner <-- "embalm"
salt :: PreservingType :: self.m.Manner <-- "salt"
cure :: PreservingType :: self.m.Manner <-- "cure"
can :: PreservingType :: self.m.Manner <-- "can"
preserve :: PreservingType :: self.m.Manner <-- "preserve"
dry :: PreservingType :: self.m.Manner <-- "dry"
study :: Education_teachingType :: self.m.Manner <-- "study"
tutor :: Education_teachingType :: self.m.Manner <-- "tutor"
coach :: Education_teachingType :: self.m.Manner <-- "coach"
educate :: Education_teachingType :: self.m.Manner <-- "educate"
learn :: Education_teachingType :: self.m.Manner <-- "learn"
school :: Education_teachingType :: self.m.Manner <-- "school"
train :: Education_teachingType :: self.m.Manner <-- "train"
instruct :: Education_teachingType :: self.m.Manner <-- "instruct"
teach :: Education_teachingType :: self.m.Manner <-- "teach"
master :: Education_teachingType :: self.m.Manner <-- "master"
cram :: Education_teachingType :: self.m.Manner <-- "cram"
use :: UsingType :: self.m.Manner <-- "use"
employ :: UsingType :: self.m.Manner <-- "employ"
avail oneself :: UsingType :: self.m.Manner <-- "avail oneself"
operate :: UsingType :: self.m.Manner <-- "operate"
apply :: UsingType :: self.m.Manner <-- "apply"
utilise :: UsingType :: self.m.Manner <-- "utilise"
exercise :: UsingType :: self.m.Manner <-- "exercise"
operate :: Operating_a_systemType :: self.m.Manner <-- "operate"
run :: Operating_a_systemType :: self.m.Manner <-- "run"
manage :: Operating_a_systemType :: self.m.Manner <-- "manage"
balloon :: Operate_vehicleType :: self.m.Manner <-- "balloon"
bicycle :: Operate_vehicleType :: self.m.Manner <-- "bicycle"
bike :: Operate_vehicleType :: self.m.Manner <-- "bike"
boat :: Operate_vehicleType :: self.m.Manner <-- "boat"
canoe :: Operate_vehicleType :: self.m.Manner <-- "canoe"
caravan :: Operate_vehicleType :: self.m.Manner <-- "caravan"
cycle :: Operate_vehicleType :: self.m.Manner <-- "cycle"
motor :: Operate_vehicleType :: self.m.Manner <-- "motor"
paddle :: Operate_vehicleType :: self.m.Manner <-- "paddle"
parachute :: Operate_vehicleType :: self.m.Manner <-- "parachute"
pedal :: Operate_vehicleType :: self.m.Manner <-- "pedal"
punt :: Operate_vehicleType :: self.m.Manner <-- "punt"
raft :: Operate_vehicleType :: self.m.Manner <-- "raft"
row :: Operate_vehicleType :: self.m.Manner <-- "row"
skate :: Operate_vehicleType :: self.m.Manner <-- "skate"
sledge :: Operate_vehicleType :: self.m.Manner <-- "sledge"
tack :: Operate_vehicleType :: self.m.Manner <-- "tack"
taxi :: Operate_vehicleType :: self.m.Manner <-- "taxi"
toboggan :: Operate_vehicleType :: self.m.Manner <-- "toboggan"
cruise :: Operate_vehicleType :: self.m.Manner <-- "cruise"
drive :: Operate_vehicleType :: self.m.Manner <-- "drive"
ride :: Operate_vehicleType :: self.m.Manner <-- "ride"
sail :: Operate_vehicleType :: self.m.Manner <-- "sail"
fly :: Operate_vehicleType :: self.m.Manner <-- "fly"
shoot :: Use_firearmType :: self.m.Manner <-- "shoot"
fire :: Use_firearmType :: self.m.Manner <-- "fire"
discharge :: Use_firearmType :: self.m.Manner <-- "discharge"
exhaust :: Expend_resourceType :: self.m.Manner <-- "exhaust"
use up :: Expend_resourceType :: self.m.Manner <-- "use up"
expend :: Expend_resourceType :: self.m.Manner <-- "expend"
devour :: Expend_resourceType :: self.m.Manner <-- "devour"
deplete :: Expend_resourceType :: self.m.Manner <-- "deplete"
consume :: Expend_resourceType :: self.m.Manner <-- "consume"
spend :: Expend_resourceType :: self.m.Manner <-- "spend"
squander :: Expend_resourceType :: self.m.Manner <-- "squander"
eat up :: Expend_resourceType :: self.m.Manner <-- "eat up"
go through :: Expend_resourceType :: self.m.Manner <-- "go through"
run out :: Expend_resourceType :: self.m.Manner <-- "run out"
detonate :: Detonate_explosiveType :: self.m.Manner <-- "detonate"
explode :: Detonate_explosiveType :: self.m.Manner <-- "explode"
blow :: Detonate_explosiveType :: self.m.Manner <-- "blow"
blow up :: Detonate_explosiveType :: self.m.Manner <-- "blow up"
wind :: Manipulate_into_shapeType :: self.m.Manner <-- "wind"
loop :: Manipulate_into_shapeType :: self.m.Manner <-- "loop"
coil :: Manipulate_into_shapeType :: self.m.Manner <-- "coil"
twist :: Manipulate_into_shapeType :: self.m.Manner <-- "twist"
curl :: Manipulate_into_shapeType :: self.m.Manner <-- "curl"
mold :: Manipulate_into_shapeType :: self.m.Manner <-- "mold"
roll (into) :: Manipulate_into_shapeType :: self.m.Manner <-- "roll (into)"
tie :: Rope_manipulationType :: self.m.Manner <-- "tie"
knot :: Rope_manipulationType :: self.m.Manner <-- "knot"
tangle :: Rope_manipulationType :: self.m.Manner <-- "tangle"
braid :: Rope_manipulationType :: self.m.Manner <-- "braid"
arrest :: ArrestType :: self.m.Manner <-- "arrest"
apprehend :: ArrestType :: self.m.Manner <-- "apprehend"
bust :: ArrestType :: self.m.Manner <-- "bust"
nab :: ArrestType :: self.m.Manner <-- "nab"
collar :: ArrestType :: self.m.Manner <-- "collar"
cop :: ArrestType :: self.m.Manner <-- "cop"
book :: ArrestType :: self.m.Manner <-- "book"
summons :: ArrestType :: self.m.Manner <-- "summons"
show :: Cause_to_perceiveType :: self.m.Manner <-- "show"
demonstrate :: Cause_to_perceiveType :: self.m.Manner <-- "demonstrate"
present :: Cause_to_perceiveType :: self.m.Manner <-- "present"
point :: Cause_to_perceiveType :: self.m.Manner <-- "point"
depict :: Cause_to_perceiveType :: self.m.Manner <-- "depict"
represent :: Cause_to_perceiveType :: self.m.Manner <-- "represent"
exhibit :: Cause_to_perceiveType :: self.m.Manner <-- "exhibit"
present[medical] :: Cause_to_perceiveType :: self.m.Manner <-- "present[medical]"
bring to attention :: Cause_to_perceiveType :: self.m.Manner <-- "bring to attention"
communicate :: CommunicationType :: self.m.Manner <-- "communicate"
indicate :: CommunicationType :: self.m.Manner <-- "indicate"
signal :: CommunicationType :: self.m.Manner <-- "signal"
convey :: CommunicationType :: self.m.Manner <-- "convey"
say :: CommunicationType :: self.m.Manner <-- "say"
share :: CommunicationType :: self.m.Manner <-- "share"
bark :: Communication_noiseType :: self.m.Manner <-- "bark"
bawl :: Communication_noiseType :: self.m.Manner <-- "bawl"
bellow :: Communication_noiseType :: self.m.Manner <-- "bellow"
bleat :: Communication_noiseType :: self.m.Manner <-- "bleat"
bray :: Communication_noiseType :: self.m.Manner <-- "bray"
burble :: Communication_noiseType :: self.m.Manner <-- "burble"
cackle :: Communication_noiseType :: self.m.Manner <-- "cackle"
chirp :: Communication_noiseType :: self.m.Manner <-- "chirp"
chirrup :: Communication_noiseType :: self.m.Manner <-- "chirrup"
chuckle :: Communication_noiseType :: self.m.Manner <-- "chuckle"
cluck :: Communication_noiseType :: self.m.Manner <-- "cluck"
coo :: Communication_noiseType :: self.m.Manner <-- "coo"
croak :: Communication_noiseType :: self.m.Manner <-- "croak"
croon :: Communication_noiseType :: self.m.Manner <-- "croon"
crow :: Communication_noiseType :: self.m.Manner <-- "crow"
cry :: Communication_noiseType :: self.m.Manner <-- "cry"
drone :: Communication_noiseType :: self.m.Manner <-- "drone"
gasp :: Communication_noiseType :: self.m.Manner <-- "gasp"
grate :: Communication_noiseType :: self.m.Manner <-- "grate"
groan :: Communication_noiseType :: self.m.Manner <-- "groan"
growl :: Communication_noiseType :: self.m.Manner <-- "growl"
grunt :: Communication_noiseType :: self.m.Manner <-- "grunt"
gurgle :: Communication_noiseType :: self.m.Manner <-- "gurgle"
hiss :: Communication_noiseType :: self.m.Manner <-- "hiss"
hoot :: Communication_noiseType :: self.m.Manner <-- "hoot"
howl :: Communication_noiseType :: self.m.Manner <-- "howl"
moan :: Communication_noiseType :: self.m.Manner <-- "moan"
murmur :: Communication_noiseType :: self.m.Manner <-- "murmur"
purr :: Communication_noiseType :: self.m.Manner <-- "purr"
rap :: Communication_noiseType :: self.m.Manner <-- "rap"
rasp :: Communication_noiseType :: self.m.Manner <-- "rasp"
rattle :: Communication_noiseType :: self.m.Manner <-- "rattle"
roar :: Communication_noiseType :: self.m.Manner <-- "roar"
rumble :: Communication_noiseType :: self.m.Manner <-- "rumble"
scream :: Communication_noiseType :: self.m.Manner <-- "scream"
screech :: Communication_noiseType :: self.m.Manner <-- "screech"
shriek :: Communication_noiseType :: self.m.Manner <-- "shriek"
shrill :: Communication_noiseType :: self.m.Manner <-- "shrill"
snarl :: Communication_noiseType :: self.m.Manner <-- "snarl"
snort :: Communication_noiseType :: self.m.Manner <-- "snort"
splutter :: Communication_noiseType :: self.m.Manner <-- "splutter"
sputter :: Communication_noiseType :: self.m.Manner <-- "sputter"
squawk :: Communication_noiseType :: self.m.Manner <-- "squawk"
squeak :: Communication_noiseType :: self.m.Manner <-- "squeak"
squeal :: Communication_noiseType :: self.m.Manner <-- "squeal"
thunder :: Communication_noiseType :: self.m.Manner <-- "thunder"
titter :: Communication_noiseType :: self.m.Manner <-- "titter"
trill :: Communication_noiseType :: self.m.Manner <-- "trill"
trumpet :: Communication_noiseType :: self.m.Manner <-- "trumpet"
twitter :: Communication_noiseType :: self.m.Manner <-- "twitter"
wail :: Communication_noiseType :: self.m.Manner <-- "wail"
warble :: Communication_noiseType :: self.m.Manner <-- "warble"
wheeze :: Communication_noiseType :: self.m.Manner <-- "wheeze"
whimper :: Communication_noiseType :: self.m.Manner <-- "whimper"
whine :: Communication_noiseType :: self.m.Manner <-- "whine"
whoop :: Communication_noiseType :: self.m.Manner <-- "whoop"
yell :: Communication_noiseType :: self.m.Manner <-- "yell"
yelp :: Communication_noiseType :: self.m.Manner <-- "yelp"
reassure :: ReassuringType :: self.m.Manner <-- "reassure"
beckon :: GestureType :: self.m.Manner <-- "beckon"
gesticulate :: GestureType :: self.m.Manner <-- "gesticulate"
gesture :: GestureType :: self.m.Manner <-- "gesture"
motion :: GestureType :: self.m.Manner <-- "motion"
nod :: GestureType :: self.m.Manner <-- "nod"
signal :: GestureType :: self.m.Manner <-- "signal"
wave :: GestureType :: self.m.Manner <-- "wave"
babble :: Communication_mannerType :: self.m.Manner <-- "babble"
bluster :: Communication_mannerType :: self.m.Manner <-- "bluster"
chant :: Communication_mannerType :: self.m.Manner <-- "chant"
chatter :: Communication_mannerType :: self.m.Manner <-- "chatter"
drawl :: Communication_mannerType :: self.m.Manner <-- "drawl"
gabble :: Communication_mannerType :: self.m.Manner <-- "gabble"
gibber :: Communication_mannerType :: self.m.Manner <-- "gibber"
jabber :: Communication_mannerType :: self.m.Manner <-- "jabber"
lisp :: Communication_mannerType :: self.m.Manner <-- "lisp"
mouth :: Communication_mannerType :: self.m.Manner <-- "mouth"
mumble :: Communication_mannerType :: self.m.Manner <-- "mumble"
mutter :: Communication_mannerType :: self.m.Manner <-- "mutter"
natter :: Communication_mannerType :: self.m.Manner <-- "natter"
prattle :: Communication_mannerType :: self.m.Manner <-- "prattle"
rant :: Communication_mannerType :: self.m.Manner <-- "rant"
rave :: Communication_mannerType :: self.m.Manner <-- "rave"
shout :: Communication_mannerType :: self.m.Manner <-- "shout"
simper :: Communication_mannerType :: self.m.Manner <-- "simper"
sing :: Communication_mannerType :: self.m.Manner <-- "sing"
slur :: Communication_mannerType :: self.m.Manner <-- "slur"
stammer :: Communication_mannerType :: self.m.Manner <-- "stammer"
stutter :: Communication_mannerType :: self.m.Manner <-- "stutter"
whisper :: Communication_mannerType :: self.m.Manner <-- "whisper"
blabber :: Communication_mannerType :: self.m.Manner <-- "blabber"
answer :: Communication_responseType :: self.m.Manner <-- "answer"
counter :: Communication_responseType :: self.m.Manner <-- "counter"
rejoin :: Communication_responseType :: self.m.Manner <-- "rejoin"
reply :: Communication_responseType :: self.m.Manner <-- "reply"
respond :: Communication_responseType :: self.m.Manner <-- "respond"
retort :: Communication_responseType :: self.m.Manner <-- "retort"
come back :: Communication_responseType :: self.m.Manner <-- "come back"
acknowledge :: Communication_responseType :: self.m.Manner <-- "acknowledge"
summarize :: SummarizingType :: self.m.Manner <-- "summarize"
boil down :: SummarizingType :: self.m.Manner <-- "boil down"
outline :: SummarizingType :: self.m.Manner <-- "outline"
sum up :: SummarizingType :: self.m.Manner <-- "sum up"
barricade :: Change_accessibilityType :: self.m.Manner <-- "barricade"
blockade :: Change_accessibilityType :: self.m.Manner <-- "blockade"
cordon off :: Change_accessibilityType :: self.m.Manner <-- "cordon off"
block off :: Change_accessibilityType :: self.m.Manner <-- "block off"
detach :: DetachingType :: self.m.Manner <-- "detach"
unhitch :: DetachingType :: self.m.Manner <-- "unhitch"
unhook :: DetachingType :: self.m.Manner <-- "unhook"
unfasten :: DetachingType :: self.m.Manner <-- "unfasten"
untie :: DetachingType :: self.m.Manner <-- "untie"
unmoor :: DetachingType :: self.m.Manner <-- "unmoor"
unchain :: DetachingType :: self.m.Manner <-- "unchain"
decouple :: DetachingType :: self.m.Manner <-- "decouple"
unhinge :: DetachingType :: self.m.Manner <-- "unhinge"
undo :: DetachingType :: self.m.Manner <-- "undo"
offend :: Cause_emotionType :: self.m.Manner <-- "offend"
affront :: Cause_emotionType :: self.m.Manner <-- "affront"
insult :: Cause_emotionType :: self.m.Manner <-- "insult"
concern :: Cause_emotionType :: self.m.Manner <-- "concern"
call names :: Cause_emotionType :: self.m.Manner <-- "call names"
develop :: Cause_to_make_progressType :: self.m.Manner <-- "develop"
perfect :: Cause_to_make_progressType :: self.m.Manner <-- "perfect"
improve :: Cause_to_make_progressType :: self.m.Manner <-- "improve"
mature :: Cause_to_make_progressType :: self.m.Manner <-- "mature"
advance :: Cause_to_make_progressType :: self.m.Manner <-- "advance"
accredit :: AppointingType :: self.m.Manner <-- "accredit"
appoint :: AppointingType :: self.m.Manner <-- "appoint"
designate :: AppointingType :: self.m.Manner <-- "designate"
finger :: AppointingType :: self.m.Manner <-- "finger"
tap :: AppointingType :: self.m.Manner <-- "tap"
name :: AppointingType :: self.m.Manner <-- "name"
appoint :: Change_of_leadershipType :: self.m.Manner <-- "appoint"
elect :: Change_of_leadershipType :: self.m.Manner <-- "elect"
mutiny :: Change_of_leadershipType :: self.m.Manner <-- "mutiny"
overthrow :: Change_of_leadershipType :: self.m.Manner <-- "overthrow"
revolt :: Change_of_leadershipType :: self.m.Manner <-- "revolt"
oust :: Change_of_leadershipType :: self.m.Manner <-- "oust"
depose :: Change_of_leadershipType :: self.m.Manner <-- "depose"
dethrone :: Change_of_leadershipType :: self.m.Manner <-- "dethrone"
take over :: Change_of_leadershipType :: self.m.Manner <-- "take over"
topple :: Change_of_leadershipType :: self.m.Manner <-- "topple"
throne :: Change_of_leadershipType :: self.m.Manner <-- "throne"
enthrone :: Change_of_leadershipType :: self.m.Manner <-- "enthrone"
coronate :: Change_of_leadershipType :: self.m.Manner <-- "coronate"
crown :: Change_of_leadershipType :: self.m.Manner <-- "crown"
vest :: Change_of_leadershipType :: self.m.Manner <-- "vest"
install :: Change_of_leadershipType :: self.m.Manner <-- "install"
activate :: Change_operational_stateType :: self.m.Manner <-- "activate"
turn on :: Change_operational_stateType :: self.m.Manner <-- "turn on"
turn off :: Change_operational_stateType :: self.m.Manner <-- "turn off"
boot :: Change_operational_stateType :: self.m.Manner <-- "boot"
shut off :: Change_operational_stateType :: self.m.Manner <-- "shut off"
deactivate :: Change_operational_stateType :: self.m.Manner <-- "deactivate"
cut :: Change_operational_stateType :: self.m.Manner <-- "cut"
cut off :: Change_operational_stateType :: self.m.Manner <-- "cut off"
kill :: Change_operational_stateType :: self.m.Manner <-- "kill"
limit :: LimitingType :: self.m.Manner <-- "limit"
abandon :: AbandonmentType :: self.m.Manner <-- "abandon"
leave :: AbandonmentType :: self.m.Manner <-- "leave"
forget :: AbandonmentType :: self.m.Manner <-- "forget"
break out :: Breaking_out_captiveType :: self.m.Manner <-- "break out"
free :: Breaking_out_captiveType :: self.m.Manner <-- "free"
bisect :: SeparatingType :: self.m.Manner <-- "bisect"
divide :: SeparatingType :: self.m.Manner <-- "divide"
part :: SeparatingType :: self.m.Manner <-- "part"
partition :: SeparatingType :: self.m.Manner <-- "partition"
section :: SeparatingType :: self.m.Manner <-- "section"
segment :: SeparatingType :: self.m.Manner <-- "segment"
segregate :: SeparatingType :: self.m.Manner <-- "segregate"
separate :: SeparatingType :: self.m.Manner <-- "separate"
split :: SeparatingType :: self.m.Manner <-- "split"
sever :: SeparatingType :: self.m.Manner <-- "sever"
make arrangements :: Making_arrangementsType :: self.m.Manner <-- "make arrangements"
plan :: Making_arrangementsType :: self.m.Manner <-- "plan"
organize :: Making_arrangementsType :: self.m.Manner <-- "organize"
set up :: Making_arrangementsType :: self.m.Manner <-- "set up"
put together :: Making_arrangementsType :: self.m.Manner <-- "put together"
rescue :: RescuingType :: self.m.Manner <-- "rescue"
save :: RescuingType :: self.m.Manner <-- "save"
appear :: PublishingType :: self.m.Manner <-- "appear"
publish :: PublishingType :: self.m.Manner <-- "publish"
release :: PublishingType :: self.m.Manner <-- "release"
put out :: PublishingType :: self.m.Manner <-- "put out"
sell short :: Short_sellingType :: self.m.Manner <-- "sell short"
freeze :: Cause_change_of_phaseType :: self.m.Manner <-- "freeze"
thaw :: Cause_change_of_phaseType :: self.m.Manner <-- "thaw"
melt :: Cause_change_of_phaseType :: self.m.Manner <-- "melt"
defrost :: Cause_change_of_phaseType :: self.m.Manner <-- "defrost"
evaporate :: Cause_change_of_phaseType :: self.m.Manner <-- "evaporate"
liquefy :: Cause_change_of_phaseType :: self.m.Manner <-- "liquefy"
solidify :: Cause_change_of_phaseType :: self.m.Manner <-- "solidify"
flux :: Cause_change_of_phaseType :: self.m.Manner <-- "flux"
unfreeze :: Cause_change_of_phaseType :: self.m.Manner <-- "unfreeze"
boil :: Cause_change_of_phaseType :: self.m.Manner <-- "boil"
increase :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "increase"
decrease :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "decrease"
reduce :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "reduce"
lower :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "lower"
raise :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "raise"
swell :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "swell"
diminish :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "diminish"
cut :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "cut"
move :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "move"
curtail :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "curtail"
knock down :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "knock down"
step up :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "step up"
push :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "push"
promote :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "promote"
enhance :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "enhance"
add :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "add"
crank :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "crank"
slash :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "slash"
drop :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "drop"
double :: Cause_change_of_position_on_a_scaleType :: self.m.Manner <-- "double"
hit :: Cause_impactType :: self.m.Manner <-- "hit"
smack :: Cause_impactType :: self.m.Manner <-- "smack"
slam :: Cause_impactType :: self.m.Manner <-- "slam"
bang :: Cause_impactType :: self.m.Manner <-- "bang"
crash :: Cause_impactType :: self.m.Manner <-- "crash"
graze :: Cause_impactType :: self.m.Manner <-- "graze"
plow :: Cause_impactType :: self.m.Manner <-- "plow"
run :: Cause_impactType :: self.m.Manner <-- "run"
slap :: Cause_impactType :: self.m.Manner <-- "slap"
strike :: Cause_impactType :: self.m.Manner <-- "strike"
thud :: Cause_impactType :: self.m.Manner <-- "thud"
ram :: Cause_impactType :: self.m.Manner <-- "ram"
clang :: Cause_impactType :: self.m.Manner <-- "clang"
clash :: Cause_impactType :: self.m.Manner <-- "clash"
clatter :: Cause_impactType :: self.m.Manner <-- "clatter"
click :: Cause_impactType :: self.m.Manner <-- "click"
clink :: Cause_impactType :: self.m.Manner <-- "clink"
rap :: Cause_impactType :: self.m.Manner <-- "rap"
rattle :: Cause_impactType :: self.m.Manner <-- "rattle"
rustle :: Cause_impactType :: self.m.Manner <-- "rustle"
thump :: Cause_impactType :: self.m.Manner <-- "thump"
collide :: Cause_impactType :: self.m.Manner <-- "collide"
jab :: Cause_impactType :: self.m.Manner <-- "jab"
spatter :: Cause_fluidic_motionType :: self.m.Manner <-- "spatter"
splatter :: Cause_fluidic_motionType :: self.m.Manner <-- "splatter"
splash :: Cause_fluidic_motionType :: self.m.Manner <-- "splash"
spray :: Cause_fluidic_motionType :: self.m.Manner <-- "spray"
squirt :: Cause_fluidic_motionType :: self.m.Manner <-- "squirt"
pump :: Cause_fluidic_motionType :: self.m.Manner <-- "pump"
drip :: Cause_fluidic_motionType :: self.m.Manner <-- "drip"
sprinkle :: Cause_fluidic_motionType :: self.m.Manner <-- "sprinkle"
dribble :: Cause_fluidic_motionType :: self.m.Manner <-- "dribble"
spew :: Cause_fluidic_motionType :: self.m.Manner <-- "spew"
spill :: Cause_fluidic_motionType :: self.m.Manner <-- "spill"
shoot :: Shoot_projectilesType :: self.m.Manner <-- "shoot"
fire :: Shoot_projectilesType :: self.m.Manner <-- "fire"
fire off :: Shoot_projectilesType :: self.m.Manner <-- "fire off"
launch :: Shoot_projectilesType :: self.m.Manner <-- "launch"
pass :: PassingType :: self.m.Manner <-- "pass"
heat :: Cause_temperature_changeType :: self.m.Manner <-- "heat"
warm :: Cause_temperature_changeType :: self.m.Manner <-- "warm"
cool :: Cause_temperature_changeType :: self.m.Manner <-- "cool"
refrigerate :: Cause_temperature_changeType :: self.m.Manner <-- "refrigerate"
heat up :: Cause_temperature_changeType :: self.m.Manner <-- "heat up"
cool down :: Cause_temperature_changeType :: self.m.Manner <-- "cool down"
warm up :: Cause_temperature_changeType :: self.m.Manner <-- "warm up"
reheat :: Cause_temperature_changeType :: self.m.Manner <-- "reheat"
chill :: Cause_temperature_changeType :: self.m.Manner <-- "chill"
overheat :: Cause_temperature_changeType :: self.m.Manner <-- "overheat"
desiccate :: Cause_to_be_dryType :: self.m.Manner <-- "desiccate"
dry :: Cause_to_be_dryType :: self.m.Manner <-- "dry"
dehumidify :: Cause_to_be_dryType :: self.m.Manner <-- "dehumidify"
dry out :: Cause_to_be_dryType :: self.m.Manner <-- "dry out"
dry off :: Cause_to_be_dryType :: self.m.Manner <-- "dry off"
dry up :: Cause_to_be_dryType :: self.m.Manner <-- "dry up"
dehydrate :: Cause_to_be_dryType :: self.m.Manner <-- "dehydrate"
anhydrate :: Cause_to_be_dryType :: self.m.Manner <-- "anhydrate"
sharpen :: Cause_to_be_sharpType :: self.m.Manner <-- "sharpen"
dull :: Cause_to_be_sharpType :: self.m.Manner <-- "dull"
blunt :: Cause_to_be_sharpType :: self.m.Manner <-- "blunt"
drench :: Cause_to_be_wetType :: self.m.Manner <-- "drench"
soak :: Cause_to_be_wetType :: self.m.Manner <-- "soak"
wet :: Cause_to_be_wetType :: self.m.Manner <-- "wet"
saturate :: Cause_to_be_wetType :: self.m.Manner <-- "saturate"
douse :: Cause_to_be_wetType :: self.m.Manner <-- "douse"
souse :: Cause_to_be_wetType :: self.m.Manner <-- "souse"
moisten :: Cause_to_be_wetType :: self.m.Manner <-- "moisten"
dampen :: Cause_to_be_wetType :: self.m.Manner <-- "dampen"
humidify :: Cause_to_be_wetType :: self.m.Manner <-- "humidify"
hydrate :: Cause_to_be_wetType :: self.m.Manner <-- "hydrate"
moisturize :: Cause_to_be_wetType :: self.m.Manner <-- "moisturize"
sop :: Cause_to_be_wetType :: self.m.Manner <-- "sop"
keep :: Cause_to_continueType :: self.m.Manner <-- "keep"
lift :: Cause_to_endType :: self.m.Manner <-- "lift"
end :: Cause_to_endType :: self.m.Manner <-- "end"
arrest :: Cause_to_endType :: self.m.Manner <-- "arrest"
put an end to :: Cause_to_endType :: self.m.Manner <-- "put an end to"
abort :: Cause_to_endType :: self.m.Manner <-- "abort"
do away with :: Cause_to_endType :: self.m.Manner <-- "do away with"
fracture :: Cause_to_fragmentType :: self.m.Manner <-- "fracture"
rend :: Cause_to_fragmentType :: self.m.Manner <-- "rend"
snap :: Cause_to_fragmentType :: self.m.Manner <-- "snap"
break :: Cause_to_fragmentType :: self.m.Manner <-- "break"
shiver :: Cause_to_fragmentType :: self.m.Manner <-- "shiver"
splinter :: Cause_to_fragmentType :: self.m.Manner <-- "splinter"
fragment :: Cause_to_fragmentType :: self.m.Manner <-- "fragment"
shatter :: Cause_to_fragmentType :: self.m.Manner <-- "shatter"
smash :: Cause_to_fragmentType :: self.m.Manner <-- "smash"
shred :: Cause_to_fragmentType :: self.m.Manner <-- "shred"
rip :: Cause_to_fragmentType :: self.m.Manner <-- "rip"
tear :: Cause_to_fragmentType :: self.m.Manner <-- "tear"
rip up :: Cause_to_fragmentType :: self.m.Manner <-- "rip up"
cleave :: Cause_to_fragmentType :: self.m.Manner <-- "cleave"
tear up :: Cause_to_fragmentType :: self.m.Manner <-- "tear up"
break apart :: Cause_to_fragmentType :: self.m.Manner <-- "break apart"
break up :: Cause_to_fragmentType :: self.m.Manner <-- "break up"
break down :: Cause_to_fragmentType :: self.m.Manner <-- "break down"
chip :: Cause_to_fragmentType :: self.m.Manner <-- "chip"
dissect :: Cause_to_fragmentType :: self.m.Manner <-- "dissect"
dissolve :: Cause_to_fragmentType :: self.m.Manner <-- "dissolve"
rive :: Cause_to_fragmentType :: self.m.Manner <-- "rive"
sliver :: Cause_to_fragmentType :: self.m.Manner <-- "sliver"
split :: Cause_to_fragmentType :: self.m.Manner <-- "split"
take apart :: Cause_to_fragmentType :: self.m.Manner <-- "take apart"
blare :: Cause_to_make_noiseType :: self.m.Manner <-- "blare"
blast :: Cause_to_make_noiseType :: self.m.Manner <-- "blast"
clang :: Cause_to_make_noiseType :: self.m.Manner <-- "clang"
creak :: Cause_to_make_noiseType :: self.m.Manner <-- "creak"
peep :: Cause_to_make_noiseType :: self.m.Manner <-- "peep"
tinkle :: Cause_to_make_noiseType :: self.m.Manner <-- "tinkle"
play :: Cause_to_make_noiseType :: self.m.Manner <-- "play"
ring :: Cause_to_make_noiseType :: self.m.Manner <-- "ring"
honk :: Cause_to_make_noiseType :: self.m.Manner <-- "honk"
toot :: Cause_to_make_noiseType :: self.m.Manner <-- "toot"
beep :: Cause_to_make_noiseType :: self.m.Manner <-- "beep"
clash :: Cause_to_make_noiseType :: self.m.Manner <-- "clash"
sound :: Cause_to_make_noiseType :: self.m.Manner <-- "sound"
toll :: Cause_to_make_noiseType :: self.m.Manner <-- "toll"
trumpet :: Cause_to_make_noiseType :: self.m.Manner <-- "trumpet"
twirl :: Cause_to_move_in_placeType :: self.m.Manner <-- "twirl"
spin :: Cause_to_move_in_placeType :: self.m.Manner <-- "spin"
vibrate :: Cause_to_move_in_placeType :: self.m.Manner <-- "vibrate"
shake :: Cause_to_move_in_placeType :: self.m.Manner <-- "shake"
swing :: Cause_to_move_in_placeType :: self.m.Manner <-- "swing"
seesaw :: Cause_to_move_in_placeType :: self.m.Manner <-- "seesaw"
turn :: Cause_to_move_in_placeType :: self.m.Manner <-- "turn"
rotate :: Cause_to_move_in_placeType :: self.m.Manner <-- "rotate"
squeeze :: Cause_to_move_in_placeType :: self.m.Manner <-- "squeeze"
swirl :: Cause_to_move_in_placeType :: self.m.Manner <-- "swirl"
rock :: Cause_to_move_in_placeType :: self.m.Manner <-- "rock"
roll :: Cause_to_move_in_placeType :: self.m.Manner <-- "roll"
wave :: Cause_to_move_in_placeType :: self.m.Manner <-- "wave"
revive :: Cause_to_resumeType :: self.m.Manner <-- "revive"
restart :: Cause_to_resumeType :: self.m.Manner <-- "restart"
reinstate :: Cause_to_resumeType :: self.m.Manner <-- "reinstate"
resume :: Cause_to_resumeType :: self.m.Manner <-- "resume"
wake up :: Cause_to_wakeType :: self.m.Manner <-- "wake up"
wake :: Cause_to_wakeType :: self.m.Manner <-- "wake"
awaken :: Cause_to_wakeType :: self.m.Manner <-- "awaken"
rouse :: Cause_to_wakeType :: self.m.Manner <-- "rouse"
get up :: Cause_to_wakeType :: self.m.Manner <-- "get up"
alleviate :: CureType :: self.m.Manner <-- "alleviate"
cure :: CureType :: self.m.Manner <-- "cure"
heal :: CureType :: self.m.Manner <-- "heal"
rehabilitate :: CureType :: self.m.Manner <-- "rehabilitate"
treat :: CureType :: self.m.Manner <-- "treat"
ease :: CureType :: self.m.Manner <-- "ease"
palliate :: CureType :: self.m.Manner <-- "palliate"
resuscitate :: CureType :: self.m.Manner <-- "resuscitate"
remedy :: CureType :: self.m.Manner <-- "remedy"
nurse :: CureType :: self.m.Manner <-- "nurse"
raze :: DestroyingType :: self.m.Manner <-- "raze"
unmake :: DestroyingType :: self.m.Manner <-- "unmake"
level :: DestroyingType :: self.m.Manner <-- "level"
destroy :: DestroyingType :: self.m.Manner <-- "destroy"
obliterate :: DestroyingType :: self.m.Manner <-- "obliterate"
devastate :: DestroyingType :: self.m.Manner <-- "devastate"
vaporize :: DestroyingType :: self.m.Manner <-- "vaporize"
annihilate :: DestroyingType :: self.m.Manner <-- "annihilate"
lay waste :: DestroyingType :: self.m.Manner <-- "lay waste"
demolish :: DestroyingType :: self.m.Manner <-- "demolish"
dismantle :: DestroyingType :: self.m.Manner <-- "dismantle"
blow up :: DestroyingType :: self.m.Manner <-- "blow up"
take out :: DestroyingType :: self.m.Manner <-- "take out"
blast :: DestroyingType :: self.m.Manner <-- "blast"
ruin :: DestroyingType :: self.m.Manner <-- "ruin"
damage :: DamagingType :: self.m.Manner <-- "damage"
mar :: DamagingType :: self.m.Manner <-- "mar"
deface :: DamagingType :: self.m.Manner <-- "deface"
nick :: DamagingType :: self.m.Manner <-- "nick"
dent :: DamagingType :: self.m.Manner <-- "dent"
vandalise :: DamagingType :: self.m.Manner <-- "vandalise"
scratch :: DamagingType :: self.m.Manner <-- "scratch"
chip :: DamagingType :: self.m.Manner <-- "chip"
score :: DamagingType :: self.m.Manner <-- "score"
sabotage :: DamagingType :: self.m.Manner <-- "sabotage"
key :: DamagingType :: self.m.Manner <-- "key"
rend :: DamagingType :: self.m.Manner <-- "rend"
tear :: DamagingType :: self.m.Manner <-- "tear"
rip :: DamagingType :: self.m.Manner <-- "rip"
scrape :: DamagingType :: self.m.Manner <-- "scrape"
deform :: ReshapingType :: self.m.Manner <-- "deform"
scrunch :: ReshapingType :: self.m.Manner <-- "scrunch"
flatten :: ReshapingType :: self.m.Manner <-- "flatten"
crumple :: ReshapingType :: self.m.Manner <-- "crumple"
squish :: ReshapingType :: self.m.Manner <-- "squish"
dent :: ReshapingType :: self.m.Manner <-- "dent"
squash :: ReshapingType :: self.m.Manner <-- "squash"
crush :: ReshapingType :: self.m.Manner <-- "crush"
warp :: ReshapingType :: self.m.Manner <-- "warp"
pulp :: ReshapingType :: self.m.Manner <-- "pulp"
roll :: ReshapingType :: self.m.Manner <-- "roll"
mash :: ReshapingType :: self.m.Manner <-- "mash"
fold :: ReshapingType :: self.m.Manner <-- "fold"
form :: ReshapingType :: self.m.Manner <-- "form"
shape :: ReshapingType :: self.m.Manner <-- "shape"
mold :: ReshapingType :: self.m.Manner <-- "mold"
bend :: ReshapingType :: self.m.Manner <-- "bend"
launch :: ReshapingType :: self.m.Manner <-- "launch"
curl :: ReshapingType :: self.m.Manner <-- "curl"
revitalize :: RejuvenationType :: self.m.Manner <-- "revitalize"
rejuvenate :: RejuvenationType :: self.m.Manner <-- "rejuvenate"
refresh :: RejuvenationType :: self.m.Manner <-- "refresh"
reinvigorate :: RejuvenationType :: self.m.Manner <-- "reinvigorate"
breathe new life :: RejuvenationType :: self.m.Manner <-- "breathe new life"
breathe fresh life :: RejuvenationType :: self.m.Manner <-- "breathe fresh life"
resuscitate :: RejuvenationType :: self.m.Manner <-- "resuscitate"
reawaken :: RejuvenationType :: self.m.Manner <-- "reawaken"
renew :: RejuvenationType :: self.m.Manner <-- "renew"
invigorate :: RejuvenationType :: self.m.Manner <-- "invigorate"
restore :: RejuvenationType :: self.m.Manner <-- "restore"
thicken :: Cause_change_of_consistencyType :: self.m.Manner <-- "thicken"
thin :: Cause_change_of_consistencyType :: self.m.Manner <-- "thin"
curdle :: Cause_change_of_consistencyType :: self.m.Manner <-- "curdle"
soften :: Cause_change_of_consistencyType :: self.m.Manner <-- "soften"
harden :: Cause_change_of_consistencyType :: self.m.Manner <-- "harden"
jell :: Cause_change_of_consistencyType :: self.m.Manner <-- "jell"
coagulate :: Cause_change_of_consistencyType :: self.m.Manner <-- "coagulate"
congeal :: Cause_change_of_consistencyType :: self.m.Manner <-- "congeal"
clot :: Cause_change_of_consistencyType :: self.m.Manner <-- "clot"
indurate :: Cause_change_of_consistencyType :: self.m.Manner <-- "indurate"
inspissate :: Cause_change_of_consistencyType :: self.m.Manner <-- "inspissate"
set :: Cause_change_of_consistencyType :: self.m.Manner <-- "set"
corrode :: Corroding_causedType :: self.m.Manner <-- "corrode"
oxidize :: Corroding_causedType :: self.m.Manner <-- "oxidize"
tarnish :: Corroding_causedType :: self.m.Manner <-- "tarnish"
rust :: Corroding_causedType :: self.m.Manner <-- "rust"
start fire :: Setting_fireType :: self.m.Manner <-- "start fire"
light :: Setting_fireType :: self.m.Manner <-- "light"
ignite :: Setting_fireType :: self.m.Manner <-- "ignite"
torch :: Setting_fireType :: self.m.Manner <-- "torch"
kindle :: Setting_fireType :: self.m.Manner <-- "kindle"
combust :: Setting_fireType :: self.m.Manner <-- "combust"
spark :: Setting_fireType :: self.m.Manner <-- "spark"
set fire to :: Setting_fireType :: self.m.Manner <-- "set fire to"
set on fire :: Setting_fireType :: self.m.Manner <-- "set on fire"
start :: Setting_fireType :: self.m.Manner <-- "start"
catch on fire :: Setting_fireType :: self.m.Manner <-- "catch on fire"
imperil :: EndangeringType :: self.m.Manner <-- "imperil"
endanger :: EndangeringType :: self.m.Manner <-- "endanger"
jeopardise :: EndangeringType :: self.m.Manner <-- "jeopardise"
dilate :: Cause_expansionType :: self.m.Manner <-- "dilate"
enlarge :: Cause_expansionType :: self.m.Manner <-- "enlarge"
expand :: Cause_expansionType :: self.m.Manner <-- "expand"
inflate :: Cause_expansionType :: self.m.Manner <-- "inflate"
lengthen :: Cause_expansionType :: self.m.Manner <-- "lengthen"
magnify :: Cause_expansionType :: self.m.Manner <-- "magnify"
shrink :: Cause_expansionType :: self.m.Manner <-- "shrink"
swell :: Cause_expansionType :: self.m.Manner <-- "swell"
widen :: Cause_expansionType :: self.m.Manner <-- "widen"
narrow :: Cause_expansionType :: self.m.Manner <-- "narrow"
grow :: Cause_expansionType :: self.m.Manner <-- "grow"
blow up :: Cause_expansionType :: self.m.Manner <-- "blow up"
stretch :: Cause_expansionType :: self.m.Manner <-- "stretch"
bind :: Imposing_obligationType :: self.m.Manner <-- "bind"
obligate :: Imposing_obligationType :: self.m.Manner <-- "obligate"
commit :: Imposing_obligationType :: self.m.Manner <-- "commit"
pledge :: Imposing_obligationType :: self.m.Manner <-- "pledge"
require :: Imposing_obligationType :: self.m.Manner <-- "require"
charge :: Imposing_obligationType :: self.m.Manner <-- "charge"
total :: Render_nonfunctionalType :: self.m.Manner <-- "total"
break :: Render_nonfunctionalType :: self.m.Manner <-- "break"
hose :: Render_nonfunctionalType :: self.m.Manner <-- "hose"
knock out :: Render_nonfunctionalType :: self.m.Manner <-- "knock out"
disable :: Render_nonfunctionalType :: self.m.Manner <-- "disable"
incapacitate :: Render_nonfunctionalType :: self.m.Manner <-- "incapacitate"
fortify :: Cause_change_of_strengthType :: self.m.Manner <-- "fortify"
strengthen :: Cause_change_of_strengthType :: self.m.Manner <-- "strengthen"
reinforce :: Cause_change_of_strengthType :: self.m.Manner <-- "reinforce"
weaken :: Cause_change_of_strengthType :: self.m.Manner <-- "weaken"
beef up :: Cause_change_of_strengthType :: self.m.Manner <-- "beef up"
buttress :: Change_resistanceType :: self.m.Manner <-- "buttress"
bulwark :: Change_resistanceType :: self.m.Manner <-- "bulwark"
brace :: Change_resistanceType :: self.m.Manner <-- "brace"
make :: Cause_changeType :: self.m.Manner <-- "make"
turn :: Cause_changeType :: self.m.Manner <-- "turn"
change :: Cause_changeType :: self.m.Manner <-- "change"
convert :: Cause_changeType :: self.m.Manner <-- "convert"
transform :: Cause_changeType :: self.m.Manner <-- "transform"
modify :: Cause_changeType :: self.m.Manner <-- "modify"
alter :: Cause_changeType :: self.m.Manner <-- "alter"
vary :: Cause_changeType :: self.m.Manner <-- "vary"
reshape :: Cause_changeType :: self.m.Manner <-- "reshape"
shift :: Cause_changeType :: self.m.Manner <-- "shift"
delay :: Change_event_timeType :: self.m.Manner <-- "delay"
postpone :: Change_event_timeType :: self.m.Manner <-- "postpone"
defer :: Change_event_timeType :: self.m.Manner <-- "defer"
advance :: Change_event_timeType :: self.m.Manner <-- "advance"
move up :: Change_event_timeType :: self.m.Manner <-- "move up"
move back :: Change_event_timeType :: self.m.Manner <-- "move back"
put off :: Change_event_timeType :: self.m.Manner <-- "put off"
hold over :: Change_event_timeType :: self.m.Manner <-- "hold over"
put over :: Change_event_timeType :: self.m.Manner <-- "put over"
hold up :: Change_event_timeType :: self.m.Manner <-- "hold up"
reschedule :: Change_event_timeType :: self.m.Manner <-- "reschedule"
prolong :: Change_event_durationType :: self.m.Manner <-- "prolong"
abbreviate :: Change_event_durationType :: self.m.Manner <-- "abbreviate"
drag out :: Change_event_durationType :: self.m.Manner <-- "drag out"
protract :: Change_event_durationType :: self.m.Manner <-- "protract"
extend :: Change_event_durationType :: self.m.Manner <-- "extend"
cut short :: Change_event_durationType :: self.m.Manner <-- "cut short"
shorten :: Change_event_durationType :: self.m.Manner <-- "shorten"
exchange :: Exchange_currencyType :: self.m.Manner <-- "exchange"
change :: Exchange_currencyType :: self.m.Manner <-- "change"
convert :: Exchange_currencyType :: self.m.Manner <-- "convert"
interrupt :: Interrupt_processType :: self.m.Manner <-- "interrupt"
flake :: GrindingType :: self.m.Manner <-- "flake"
pulverize :: GrindingType :: self.m.Manner <-- "pulverize"
grind :: GrindingType :: self.m.Manner <-- "grind"
crumble :: GrindingType :: self.m.Manner <-- "crumble"
crush :: GrindingType :: self.m.Manner <-- "crush"
mill :: GrindingType :: self.m.Manner <-- "mill"
grate :: GrindingType :: self.m.Manner <-- "grate"
shred :: GrindingType :: self.m.Manner <-- "shred"
crunch :: GrindingType :: self.m.Manner <-- "crunch"
masticate :: GrindingType :: self.m.Manner <-- "masticate"
chew :: GrindingType :: self.m.Manner <-- "chew"
rot :: Cause_to_rotType :: self.m.Manner <-- "rot"
putrefy :: Cause_to_rotType :: self.m.Manner <-- "putrefy"
add :: Cause_to_be_includedType :: self.m.Manner <-- "add"
include :: Cause_to_be_includedType :: self.m.Manner <-- "include"
clear :: EmptyingType :: self.m.Manner <-- "clear"
drain :: EmptyingType :: self.m.Manner <-- "drain"
empty :: EmptyingType :: self.m.Manner <-- "empty"
purge :: EmptyingType :: self.m.Manner <-- "purge"
strip :: EmptyingType :: self.m.Manner <-- "strip"
divest :: EmptyingType :: self.m.Manner <-- "divest"
rid :: EmptyingType :: self.m.Manner <-- "rid"
disembowel :: EmptyingType :: self.m.Manner <-- "disembowel"
skin :: EmptyingType :: self.m.Manner <-- "skin"
core :: EmptyingType :: self.m.Manner <-- "core"
peel :: EmptyingType :: self.m.Manner <-- "peel"
gut :: EmptyingType :: self.m.Manner <-- "gut"
bone :: EmptyingType :: self.m.Manner <-- "bone"
debug :: EmptyingType :: self.m.Manner <-- "debug"
deforest :: EmptyingType :: self.m.Manner <-- "deforest"
degrease :: EmptyingType :: self.m.Manner <-- "degrease"
descale :: EmptyingType :: self.m.Manner <-- "descale"
scalp :: EmptyingType :: self.m.Manner <-- "scalp"
defrost :: EmptyingType :: self.m.Manner <-- "defrost"
delouse :: EmptyingType :: self.m.Manner <-- "delouse"
eviscerate :: EmptyingType :: self.m.Manner <-- "eviscerate"
denude :: EmptyingType :: self.m.Manner <-- "denude"
unload :: EmptyingType :: self.m.Manner <-- "unload"
expurgate :: EmptyingType :: self.m.Manner <-- "expurgate"
void :: EmptyingType :: self.m.Manner <-- "void"
evacuate :: EmptyingType :: self.m.Manner <-- "evacuate"
debone :: EmptyingType :: self.m.Manner <-- "debone"
devein :: EmptyingType :: self.m.Manner <-- "devein"
disarm :: EmptyingType :: self.m.Manner <-- "disarm"
decontaminate :: EmptyingType :: self.m.Manner <-- "decontaminate"
cleanse :: EmptyingType :: self.m.Manner <-- "cleanse"
pit :: EmptyingType :: self.m.Manner <-- "pit"
seed :: EmptyingType :: self.m.Manner <-- "seed"
stone :: EmptyingType :: self.m.Manner <-- "stone"
stalk :: EmptyingType :: self.m.Manner <-- "stalk"
flush :: EmptyingType :: self.m.Manner <-- "flush"
expunge :: EmptyingType :: self.m.Manner <-- "expunge"
weed :: EmptyingType :: self.m.Manner <-- "weed"
clear :: RemovingType :: self.m.Manner <-- "clear"
confiscate :: RemovingType :: self.m.Manner <-- "confiscate"
discard :: RemovingType :: self.m.Manner <-- "discard"
dislodge :: RemovingType :: self.m.Manner <-- "dislodge"
drain :: RemovingType :: self.m.Manner <-- "drain"
eject :: RemovingType :: self.m.Manner <-- "eject"
eliminate :: RemovingType :: self.m.Manner <-- "eliminate"
empty :: RemovingType :: self.m.Manner <-- "empty"
evacuate :: RemovingType :: self.m.Manner <-- "evacuate"
evict :: RemovingType :: self.m.Manner <-- "evict"
excise :: RemovingType :: self.m.Manner <-- "excise"
expel :: RemovingType :: self.m.Manner <-- "expel"
expunge :: RemovingType :: self.m.Manner <-- "expunge"
extract :: RemovingType :: self.m.Manner <-- "extract"
oust :: RemovingType :: self.m.Manner <-- "oust"
pluck :: RemovingType :: self.m.Manner <-- "pluck"
prise :: RemovingType :: self.m.Manner <-- "prise"
purge :: RemovingType :: self.m.Manner <-- "purge"
remove :: RemovingType :: self.m.Manner <-- "remove"
skim :: RemovingType :: self.m.Manner <-- "skim"
snatch :: RemovingType :: self.m.Manner <-- "snatch"
strip :: RemovingType :: self.m.Manner <-- "strip"
swipe :: RemovingType :: self.m.Manner <-- "swipe"
take :: RemovingType :: self.m.Manner <-- "take"
withdraw :: RemovingType :: self.m.Manner <-- "withdraw"
unload :: RemovingType :: self.m.Manner <-- "unload"
expurgate :: RemovingType :: self.m.Manner <-- "expurgate"
wash :: RemovingType :: self.m.Manner <-- "wash"
shave :: RemovingType :: self.m.Manner <-- "shave"
rinse :: RemovingType :: self.m.Manner <-- "rinse"
roust :: RemovingType :: self.m.Manner <-- "roust"
dust :: RemovingType :: self.m.Manner <-- "dust"
scrape :: RemovingType :: self.m.Manner <-- "scrape"
rip :: RemovingType :: self.m.Manner <-- "rip"
tear :: RemovingType :: self.m.Manner <-- "tear"
cut :: RemovingType :: self.m.Manner <-- "cut"
file :: RemovingType :: self.m.Manner <-- "file"
disgorge :: RemovingType :: self.m.Manner <-- "disgorge"
flush :: RemovingType :: self.m.Manner <-- "flush"
weed :: RemovingType :: self.m.Manner <-- "weed"
amputate :: RemovingType :: self.m.Manner <-- "amputate"
deposit :: PlacingType :: self.m.Manner <-- "deposit"
embed :: PlacingType :: self.m.Manner <-- "embed"
hang :: PlacingType :: self.m.Manner <-- "hang"
immerse :: PlacingType :: self.m.Manner <-- "immerse"
implant :: PlacingType :: self.m.Manner <-- "implant"
inject :: PlacingType :: self.m.Manner <-- "inject"
insert :: PlacingType :: self.m.Manner <-- "insert"
lay :: PlacingType :: self.m.Manner <-- "lay"
lean :: PlacingType :: self.m.Manner <-- "lean"
load :: PlacingType :: self.m.Manner <-- "load"
lodge :: PlacingType :: self.m.Manner <-- "lodge"
pack :: PlacingType :: self.m.Manner <-- "pack"
park :: PlacingType :: self.m.Manner <-- "park"
pile :: PlacingType :: self.m.Manner <-- "pile"
place :: PlacingType :: self.m.Manner <-- "place"
plant :: PlacingType :: self.m.Manner <-- "plant"
position :: PlacingType :: self.m.Manner <-- "position"
rest :: PlacingType :: self.m.Manner <-- "rest"
set :: PlacingType :: self.m.Manner <-- "set"
situate :: PlacingType :: self.m.Manner <-- "situate"
smear :: PlacingType :: self.m.Manner <-- "smear"
stand :: PlacingType :: self.m.Manner <-- "stand"
stash :: PlacingType :: self.m.Manner <-- "stash"
station :: PlacingType :: self.m.Manner <-- "station"
stow :: PlacingType :: self.m.Manner <-- "stow"
stuff :: PlacingType :: self.m.Manner <-- "stuff"
tuck :: PlacingType :: self.m.Manner <-- "tuck"
wrap :: PlacingType :: self.m.Manner <-- "wrap"
bag :: PlacingType :: self.m.Manner <-- "bag"
billet :: PlacingType :: self.m.Manner <-- "billet"
bin :: PlacingType :: self.m.Manner <-- "bin"
bottle :: PlacingType :: self.m.Manner <-- "bottle"
archive :: PlacingType :: self.m.Manner <-- "archive"
box :: PlacingType :: self.m.Manner <-- "box"
cage :: PlacingType :: self.m.Manner <-- "cage"
crate :: PlacingType :: self.m.Manner <-- "crate"
file :: PlacingType :: self.m.Manner <-- "file"
garage :: PlacingType :: self.m.Manner <-- "garage"
pocket :: PlacingType :: self.m.Manner <-- "pocket"
shelve :: PlacingType :: self.m.Manner <-- "shelve"
stable :: PlacingType :: self.m.Manner <-- "stable"
perch :: PlacingType :: self.m.Manner <-- "perch"
sit :: PlacingType :: self.m.Manner <-- "sit"
daub :: PlacingType :: self.m.Manner <-- "daub"
drizzle :: PlacingType :: self.m.Manner <-- "drizzle"
sow :: PlacingType :: self.m.Manner <-- "sow"
dab :: PlacingType :: self.m.Manner <-- "dab"
drape :: PlacingType :: self.m.Manner <-- "drape"
brush :: PlacingType :: self.m.Manner <-- "brush"
dust :: PlacingType :: self.m.Manner <-- "dust"
heap :: PlacingType :: self.m.Manner <-- "heap"
jam :: PlacingType :: self.m.Manner <-- "jam"
rub :: PlacingType :: self.m.Manner <-- "rub"
cram :: PlacingType :: self.m.Manner <-- "cram"
shower :: PlacingType :: self.m.Manner <-- "shower"
pot :: PlacingType :: self.m.Manner <-- "pot"
sheathe :: PlacingType :: self.m.Manner <-- "sheathe"
warehouse :: PlacingType :: self.m.Manner <-- "warehouse"
shoulder :: PlacingType :: self.m.Manner <-- "shoulder"
stick :: PlacingType :: self.m.Manner <-- "stick"
bestow :: PlacingType :: self.m.Manner <-- "bestow"
put :: PlacingType :: self.m.Manner <-- "put"
package :: PlacingType :: self.m.Manner <-- "package"
plunge :: PlacingType :: self.m.Manner <-- "plunge"
arrange :: PlacingType :: self.m.Manner <-- "arrange"
emplace :: PlacingType :: self.m.Manner <-- "emplace"
enclose :: PlacingType :: self.m.Manner <-- "enclose"
gag :: PlacingType :: self.m.Manner <-- "gag"
disperse :: DispersalType :: self.m.Manner <-- "disperse"
dissolve :: DispersalType :: self.m.Manner <-- "dissolve"
scatter :: DispersalType :: self.m.Manner <-- "scatter"
distribute :: DispersalType :: self.m.Manner <-- "distribute"
spread :: DispersalType :: self.m.Manner <-- "spread"
strew :: DispersalType :: self.m.Manner <-- "strew"
sprinkle :: DispersalType :: self.m.Manner <-- "sprinkle"
disseminate :: DispersalType :: self.m.Manner <-- "disseminate"
pass on :: DispersalType :: self.m.Manner <-- "pass on"
bury :: BuryingType :: self.m.Manner <-- "bury"
adorn :: FillingType :: self.m.Manner <-- "adorn"
anoint :: FillingType :: self.m.Manner <-- "anoint"
cover :: FillingType :: self.m.Manner <-- "cover"
dust :: FillingType :: self.m.Manner <-- "dust"
load :: FillingType :: self.m.Manner <-- "load"
pack :: FillingType :: self.m.Manner <-- "pack"
smear :: FillingType :: self.m.Manner <-- "smear"
spread :: FillingType :: self.m.Manner <-- "spread"
stuff :: FillingType :: self.m.Manner <-- "stuff"
wrap :: FillingType :: self.m.Manner <-- "wrap"
plaster :: FillingType :: self.m.Manner <-- "plaster"
drape :: FillingType :: self.m.Manner <-- "drape"
dab :: FillingType :: self.m.Manner <-- "dab"
daub :: FillingType :: self.m.Manner <-- "daub"
inject :: FillingType :: self.m.Manner <-- "inject"
cram :: FillingType :: self.m.Manner <-- "cram"
sow :: FillingType :: self.m.Manner <-- "sow"
seed :: FillingType :: self.m.Manner <-- "seed"
brush :: FillingType :: self.m.Manner <-- "brush"
hang :: FillingType :: self.m.Manner <-- "hang"
spatter :: FillingType :: self.m.Manner <-- "spatter"
splash :: FillingType :: self.m.Manner <-- "splash"
splatter :: FillingType :: self.m.Manner <-- "splatter"
spray :: FillingType :: self.m.Manner <-- "spray"
sprinkle :: FillingType :: self.m.Manner <-- "sprinkle"
squirt :: FillingType :: self.m.Manner <-- "squirt"
shower :: FillingType :: self.m.Manner <-- "shower"
drizzle :: FillingType :: self.m.Manner <-- "drizzle"
heap :: FillingType :: self.m.Manner <-- "heap"
pile :: FillingType :: self.m.Manner <-- "pile"
pump :: FillingType :: self.m.Manner <-- "pump"
jam :: FillingType :: self.m.Manner <-- "jam"
plant :: FillingType :: self.m.Manner <-- "plant"
scatter :: FillingType :: self.m.Manner <-- "scatter"
butter :: FillingType :: self.m.Manner <-- "butter"
asphalt :: FillingType :: self.m.Manner <-- "asphalt"
surface :: FillingType :: self.m.Manner <-- "surface"
tile :: FillingType :: self.m.Manner <-- "tile"
wallpaper :: FillingType :: self.m.Manner <-- "wallpaper"
coat :: FillingType :: self.m.Manner <-- "coat"
suffuse :: FillingType :: self.m.Manner <-- "suffuse"
fill :: FillingType :: self.m.Manner <-- "fill"
strew :: FillingType :: self.m.Manner <-- "strew"
douse :: FillingType :: self.m.Manner <-- "douse"
flood :: FillingType :: self.m.Manner <-- "flood"
crowd :: FillingType :: self.m.Manner <-- "crowd"
pave :: FillingType :: self.m.Manner <-- "pave"
varnish :: FillingType :: self.m.Manner <-- "varnish"
paint :: FillingType :: self.m.Manner <-- "paint"
gild :: FillingType :: self.m.Manner <-- "gild"
glaze :: FillingType :: self.m.Manner <-- "glaze"
embellish :: FillingType :: self.m.Manner <-- "embellish"
panel :: FillingType :: self.m.Manner <-- "panel"
wax :: FillingType :: self.m.Manner <-- "wax"
wash :: FillingType :: self.m.Manner <-- "wash"
plank :: FillingType :: self.m.Manner <-- "plank"
yoke :: FillingType :: self.m.Manner <-- "yoke"
dress :: FillingType :: self.m.Manner <-- "dress"
accessorize :: FillingType :: self.m.Manner <-- "accessorize"
create :: CreatingType :: self.m.Manner <-- "create"
form :: CreatingType :: self.m.Manner <-- "form"
assemble :: CreatingType :: self.m.Manner <-- "assemble"
produce :: CreatingType :: self.m.Manner <-- "produce"
generate :: CreatingType :: self.m.Manner <-- "generate"
yield :: CreatingType :: self.m.Manner <-- "yield"
issue :: CreatingType :: self.m.Manner <-- "issue"
make :: CreatingType :: self.m.Manner <-- "make"
make :: Intentionally_createType :: self.m.Manner <-- "make"
create :: Intentionally_createType :: self.m.Manner <-- "create"
establish :: Intentionally_createType :: self.m.Manner <-- "establish"
set up :: Intentionally_createType :: self.m.Manner <-- "set up"
generate :: Intentionally_createType :: self.m.Manner <-- "generate"
produce :: Intentionally_createType :: self.m.Manner <-- "produce"
found :: Intentionally_createType :: self.m.Manner <-- "found"
synthesise :: Intentionally_createType :: self.m.Manner <-- "synthesise"
develop :: Intentionally_createType :: self.m.Manner <-- "develop"
manufacture :: ManufacturingType :: self.m.Manner <-- "manufacture"
produce :: ManufacturingType :: self.m.Manner <-- "produce"
make :: ManufacturingType :: self.m.Manner <-- "make"
fabricate :: ManufacturingType :: self.m.Manner <-- "fabricate"
pen :: Text_creationType :: self.m.Manner <-- "pen"
author :: Text_creationType :: self.m.Manner <-- "author"
write :: Text_creationType :: self.m.Manner <-- "write"
compose :: Text_creationType :: self.m.Manner <-- "compose"
draft :: Text_creationType :: self.m.Manner <-- "draft"
jot down :: Text_creationType :: self.m.Manner <-- "jot down"
jot :: Text_creationType :: self.m.Manner <-- "jot"
speak :: Text_creationType :: self.m.Manner <-- "speak"
say :: Text_creationType :: self.m.Manner <-- "say"
utter :: Text_creationType :: self.m.Manner <-- "utter"
write up :: Text_creationType :: self.m.Manner <-- "write up"
write down :: Text_creationType :: self.m.Manner <-- "write down"
write in :: Text_creationType :: self.m.Manner <-- "write in"
write out :: Text_creationType :: self.m.Manner <-- "write out"
print :: Text_creationType :: self.m.Manner <-- "print"
type :: Text_creationType :: self.m.Manner <-- "type"
type out :: Text_creationType :: self.m.Manner <-- "type out"
type up :: Text_creationType :: self.m.Manner <-- "type up"
type in :: Text_creationType :: self.m.Manner <-- "type in"
print out :: Text_creationType :: self.m.Manner <-- "print out"
print up :: Text_creationType :: self.m.Manner <-- "print up"
get down :: Text_creationType :: self.m.Manner <-- "get down"
chronicle :: Text_creationType :: self.m.Manner <-- "chronicle"
sign :: Text_creationType :: self.m.Manner <-- "sign"
dash off :: Text_creationType :: self.m.Manner <-- "dash off"
list :: Text_creationType :: self.m.Manner <-- "list"
sign :: Sign_agreementType :: self.m.Manner <-- "sign"
accede :: Sign_agreementType :: self.m.Manner <-- "accede"
originate :: Achieving_firstType :: self.m.Manner <-- "originate"
pioneer :: Achieving_firstType :: self.m.Manner <-- "pioneer"
invent :: Achieving_firstType :: self.m.Manner <-- "invent"
discover :: Achieving_firstType :: self.m.Manner <-- "discover"
coin :: Achieving_firstType :: self.m.Manner <-- "coin"
find :: Achieving_firstType :: self.m.Manner <-- "find"
assemble :: BuildingType :: self.m.Manner <-- "assemble"
glue :: BuildingType :: self.m.Manner <-- "glue"
build :: BuildingType :: self.m.Manner <-- "build"
weld :: BuildingType :: self.m.Manner <-- "weld"
put together :: BuildingType :: self.m.Manner <-- "put together"
construct :: BuildingType :: self.m.Manner <-- "construct"
make :: BuildingType :: self.m.Manner <-- "make"
fit together :: BuildingType :: self.m.Manner <-- "fit together"
piece together :: BuildingType :: self.m.Manner <-- "piece together"
erect :: BuildingType :: self.m.Manner <-- "erect"
raise :: BuildingType :: self.m.Manner <-- "raise"
fashion :: BuildingType :: self.m.Manner <-- "fashion"
paint :: Create_physical_artworkType :: self.m.Manner <-- "paint"
draw :: Create_physical_artworkType :: self.m.Manner <-- "draw"
take [picture] :: Create_physical_artworkType :: self.m.Manner <-- "take [picture]"
sculpt :: Create_physical_artworkType :: self.m.Manner <-- "sculpt"
cast :: Create_physical_artworkType :: self.m.Manner <-- "cast"
tie :: Knot_creationType :: self.m.Manner <-- "tie"
copy :: DuplicationType :: self.m.Manner <-- "copy"
duplicate :: DuplicationType :: self.m.Manner <-- "duplicate"
photocopy :: DuplicationType :: self.m.Manner <-- "photocopy"
reduplicate :: DuplicationType :: self.m.Manner <-- "reduplicate"
replicate :: DuplicationType :: self.m.Manner <-- "replicate"
reproduce :: DuplicationType :: self.m.Manner <-- "reproduce"
run off :: DuplicationType :: self.m.Manner <-- "run off"
clone :: DuplicationType :: self.m.Manner <-- "clone"
falsify :: ForgingType :: self.m.Manner <-- "falsify"
counterfeit :: ForgingType :: self.m.Manner <-- "counterfeit"
forge :: ForgingType :: self.m.Manner <-- "forge"
fake :: ForgingType :: self.m.Manner <-- "fake"
translate :: TranslatingType :: self.m.Manner <-- "translate"
concoct :: Cooking_creationType :: self.m.Manner <-- "concoct"
cook up :: Cooking_creationType :: self.m.Manner <-- "cook up"
whip up :: Cooking_creationType :: self.m.Manner <-- "whip up"
cook :: Cooking_creationType :: self.m.Manner <-- "cook"
prepare :: Cooking_creationType :: self.m.Manner <-- "prepare"
make :: Cooking_creationType :: self.m.Manner <-- "make"
bake :: Cooking_creationType :: self.m.Manner <-- "bake"
put together :: Cooking_creationType :: self.m.Manner <-- "put together"
grill :: Cooking_creationType :: self.m.Manner <-- "grill"
roast :: Cooking_creationType :: self.m.Manner <-- "roast"
fry :: Cooking_creationType :: self.m.Manner <-- "fry"
fix :: Cooking_creationType :: self.m.Manner <-- "fix"
itch :: Cause_bodily_experienceType :: self.m.Manner <-- "itch"
scratch :: Cause_bodily_experienceType :: self.m.Manner <-- "scratch"
tickle :: Cause_bodily_experienceType :: self.m.Manner <-- "tickle"
rub :: Cause_bodily_experienceType :: self.m.Manner <-- "rub"
massage :: Cause_bodily_experienceType :: self.m.Manner <-- "massage"
chafe :: Cause_bodily_experienceType :: self.m.Manner <-- "chafe"
hurt :: Cause_bodily_experienceType :: self.m.Manner <-- "hurt"
bayonet :: Cause_harmType :: self.m.Manner <-- "bayonet"
beat :: Cause_harmType :: self.m.Manner <-- "beat"
boil :: Cause_harmType :: self.m.Manner <-- "boil"
burn :: Cause_harmType :: self.m.Manner <-- "burn"
bludgeon :: Cause_harmType :: self.m.Manner <-- "bludgeon"
club :: Cause_harmType :: self.m.Manner <-- "club"
crush :: Cause_harmType :: self.m.Manner <-- "crush"
cut :: Cause_harmType :: self.m.Manner <-- "cut"
slice :: Cause_harmType :: self.m.Manner <-- "slice"
hammer :: Cause_harmType :: self.m.Manner <-- "hammer"
hit :: Cause_harmType :: self.m.Manner <-- "hit"
kick :: Cause_harmType :: self.m.Manner <-- "kick"
knife :: Cause_harmType :: self.m.Manner <-- "knife"
punch :: Cause_harmType :: self.m.Manner <-- "punch"
smash :: Cause_harmType :: self.m.Manner <-- "smash"
stab :: Cause_harmType :: self.m.Manner <-- "stab"
spear :: Cause_harmType :: self.m.Manner <-- "spear"
stone :: Cause_harmType :: self.m.Manner <-- "stone"
hurt :: Cause_harmType :: self.m.Manner <-- "hurt"
whip :: Cause_harmType :: self.m.Manner <-- "whip"
batter :: Cause_harmType :: self.m.Manner <-- "batter"
break :: Cause_harmType :: self.m.Manner <-- "break"
butt :: Cause_harmType :: self.m.Manner <-- "butt"
chop :: Cause_harmType :: self.m.Manner <-- "chop"
claw :: Cause_harmType :: self.m.Manner <-- "claw"
clout :: Cause_harmType :: self.m.Manner <-- "clout"
crack :: Cause_harmType :: self.m.Manner <-- "crack"
cudgel :: Cause_harmType :: self.m.Manner <-- "cudgel"
cuff :: Cause_harmType :: self.m.Manner <-- "cuff"
fracture :: Cause_harmType :: self.m.Manner <-- "fracture"
gash :: Cause_harmType :: self.m.Manner <-- "gash"
injure :: Cause_harmType :: self.m.Manner <-- "injure"
jab :: Cause_harmType :: self.m.Manner <-- "jab"
bruise :: Cause_harmType :: self.m.Manner <-- "bruise"
knock :: Cause_harmType :: self.m.Manner <-- "knock"
lash :: Cause_harmType :: self.m.Manner <-- "lash"
maul :: Cause_harmType :: self.m.Manner <-- "maul"
pelt :: Cause_harmType :: self.m.Manner <-- "pelt"
strike :: Cause_harmType :: self.m.Manner <-- "strike"
thwack :: Cause_harmType :: self.m.Manner <-- "thwack"
bash :: Cause_harmType :: self.m.Manner <-- "bash"
belt :: Cause_harmType :: self.m.Manner <-- "belt"
buffet :: Cause_harmType :: self.m.Manner <-- "buffet"
horsewhip :: Cause_harmType :: self.m.Manner <-- "horsewhip"
smack :: Cause_harmType :: self.m.Manner <-- "smack"
squash :: Cause_harmType :: self.m.Manner <-- "squash"
slap :: Cause_harmType :: self.m.Manner <-- "slap"
knee :: Cause_harmType :: self.m.Manner <-- "knee"
wound :: Cause_harmType :: self.m.Manner <-- "wound"
pummel :: Cause_harmType :: self.m.Manner <-- "pummel"
electrocute :: Cause_harmType :: self.m.Manner <-- "electrocute"
beat up :: Cause_harmType :: self.m.Manner <-- "beat up"
torture :: Cause_harmType :: self.m.Manner <-- "torture"
maim :: Cause_harmType :: self.m.Manner <-- "maim"
flog :: Cause_harmType :: self.m.Manner <-- "flog"
impale :: Cause_harmType :: self.m.Manner <-- "impale"
biff :: Cause_harmType :: self.m.Manner <-- "biff"
cane :: Cause_harmType :: self.m.Manner <-- "cane"
flagellate :: Cause_harmType :: self.m.Manner <-- "flagellate"
poison :: Cause_harmType :: self.m.Manner <-- "poison"
transfix :: Cause_harmType :: self.m.Manner <-- "transfix"
welt :: Cause_harmType :: self.m.Manner <-- "welt"
mutilate :: Cause_harmType :: self.m.Manner <-- "mutilate"
elbow :: Cause_harmType :: self.m.Manner <-- "elbow"
sting :: Cause_harmType :: self.m.Manner <-- "sting"
swipe :: Cause_harmType :: self.m.Manner <-- "swipe"
drug :: Cause_harmType :: self.m.Manner <-- "drug"
twist :: Cause_harmType :: self.m.Manner <-- "twist"
down :: DowningType :: self.m.Manner <-- "down"
shoot down :: DowningType :: self.m.Manner <-- "shoot down"
strike :: ErasingType :: self.m.Manner <-- "strike"
delete :: ErasingType :: self.m.Manner <-- "delete"
erase :: ErasingType :: self.m.Manner <-- "erase"
expunge :: ErasingType :: self.m.Manner <-- "expunge"
kill :: ErasingType :: self.m.Manner <-- "kill"
give :: InfectingType :: self.m.Manner <-- "give"
infect :: InfectingType :: self.m.Manner <-- "infect"

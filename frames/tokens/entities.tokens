item :: EntityType :: self.m.Name <-- "item"
entity :: EntityType :: self.m.Name <-- "entity"
object :: EntityType :: self.m.Name <-- "object"
thing :: EntityType :: self.m.Name <-- "thing"
individual :: EntityType :: self.m.Name <-- "individual"
gas :: SubstanceType :: self.m.Name <-- "gas"
sand :: SubstanceType :: self.m.Name <-- "sand"
oil :: SubstanceType :: self.m.Name <-- "oil"
liquid :: SubstanceType :: self.m.Name <-- "liquid"
methane :: SubstanceType :: self.m.Name <-- "methane"
chemical :: SubstanceType :: self.m.Name <-- "chemical"
iron :: SubstanceType :: self.m.Name <-- "iron"
material :: SubstanceType :: self.m.Name <-- "material"
uranium :: SubstanceType :: self.m.Name <-- "uranium"
aluminum :: SubstanceType :: self.m.Name <-- "aluminum"
plutonium :: SubstanceType :: self.m.Name <-- "plutonium"
atropine :: SubstanceType :: self.m.Name <-- "atropine"
yellowcake :: SubstanceType :: self.m.Name <-- "yellowcake"
solid :: SubstanceType :: self.m.Name <-- "solid"
ore :: SubstanceType :: self.m.Name <-- "ore"
petroleum :: SubstanceType :: self.m.Name <-- "petroleum"
water :: SubstanceType :: self.m.Name <-- "water"
juice :: SubstanceType :: self.m.Name <-- "juice"
metal :: SubstanceType :: self.m.Name <-- "metal"
glass :: SubstanceType :: self.m.Name <-- "glass"
paper :: SubstanceType :: self.m.Name <-- "paper"
mud :: SubstanceType :: self.m.Name <-- "mud"
cement :: SubstanceType :: self.m.Name <-- "cement"
calcium :: SubstanceType :: self.m.Name <-- "calcium"
oxygen :: SubstanceType :: self.m.Name <-- "oxygen"
agent :: Active_substanceType :: self.m.Name <-- "agent"
causative agent :: Active_substanceType :: self.m.Name <-- "causative agent"
irritant :: Active_substanceType :: self.m.Name <-- "irritant"
incapacitant :: Active_substanceType :: self.m.Name <-- "incapacitant"
fruit :: FoodType :: self.m.Name <-- "fruit"
apple :: FoodType :: self.m.Name <-- "apple"
banana :: FoodType :: self.m.Name <-- "banana"
vegetable :: FoodType :: self.m.Name <-- "vegetable"
carrot :: FoodType :: self.m.Name <-- "carrot"
potato :: FoodType :: self.m.Name <-- "potato"
pea :: FoodType :: self.m.Name <-- "pea"
meat :: FoodType :: self.m.Name <-- "meat"
beef :: FoodType :: self.m.Name <-- "beef"
lamb :: FoodType :: self.m.Name <-- "lamb"
veal :: FoodType :: self.m.Name <-- "veal"
poultry :: FoodType :: self.m.Name <-- "poultry"
chicken :: FoodType :: self.m.Name <-- "chicken"
turkey :: FoodType :: self.m.Name <-- "turkey"
fish :: FoodType :: self.m.Name <-- "fish"
salmon :: FoodType :: self.m.Name <-- "salmon"
tuna :: FoodType :: self.m.Name <-- "tuna"
shellfish :: FoodType :: self.m.Name <-- "shellfish"
shrimp :: FoodType :: self.m.Name <-- "shrimp"
lobster :: FoodType :: self.m.Name <-- "lobster"
milk :: FoodType :: self.m.Name <-- "milk"
cheese :: FoodType :: self.m.Name <-- "cheese"
egg :: FoodType :: self.m.Name <-- "egg"
butter :: FoodType :: self.m.Name <-- "butter"
nut :: FoodType :: self.m.Name <-- "nut"
almond :: FoodType :: self.m.Name <-- "almond"
peanut :: FoodType :: self.m.Name <-- "peanut"
pasta :: FoodType :: self.m.Name <-- "pasta"
noodle :: FoodType :: self.m.Name <-- "noodle"
herb :: FoodType :: self.m.Name <-- "herb"
spice :: FoodType :: self.m.Name <-- "spice"
pepper :: FoodType :: self.m.Name <-- "pepper"
basil :: FoodType :: self.m.Name <-- "basil"
cereal :: FoodType :: self.m.Name <-- "cereal"
lettuce :: FoodType :: self.m.Name <-- "lettuce"
berry :: FoodType :: self.m.Name <-- "berry"
bread :: FoodType :: self.m.Name <-- "bread"
roll :: FoodType :: self.m.Name <-- "roll"
cracker :: FoodType :: self.m.Name <-- "cracker"
cake :: FoodType :: self.m.Name <-- "cake"
pancake :: FoodType :: self.m.Name <-- "pancake"
cheesecake :: FoodType :: self.m.Name <-- "cheesecake"
pastry :: FoodType :: self.m.Name <-- "pastry"
croissant :: FoodType :: self.m.Name <-- "croissant"
cookie :: FoodType :: self.m.Name <-- "cookie"
biscuit :: FoodType :: self.m.Name <-- "biscuit"
sweet :: FoodType :: self.m.Name <-- "sweet"
chocolate :: FoodType :: self.m.Name <-- "chocolate"
sweetener :: FoodType :: self.m.Name <-- "sweetener"
sugar :: FoodType :: self.m.Name <-- "sugar"
honey :: FoodType :: self.m.Name <-- "honey"
fat :: FoodType :: self.m.Name <-- "fat"
oil :: FoodType :: self.m.Name <-- "oil"
vinegar :: FoodType :: self.m.Name <-- "vinegar"
coffee :: FoodType :: self.m.Name <-- "coffee"
juice :: FoodType :: self.m.Name <-- "juice"
soup :: FoodType :: self.m.Name <-- "soup"
stew :: FoodType :: self.m.Name <-- "stew"
sauce :: FoodType :: self.m.Name <-- "sauce"
dressing :: FoodType :: self.m.Name <-- "dressing"
vinaigrette :: FoodType :: self.m.Name <-- "vinaigrette"
ketchup :: FoodType :: self.m.Name <-- "ketchup"
mayonnaise :: FoodType :: self.m.Name <-- "mayonnaise"
lasagne :: FoodType :: self.m.Name <-- "lasagne"
food :: FoodType :: self.m.Name <-- "food"
tea :: FoodType :: self.m.Name <-- "tea"
water :: FoodType :: self.m.Name <-- "water"
date :: FoodType :: self.m.Name <-- "date"
cabbage :: FoodType :: self.m.Name <-- "cabbage"
MRE :: FoodType :: self.m.Name <-- "MRE"
beer :: FoodType :: self.m.Name <-- "beer"
wart :: Body_markType :: self.m.Name <-- "wart"
pimple :: Body_markType :: self.m.Name <-- "pimple"
blackhead :: Body_markType :: self.m.Name <-- "blackhead"
scar :: Body_markType :: self.m.Name <-- "scar"
mole :: Body_markType :: self.m.Name <-- "mole"
blemish :: Body_markType :: self.m.Name <-- "blemish"
birthmark :: Body_markType :: self.m.Name <-- "birthmark"
freckle :: Body_markType :: self.m.Name <-- "freckle"
zit :: Body_markType :: self.m.Name <-- "zit"
boil :: Body_markType :: self.m.Name <-- "boil"
blister :: Body_markType :: self.m.Name <-- "blister"
rash :: Body_markType :: self.m.Name <-- "rash"
love bite :: Body_markType :: self.m.Name <-- "love bite"
liver spot :: Body_markType :: self.m.Name <-- "liver spot"
blotch :: Body_markType :: self.m.Name <-- "blotch"
pustule :: Body_markType :: self.m.Name <-- "pustule"
cold sore :: Body_markType :: self.m.Name <-- "cold sore"
callus :: Body_markType :: self.m.Name <-- "callus"
sore :: Body_markType :: self.m.Name <-- "sore"
bedsore :: Body_markType :: self.m.Name <-- "bedsore"
acne :: Body_markType :: self.m.Name <-- "acne"
marijuana :: IntoxicantsType :: self.m.Name <-- "marijuana"
heroin :: IntoxicantsType :: self.m.Name <-- "heroin"
cocaine :: IntoxicantsType :: self.m.Name <-- "cocaine"
opium :: IntoxicantsType :: self.m.Name <-- "opium"
LSD :: IntoxicantsType :: self.m.Name <-- "LSD"
mescaline :: IntoxicantsType :: self.m.Name <-- "mescaline"
ecstasy :: IntoxicantsType :: self.m.Name <-- "ecstasy"
methamphetamine :: IntoxicantsType :: self.m.Name <-- "methamphetamine"
cannabis :: IntoxicantsType :: self.m.Name <-- "cannabis"
amphetamine :: IntoxicantsType :: self.m.Name <-- "amphetamine"
barbiturate :: IntoxicantsType :: self.m.Name <-- "barbiturate"
sedative :: IntoxicantsType :: self.m.Name <-- "sedative"
tranquillizer :: IntoxicantsType :: self.m.Name <-- "tranquillizer"
dope :: IntoxicantsType :: self.m.Name <-- "dope"
coke :: IntoxicantsType :: self.m.Name <-- "coke"
upper :: IntoxicantsType :: self.m.Name <-- "upper"
downer :: IntoxicantsType :: self.m.Name <-- "downer"
speed :: IntoxicantsType :: self.m.Name <-- "speed"
crack :: IntoxicantsType :: self.m.Name <-- "crack"
freebase :: IntoxicantsType :: self.m.Name <-- "freebase"
pot :: IntoxicantsType :: self.m.Name <-- "pot"
acid :: IntoxicantsType :: self.m.Name <-- "acid"
hallucinogen :: IntoxicantsType :: self.m.Name <-- "hallucinogen"
tobacco :: IntoxicantsType :: self.m.Name <-- "tobacco"
nicotine :: IntoxicantsType :: self.m.Name <-- "nicotine"
alcohol :: IntoxicantsType :: self.m.Name <-- "alcohol"
ketamine :: IntoxicantsType :: self.m.Name <-- "ketamine"
morphine :: IntoxicantsType :: self.m.Name <-- "morphine"
codeine :: IntoxicantsType :: self.m.Name <-- "codeine"
inhalant :: IntoxicantsType :: self.m.Name <-- "inhalant"
weed :: IntoxicantsType :: self.m.Name <-- "weed"
grass :: IntoxicantsType :: self.m.Name <-- "grass"
hashish :: IntoxicantsType :: self.m.Name <-- "hashish"
peyote :: IntoxicantsType :: self.m.Name <-- "peyote"
snuff :: IntoxicantsType :: self.m.Name <-- "snuff"
drug :: IntoxicantsType :: self.m.Name <-- "drug"
cigarette :: IntoxicantsType :: self.m.Name <-- "cigarette"
wheel :: ArtifactType :: self.m.Name <-- "wheel"
technology :: ArtifactType :: self.m.Name <-- "technology"
biotechnology :: ArtifactType :: self.m.Name <-- "biotechnology"
artifact :: ArtifactType :: self.m.Name <-- "artifact"
control panel :: ArtifactType :: self.m.Name <-- "control panel"
board :: ArtifactType :: self.m.Name <-- "board"
board (game) :: ArtifactType :: self.m.Name <-- "board (game)"
rifle :: WeaponType :: self.m.Name <-- "rifle"
pistol :: WeaponType :: self.m.Name <-- "pistol"
six-shooter :: WeaponType :: self.m.Name <-- "six-shooter"
firearm :: WeaponType :: self.m.Name <-- "firearm"
gun :: WeaponType :: self.m.Name <-- "gun"
cannon :: WeaponType :: self.m.Name <-- "cannon"
bomb :: WeaponType :: self.m.Name <-- "bomb"
warhead :: WeaponType :: self.m.Name <-- "warhead"
sword :: WeaponType :: self.m.Name <-- "sword"
knife :: WeaponType :: self.m.Name <-- "knife"
gat :: WeaponType :: self.m.Name <-- "gat"
AK-47 :: WeaponType :: self.m.Name <-- "AK-47"
grenade :: WeaponType :: self.m.Name <-- "grenade"
crossbow :: WeaponType :: self.m.Name <-- "crossbow"
machine-gun :: WeaponType :: self.m.Name <-- "machine-gun"
shotgun :: WeaponType :: self.m.Name <-- "shotgun"
shooter :: WeaponType :: self.m.Name <-- "shooter"
flame-thrower :: WeaponType :: self.m.Name <-- "flame-thrower"
weapon :: WeaponType :: self.m.Name <-- "weapon"
handgun :: WeaponType :: self.m.Name <-- "handgun"
club :: WeaponType :: self.m.Name <-- "club"
twenty-two :: WeaponType :: self.m.Name <-- "twenty-two"
forty-four :: WeaponType :: self.m.Name <-- "forty-four"
missile :: WeaponType :: self.m.Name <-- "missile"
garrotte :: WeaponType :: self.m.Name <-- "garrotte"
revolver :: WeaponType :: self.m.Name <-- "revolver"
weaponry :: WeaponType :: self.m.Name <-- "weaponry"
Scud-B missile :: WeaponType :: self.m.Name <-- "Scud-B missile"
arsenal :: WeaponType :: self.m.Name <-- "arsenal"
chemical weapon :: WeaponType :: self.m.Name <-- "chemical weapon"
ballistic missile :: WeaponType :: self.m.Name <-- "ballistic missile"
biological weapon :: WeaponType :: self.m.Name <-- "biological weapon"
nuclear weapon :: WeaponType :: self.m.Name <-- "nuclear weapon"
mustard gas :: WeaponType :: self.m.Name <-- "mustard gas"
CW :: WeaponType :: self.m.Name <-- "CW"
BW :: WeaponType :: self.m.Name <-- "BW"
WMD :: WeaponType :: self.m.Name <-- "WMD"
weapon of mass destruction :: WeaponType :: self.m.Name <-- "weapon of mass destruction"
mine :: WeaponType :: self.m.Name <-- "mine"
spear :: WeaponType :: self.m.Name <-- "spear"
bow :: WeaponType :: self.m.Name <-- "bow"
explosive :: WeaponType :: self.m.Name <-- "explosive"
plastic explosive :: WeaponType :: self.m.Name <-- "plastic explosive"
dynamite :: WeaponType :: self.m.Name <-- "dynamite"
Scud-B :: WeaponType :: self.m.Name <-- "Scud-B"
Scud-C missile :: WeaponType :: self.m.Name <-- "Scud-C missile"
atomic weapon :: WeaponType :: self.m.Name <-- "atomic weapon"
ordnance :: WeaponType :: self.m.Name <-- "ordnance"
arms :: WeaponType :: self.m.Name <-- "arms"
artillery :: WeaponType :: self.m.Name <-- "artillery"
shell :: WeaponType :: self.m.Name <-- "shell"
atomic bomb :: WeaponType :: self.m.Name <-- "atomic bomb"
nerve gas :: WeaponType :: self.m.Name <-- "nerve gas"
strategic nuclear weapon :: WeaponType :: self.m.Name <-- "strategic nuclear weapon"
icbm :: WeaponType :: self.m.Name <-- "icbm"
RPG :: WeaponType :: self.m.Name <-- "RPG"
rocket :: WeaponType :: self.m.Name <-- "rocket"
small arms :: WeaponType :: self.m.Name <-- "small arms"
EFP :: WeaponType :: self.m.Name <-- "EFP"
assault rifle :: WeaponType :: self.m.Name <-- "assault rifle"
mortar :: WeaponType :: self.m.Name <-- "mortar"
roadside bomb :: Improvised_explosive_deviceType :: self.m.Name <-- "roadside bomb"
improvised explosive device :: Improvised_explosive_deviceType :: self.m.Name <-- "improvised explosive device"
IED :: Improvised_explosive_deviceType :: self.m.Name <-- "IED"
dismounted IED :: Improvised_explosive_deviceType :: self.m.Name <-- "dismounted IED"
car bomb :: Improvised_explosive_deviceType :: self.m.Name <-- "car bomb"
VBIED :: Improvised_explosive_deviceType :: self.m.Name <-- "VBIED"
VOIED :: Victim_operated_IEDType :: self.m.Name <-- "VOIED"
PPIED :: Victim_operated_IEDType :: self.m.Name <-- "PPIED"
RCIED :: Distant_operated_IEDType :: self.m.Name <-- "RCIED"
CWIED :: Distant_operated_IEDType :: self.m.Name <-- "CWIED"
command IED :: Distant_operated_IEDType :: self.m.Name <-- "command IED"
ribbon :: ConnectorsType :: self.m.Name <-- "ribbon"
rope :: ConnectorsType :: self.m.Name <-- "rope"
thread :: ConnectorsType :: self.m.Name <-- "thread"
string :: ConnectorsType :: self.m.Name <-- "string"
cord :: ConnectorsType :: self.m.Name <-- "cord"
chain :: ConnectorsType :: self.m.Name <-- "chain"
bond :: ConnectorsType :: self.m.Name <-- "bond"
adhesive :: ConnectorsType :: self.m.Name <-- "adhesive"
tape :: ConnectorsType :: self.m.Name <-- "tape"
glue :: ConnectorsType :: self.m.Name <-- "glue"
bolt :: ConnectorsType :: self.m.Name <-- "bolt"
nut :: ConnectorsType :: self.m.Name <-- "nut"
nail :: ConnectorsType :: self.m.Name <-- "nail"
peg :: ConnectorsType :: self.m.Name <-- "peg"
strap :: ConnectorsType :: self.m.Name <-- "strap"
tack :: ConnectorsType :: self.m.Name <-- "tack"
staple :: ConnectorsType :: self.m.Name <-- "staple"
withy :: ConnectorsType :: self.m.Name <-- "withy"
tie :: ConnectorsType :: self.m.Name <-- "tie"
lace :: ConnectorsType :: self.m.Name <-- "lace"
shoelace :: ConnectorsType :: self.m.Name <-- "shoelace"
wire :: ConnectorsType :: self.m.Name <-- "wire"
screw :: ConnectorsType :: self.m.Name <-- "screw"
link :: ConnectorsType :: self.m.Name <-- "link"
connector :: ConnectorsType :: self.m.Name <-- "connector"
trace :: ConnectorsType :: self.m.Name <-- "trace"
dress :: ClothingType :: self.m.Name <-- "dress"
frock :: ClothingType :: self.m.Name <-- "frock"
petticoat :: ClothingType :: self.m.Name <-- "petticoat"
ballgown :: ClothingType :: self.m.Name <-- "ballgown"
culottes :: ClothingType :: self.m.Name <-- "culottes"
chemise :: ClothingType :: self.m.Name <-- "chemise"
jodhpurs :: ClothingType :: self.m.Name <-- "jodhpurs"
sock :: ClothingType :: self.m.Name <-- "sock"
stocking :: ClothingType :: self.m.Name <-- "stocking"
leggings :: ClothingType :: self.m.Name <-- "leggings"
tunic :: ClothingType :: self.m.Name <-- "tunic"
slip :: ClothingType :: self.m.Name <-- "slip"
gown :: ClothingType :: self.m.Name <-- "gown"
skirt :: ClothingType :: self.m.Name <-- "skirt"
shorts :: ClothingType :: self.m.Name <-- "shorts"
pants :: ClothingType :: self.m.Name <-- "pants"
trousers :: ClothingType :: self.m.Name <-- "trousers"
wrap :: ClothingType :: self.m.Name <-- "wrap"
shirt :: ClothingType :: self.m.Name <-- "shirt"
blouse :: ClothingType :: self.m.Name <-- "blouse"
cloak :: ClothingType :: self.m.Name <-- "cloak"
cape :: ClothingType :: self.m.Name <-- "cape"
coat :: ClothingType :: self.m.Name <-- "coat"
greatcoat :: ClothingType :: self.m.Name <-- "greatcoat"
overcoat :: ClothingType :: self.m.Name <-- "overcoat"
jacket :: ClothingType :: self.m.Name <-- "jacket"
vest :: ClothingType :: self.m.Name <-- "vest"
tie :: ClothingType :: self.m.Name <-- "tie"
hose :: ClothingType :: self.m.Name <-- "hose"
hosiery :: ClothingType :: self.m.Name <-- "hosiery"
clothing :: ClothingType :: self.m.Name <-- "clothing"
clothes :: ClothingType :: self.m.Name <-- "clothes"
finery :: ClothingType :: self.m.Name <-- "finery"
suit :: ClothingType :: self.m.Name <-- "suit"
necktie :: ClothingType :: self.m.Name <-- "necktie"
neckwear :: ClothingType :: self.m.Name <-- "neckwear"
cummerbund :: ClothingType :: self.m.Name <-- "cummerbund"
scarf :: ClothingType :: self.m.Name <-- "scarf"
shawl :: ClothingType :: self.m.Name <-- "shawl"
bow-tie :: ClothingType :: self.m.Name <-- "bow-tie"
pantyhose :: ClothingType :: self.m.Name <-- "pantyhose"
garter :: ClothingType :: self.m.Name <-- "garter"
panties :: ClothingType :: self.m.Name <-- "panties"
knickers :: ClothingType :: self.m.Name <-- "knickers"
sweater :: ClothingType :: self.m.Name <-- "sweater"
jumper :: ClothingType :: self.m.Name <-- "jumper"
cardigan :: ClothingType :: self.m.Name <-- "cardigan"
pullover :: ClothingType :: self.m.Name <-- "pullover"
blazer :: ClothingType :: self.m.Name <-- "blazer"
kilt :: ClothingType :: self.m.Name <-- "kilt"
swimsuit :: ClothingType :: self.m.Name <-- "swimsuit"
bikini :: ClothingType :: self.m.Name <-- "bikini"
robe :: ClothingType :: self.m.Name <-- "robe"
bathrobe :: ClothingType :: self.m.Name <-- "bathrobe"
apron :: ClothingType :: self.m.Name <-- "apron"
miniskirt :: ClothingType :: self.m.Name <-- "miniskirt"
fishnet :: ClothingType :: self.m.Name <-- "fishnet"
legwarmers :: ClothingType :: self.m.Name <-- "legwarmers"
regalia :: ClothingType :: self.m.Name <-- "regalia"
raiment :: ClothingType :: self.m.Name <-- "raiment"
apparel :: ClothingType :: self.m.Name <-- "apparel"
attire :: ClothingType :: self.m.Name <-- "attire"
vestment :: ClothingType :: self.m.Name <-- "vestment"
livery :: ClothingType :: self.m.Name <-- "livery"
outfit :: ClothingType :: self.m.Name <-- "outfit"
garment :: ClothingType :: self.m.Name <-- "garment"
undergarment :: ClothingType :: self.m.Name <-- "undergarment"
underclothing :: ClothingType :: self.m.Name <-- "underclothing"
underclothes :: ClothingType :: self.m.Name <-- "underclothes"
underwear :: ClothingType :: self.m.Name <-- "underwear"
togs :: ClothingType :: self.m.Name <-- "togs"
undies :: ClothingType :: self.m.Name <-- "undies"
shift :: ClothingType :: self.m.Name <-- "shift"
pinafore :: ClothingType :: self.m.Name <-- "pinafore"
mitten :: ClothingType :: self.m.Name <-- "mitten"
mitt :: ClothingType :: self.m.Name <-- "mitt"
glove :: ClothingType :: self.m.Name <-- "glove"
bodice :: ClothingType :: self.m.Name <-- "bodice"
corset :: ClothingType :: self.m.Name <-- "corset"
parka :: ClothingType :: self.m.Name <-- "parka"
windbreaker :: ClothingType :: self.m.Name <-- "windbreaker"
windcheater :: ClothingType :: self.m.Name <-- "windcheater"
raincoat :: ClothingType :: self.m.Name <-- "raincoat"
pyjama :: ClothingType :: self.m.Name <-- "pyjama"
nightie :: ClothingType :: self.m.Name <-- "nightie"
nightdress :: ClothingType :: self.m.Name <-- "nightdress"
nightgown :: ClothingType :: self.m.Name <-- "nightgown"
nightwear :: ClothingType :: self.m.Name <-- "nightwear"
lingerie :: ClothingType :: self.m.Name <-- "lingerie"
camisole :: ClothingType :: self.m.Name <-- "camisole"
waistcoat :: ClothingType :: self.m.Name <-- "waistcoat"
jeans :: ClothingType :: self.m.Name <-- "jeans"
overall :: ClothingType :: self.m.Name <-- "overall"
coverall :: ClothingType :: self.m.Name <-- "coverall"
garb :: ClothingType :: self.m.Name <-- "garb"
smock :: ClothingType :: self.m.Name <-- "smock"
sundress :: ClothingType :: self.m.Name <-- "sundress"
bra :: ClothingType :: self.m.Name <-- "bra"
brassiere :: ClothingType :: self.m.Name <-- "brassiere"
teddy :: ClothingType :: self.m.Name <-- "teddy"
tights :: ClothingType :: self.m.Name <-- "tights"
jumpsuit :: ClothingType :: self.m.Name <-- "jumpsuit"
kimono :: ClothingType :: self.m.Name <-- "kimono"
kaftan :: ClothingType :: self.m.Name <-- "kaftan"
uniform :: ClothingType :: self.m.Name <-- "uniform"
costume :: ClothingType :: self.m.Name <-- "costume"
motley :: ClothingType :: self.m.Name <-- "motley"
get-up :: ClothingType :: self.m.Name <-- "get-up"
ensemble :: ClothingType :: self.m.Name <-- "ensemble"
surplice :: ClothingType :: self.m.Name <-- "surplice"
galosh :: ClothingType :: self.m.Name <-- "galosh"
welly :: ClothingType :: self.m.Name <-- "welly"
wellington :: ClothingType :: self.m.Name <-- "wellington"
slipper :: ClothingType :: self.m.Name <-- "slipper"
sandal :: ClothingType :: self.m.Name <-- "sandal"
sneaker :: ClothingType :: self.m.Name <-- "sneaker"
stiletto :: ClothingType :: self.m.Name <-- "stiletto"
boot :: ClothingType :: self.m.Name <-- "boot"
shoe :: ClothingType :: self.m.Name <-- "shoe"
gumboot :: ClothingType :: self.m.Name <-- "gumboot"
clog :: ClothingType :: self.m.Name <-- "clog"
footwear :: ClothingType :: self.m.Name <-- "footwear"
sari :: ClothingType :: self.m.Name <-- "sari"
sarong :: ClothingType :: self.m.Name <-- "sarong"
poncho :: ClothingType :: self.m.Name <-- "poncho"
abaya :: ClothingType :: self.m.Name <-- "abaya"
jerkin :: ClothingType :: self.m.Name <-- "jerkin"
crinoline :: ClothingType :: self.m.Name <-- "crinoline"
muff :: ClothingType :: self.m.Name <-- "muff"
cowl :: ClothingType :: self.m.Name <-- "cowl"
tutu :: ClothingType :: self.m.Name <-- "tutu"
t-shirt :: ClothingType :: self.m.Name <-- "t-shirt"
polo-neck :: ClothingType :: self.m.Name <-- "polo-neck"
g-string :: ClothingType :: self.m.Name <-- "g-string"
flip-flops :: ClothingType :: self.m.Name <-- "flip-flops"
one-piece :: ClothingType :: self.m.Name <-- "one-piece"
two-piece :: ClothingType :: self.m.Name <-- "two-piece"
flannels :: ClothingType :: self.m.Name <-- "flannels"
rags :: ClothingType :: self.m.Name <-- "rags"
silks :: ClothingType :: self.m.Name <-- "silks"
satins :: ClothingType :: self.m.Name <-- "satins"
cottons :: ClothingType :: self.m.Name <-- "cottons"
tweeds :: ClothingType :: self.m.Name <-- "tweeds"
ermines :: ClothingType :: self.m.Name <-- "ermines"
muslins :: ClothingType :: self.m.Name <-- "muslins"
tippet :: ClothingType :: self.m.Name <-- "tippet"
doublet :: ClothingType :: self.m.Name <-- "doublet"
tatters :: ClothingType :: self.m.Name <-- "tatters"
neckerchief :: ClothingType :: self.m.Name <-- "neckerchief"
breeches :: ClothingType :: self.m.Name <-- "breeches"
sweatshirt :: ClothingType :: self.m.Name <-- "sweatshirt"
sweatpants :: ClothingType :: self.m.Name <-- "sweatpants"
tracksuit :: ClothingType :: self.m.Name <-- "tracksuit"
alb :: ClothingType :: self.m.Name <-- "alb"
stole :: ClothingType :: self.m.Name <-- "stole"
chasuble :: ClothingType :: self.m.Name <-- "chasuble"
cope :: ClothingType :: self.m.Name <-- "cope"
buskin :: ClothingType :: self.m.Name <-- "buskin"
pallium :: ClothingType :: self.m.Name <-- "pallium"
gauntlet :: ClothingType :: self.m.Name <-- "gauntlet"
cravat :: ClothingType :: self.m.Name <-- "cravat"
briefs :: ClothingType :: self.m.Name <-- "briefs"
cossie :: ClothingType :: self.m.Name <-- "cossie"
regalia :: AccoutrementsType :: self.m.Name <-- "regalia"
anklet :: AccoutrementsType :: self.m.Name <-- "anklet"
ring :: AccoutrementsType :: self.m.Name <-- "ring"
earring :: AccoutrementsType :: self.m.Name <-- "earring"
jewellery :: AccoutrementsType :: self.m.Name <-- "jewellery"
necklace :: AccoutrementsType :: self.m.Name <-- "necklace"
bangle :: AccoutrementsType :: self.m.Name <-- "bangle"
bracelet :: AccoutrementsType :: self.m.Name <-- "bracelet"
coronet :: AccoutrementsType :: self.m.Name <-- "coronet"
crown :: AccoutrementsType :: self.m.Name <-- "crown"
brooch :: AccoutrementsType :: self.m.Name <-- "brooch"
tiara :: AccoutrementsType :: self.m.Name <-- "tiara"
circlet :: AccoutrementsType :: self.m.Name <-- "circlet"
diadem :: AccoutrementsType :: self.m.Name <-- "diadem"
chain :: AccoutrementsType :: self.m.Name <-- "chain"
locket :: AccoutrementsType :: self.m.Name <-- "locket"
pendant :: AccoutrementsType :: self.m.Name <-- "pendant"
wig :: AccoutrementsType :: self.m.Name <-- "wig"
toupee :: AccoutrementsType :: self.m.Name <-- "toupee"
cufflink :: AccoutrementsType :: self.m.Name <-- "cufflink"
glasses :: AccoutrementsType :: self.m.Name <-- "glasses"
spectacles :: AccoutrementsType :: self.m.Name <-- "spectacles"
hat :: AccoutrementsType :: self.m.Name <-- "hat"
hat-pin :: AccoutrementsType :: self.m.Name <-- "hat-pin"
cap :: AccoutrementsType :: self.m.Name <-- "cap"
bonnet :: AccoutrementsType :: self.m.Name <-- "bonnet"
mask :: AccoutrementsType :: self.m.Name <-- "mask"
bandanna :: AccoutrementsType :: self.m.Name <-- "bandanna"
headband :: AccoutrementsType :: self.m.Name <-- "headband"
hairpiece :: AccoutrementsType :: self.m.Name <-- "hairpiece"
fez :: AccoutrementsType :: self.m.Name <-- "fez"
skullcap :: AccoutrementsType :: self.m.Name <-- "skullcap"
top-hat :: AccoutrementsType :: self.m.Name <-- "top-hat"
accoutrement :: AccoutrementsType :: self.m.Name <-- "accoutrement"
yarmulkah :: AccoutrementsType :: self.m.Name <-- "yarmulkah"
balaclava :: AccoutrementsType :: self.m.Name <-- "balaclava"
beret :: AccoutrementsType :: self.m.Name <-- "beret"
biretta :: AccoutrementsType :: self.m.Name <-- "biretta"
boater :: AccoutrementsType :: self.m.Name <-- "boater"
bowler :: AccoutrementsType :: self.m.Name <-- "bowler"
nightcap :: AccoutrementsType :: self.m.Name <-- "nightcap"
panama :: AccoutrementsType :: self.m.Name <-- "panama"
sombrero :: AccoutrementsType :: self.m.Name <-- "sombrero"
trilby :: AccoutrementsType :: self.m.Name <-- "trilby"
turban :: AccoutrementsType :: self.m.Name <-- "turban"
shako :: AccoutrementsType :: self.m.Name <-- "shako"
veil :: AccoutrementsType :: self.m.Name <-- "veil"
headdress :: AccoutrementsType :: self.m.Name <-- "headdress"
headpiece :: AccoutrementsType :: self.m.Name <-- "headpiece"
belt :: AccoutrementsType :: self.m.Name <-- "belt"
trinket :: AccoutrementsType :: self.m.Name <-- "trinket"
choker :: AccoutrementsType :: self.m.Name <-- "choker"
sporran :: AccoutrementsType :: self.m.Name <-- "sporran"
snood :: AccoutrementsType :: self.m.Name <-- "snood"
hairnet :: AccoutrementsType :: self.m.Name <-- "hairnet"
hairslide :: AccoutrementsType :: self.m.Name <-- "hairslide"
hairpin :: AccoutrementsType :: self.m.Name <-- "hairpin"
hairband :: AccoutrementsType :: self.m.Name <-- "hairband"
hairgrip :: AccoutrementsType :: self.m.Name <-- "hairgrip"
sash :: AccoutrementsType :: self.m.Name <-- "sash"
watch :: AccoutrementsType :: self.m.Name <-- "watch"
medal :: AccoutrementsType :: self.m.Name <-- "medal"
medallion :: AccoutrementsType :: self.m.Name <-- "medallion"
ribbon :: AccoutrementsType :: self.m.Name <-- "ribbon"
badge :: AccoutrementsType :: self.m.Name <-- "badge"
armband :: AccoutrementsType :: self.m.Name <-- "armband"
armlet :: AccoutrementsType :: self.m.Name <-- "armlet"
goggles :: AccoutrementsType :: self.m.Name <-- "goggles"
mitre :: AccoutrementsType :: self.m.Name <-- "mitre"
helm :: AccoutrementsType :: self.m.Name <-- "helm"
helmet :: AccoutrementsType :: self.m.Name <-- "helmet"
gorget :: AccoutrementsType :: self.m.Name <-- "gorget"
greaves :: AccoutrementsType :: self.m.Name <-- "greaves"
coif :: AccoutrementsType :: self.m.Name <-- "coif"
hauberk :: AccoutrementsType :: self.m.Name <-- "hauberk"
mantle :: AccoutrementsType :: self.m.Name <-- "mantle"
gas mask :: AccoutrementsType :: self.m.Name <-- "gas mask"
law :: LawType :: self.m.Name <-- "law"
code :: LawType :: self.m.Name <-- "code"
protocol :: LawType :: self.m.Name <-- "protocol"
act :: LawType :: self.m.Name <-- "act"
statute :: LawType :: self.m.Name <-- "statute"
regulation :: LawType :: self.m.Name <-- "regulation"
regime :: LawType :: self.m.Name <-- "regime"
policy :: LawType :: self.m.Name <-- "policy"
order :: LawType :: self.m.Name <-- "order"
house :: BuildingsType :: self.m.Name <-- "house"
houseboat :: BuildingsType :: self.m.Name <-- "houseboat"
church :: BuildingsType :: self.m.Name <-- "church"
tower :: BuildingsType :: self.m.Name <-- "tower"
bungalow :: BuildingsType :: self.m.Name <-- "bungalow"
cabin :: BuildingsType :: self.m.Name <-- "cabin"
castle :: BuildingsType :: self.m.Name <-- "castle"
condominium :: BuildingsType :: self.m.Name <-- "condominium"
cottage :: BuildingsType :: self.m.Name <-- "cottage"
dacha :: BuildingsType :: self.m.Name <-- "dacha"
dormitory :: BuildingsType :: self.m.Name <-- "dormitory"
dwelling :: BuildingsType :: self.m.Name <-- "dwelling"
farmhouse :: BuildingsType :: self.m.Name <-- "farmhouse"
home :: BuildingsType :: self.m.Name <-- "home"
hospital :: BuildingsType :: self.m.Name <-- "hospital"
hostel :: BuildingsType :: self.m.Name <-- "hostel"
hotel :: BuildingsType :: self.m.Name <-- "hotel"
igloo :: BuildingsType :: self.m.Name <-- "igloo"
lodge :: BuildingsType :: self.m.Name <-- "lodge"
mansion :: BuildingsType :: self.m.Name <-- "mansion"
monastery :: BuildingsType :: self.m.Name <-- "monastery"
motel :: BuildingsType :: self.m.Name <-- "motel"
palace :: BuildingsType :: self.m.Name <-- "palace"
pension :: BuildingsType :: self.m.Name <-- "pension"
pueblo :: BuildingsType :: self.m.Name <-- "pueblo"
residence :: BuildingsType :: self.m.Name <-- "residence"
shack :: BuildingsType :: self.m.Name <-- "shack"
shanty :: BuildingsType :: self.m.Name <-- "shanty"
shelter :: BuildingsType :: self.m.Name <-- "shelter"
tenement :: BuildingsType :: self.m.Name <-- "tenement"
tent :: BuildingsType :: self.m.Name <-- "tent"
villa :: BuildingsType :: self.m.Name <-- "villa"
acropolis :: BuildingsType :: self.m.Name <-- "acropolis"
arena :: BuildingsType :: self.m.Name <-- "arena"
auditorium :: BuildingsType :: self.m.Name <-- "auditorium"
barn :: BuildingsType :: self.m.Name <-- "barn"
barracks :: BuildingsType :: self.m.Name <-- "barracks"
basilica :: BuildingsType :: self.m.Name <-- "basilica"
blockhouse :: BuildingsType :: self.m.Name <-- "blockhouse"
campanile :: BuildingsType :: self.m.Name <-- "campanile"
caravan :: BuildingsType :: self.m.Name <-- "caravan"
caravanserai :: BuildingsType :: self.m.Name <-- "caravanserai"
chalet :: BuildingsType :: self.m.Name <-- "chalet"
chateau :: BuildingsType :: self.m.Name <-- "chateau"
conservatory :: BuildingsType :: self.m.Name <-- "conservatory"
garage :: BuildingsType :: self.m.Name <-- "garage"
gazebo :: BuildingsType :: self.m.Name <-- "gazebo"
greenhouse :: BuildingsType :: self.m.Name <-- "greenhouse"
hall :: BuildingsType :: self.m.Name <-- "hall"
hangar :: BuildingsType :: self.m.Name <-- "hangar"
hippodrome :: BuildingsType :: self.m.Name <-- "hippodrome"
hovel :: BuildingsType :: self.m.Name <-- "hovel"
inn :: BuildingsType :: self.m.Name <-- "inn"
kennel :: BuildingsType :: self.m.Name <-- "kennel"
kiosk :: BuildingsType :: self.m.Name <-- "kiosk"
lighthouse :: BuildingsType :: self.m.Name <-- "lighthouse"
maisonette :: BuildingsType :: self.m.Name <-- "maisonette"
mall :: BuildingsType :: self.m.Name <-- "mall"
manor :: BuildingsType :: self.m.Name <-- "manor"
manse :: BuildingsType :: self.m.Name <-- "manse"
mosque :: BuildingsType :: self.m.Name <-- "mosque"
outbuilding :: BuildingsType :: self.m.Name <-- "outbuilding"
outhouse :: BuildingsType :: self.m.Name <-- "outhouse"
pagoda :: BuildingsType :: self.m.Name <-- "pagoda"
palazzo :: BuildingsType :: self.m.Name <-- "palazzo"
pavilion :: BuildingsType :: self.m.Name <-- "pavilion"
penthouse :: BuildingsType :: self.m.Name <-- "penthouse"
pyramid :: BuildingsType :: self.m.Name <-- "pyramid"
rotunda :: BuildingsType :: self.m.Name <-- "rotunda"
shebang :: BuildingsType :: self.m.Name <-- "shebang"
shed :: BuildingsType :: self.m.Name <-- "shed"
skyscraper :: BuildingsType :: self.m.Name <-- "skyscraper"
stable :: BuildingsType :: self.m.Name <-- "stable"
stadium :: BuildingsType :: self.m.Name <-- "stadium"
supermarket :: BuildingsType :: self.m.Name <-- "supermarket"
synagogue :: BuildingsType :: self.m.Name <-- "synagogue"
tabernacle :: BuildingsType :: self.m.Name <-- "tabernacle"
tavern :: BuildingsType :: self.m.Name <-- "tavern"
tepee :: BuildingsType :: self.m.Name <-- "tepee"
terminal :: BuildingsType :: self.m.Name <-- "terminal"
triplex :: BuildingsType :: self.m.Name <-- "triplex"
warehouse :: BuildingsType :: self.m.Name <-- "warehouse"
wigwam :: BuildingsType :: self.m.Name <-- "wigwam"
hacienda :: BuildingsType :: self.m.Name <-- "hacienda"
homestead :: BuildingsType :: self.m.Name <-- "homestead"
bunker :: BuildingsType :: self.m.Name <-- "bunker"
theater :: BuildingsType :: self.m.Name <-- "theater"
bar :: BuildingsType :: self.m.Name <-- "bar"
city hall :: BuildingsType :: self.m.Name <-- "city hall"
disco :: BuildingsType :: self.m.Name <-- "disco"
discotheque :: BuildingsType :: self.m.Name <-- "discotheque"
library :: BuildingsType :: self.m.Name <-- "library"
temple :: BuildingsType :: self.m.Name <-- "temple"
building :: BuildingsType :: self.m.Name <-- "building"
structure :: BuildingsType :: self.m.Name <-- "structure"
housing :: BuildingsType :: self.m.Name <-- "housing"
fortress :: BuildingsType :: self.m.Name <-- "fortress"
fortification :: BuildingsType :: self.m.Name <-- "fortification"
citadel :: BuildingsType :: self.m.Name <-- "citadel"
fort :: BuildingsType :: self.m.Name <-- "fort"
airport :: BuildingsType :: self.m.Name <-- "airport"
pub :: BuildingsType :: self.m.Name <-- "pub"
high-rise :: BuildingsType :: self.m.Name <-- "high-rise"
quarters :: BuildingsType :: self.m.Name <-- "quarters"
guitar :: Noise_makersType :: self.m.Name <-- "guitar"
bell :: Noise_makersType :: self.m.Name <-- "bell"
siren :: Noise_makersType :: self.m.Name <-- "siren"
piano :: Noise_makersType :: self.m.Name <-- "piano"
rattle :: Noise_makersType :: self.m.Name <-- "rattle"
xylophone :: Noise_makersType :: self.m.Name <-- "xylophone"
drum :: Noise_makersType :: self.m.Name <-- "drum"
cello :: Noise_makersType :: self.m.Name <-- "cello"
saxophone :: Noise_makersType :: self.m.Name <-- "saxophone"
alarm :: Noise_makersType :: self.m.Name <-- "alarm"
ammunition :: AmmunitionType :: self.m.Name <-- "ammunition"
ammo :: AmmunitionType :: self.m.Name <-- "ammo"
ordnance :: AmmunitionType :: self.m.Name <-- "ordnance"
round :: AmmunitionType :: self.m.Name <-- "round"
munitions :: AmmunitionType :: self.m.Name <-- "munitions"
bullet :: AmmunitionType :: self.m.Name <-- "bullet"
zipper :: FastenerType :: self.m.Name <-- "zipper"
seal :: FastenerType :: self.m.Name <-- "seal"
button :: FastenerType :: self.m.Name <-- "button"
buckle :: FastenerType :: self.m.Name <-- "buckle"
infrastructure :: InfrastructureType :: self.m.Name <-- "infrastructure"
base :: InfrastructureType :: self.m.Name <-- "base"
car :: VehicleType :: self.m.Name <-- "car"
bus :: VehicleType :: self.m.Name <-- "bus"
truck :: VehicleType :: self.m.Name <-- "truck"
bike :: VehicleType :: self.m.Name <-- "bike"
taxi :: VehicleType :: self.m.Name <-- "taxi"
plane :: VehicleType :: self.m.Name <-- "plane"
ferry :: VehicleType :: self.m.Name <-- "ferry"
boat :: VehicleType :: self.m.Name <-- "boat"
bicycle :: VehicleType :: self.m.Name <-- "bicycle"
ship :: VehicleType :: self.m.Name <-- "ship"
tram :: VehicleType :: self.m.Name <-- "tram"
automobile :: VehicleType :: self.m.Name <-- "automobile"
tricycle :: VehicleType :: self.m.Name <-- "tricycle"
airplane :: VehicleType :: self.m.Name <-- "airplane"
scooter :: VehicleType :: self.m.Name <-- "scooter"
schooner :: VehicleType :: self.m.Name <-- "schooner"
train :: VehicleType :: self.m.Name <-- "train"
carriage :: VehicleType :: self.m.Name <-- "carriage"
cab :: VehicleType :: self.m.Name <-- "cab"
coach :: VehicleType :: self.m.Name <-- "coach"
vehicle :: VehicleType :: self.m.Name <-- "vehicle"
lorry :: VehicleType :: self.m.Name <-- "lorry"
submarine :: VehicleType :: self.m.Name <-- "submarine"
tank :: VehicleType :: self.m.Name <-- "tank"
cart :: VehicleType :: self.m.Name <-- "cart"
toboggan :: VehicleType :: self.m.Name <-- "toboggan"
pick-up :: VehicleType :: self.m.Name <-- "pick-up"
van :: VehicleType :: self.m.Name <-- "van"
limousine :: VehicleType :: self.m.Name <-- "limousine"
convertible :: VehicleType :: self.m.Name <-- "convertible"
helicopter :: VehicleType :: self.m.Name <-- "helicopter"
canoe :: VehicleType :: self.m.Name <-- "canoe"
kayak :: VehicleType :: self.m.Name <-- "kayak"
buggy :: VehicleType :: self.m.Name <-- "buggy"
liner :: VehicleType :: self.m.Name <-- "liner"
sedan :: VehicleType :: self.m.Name <-- "sedan"
vessel :: VehicleType :: self.m.Name <-- "vessel"
tank car :: VehicleType :: self.m.Name <-- "tank car"
warplane :: VehicleType :: self.m.Name <-- "warplane"
yacht :: VehicleType :: self.m.Name <-- "yacht"
chopper :: VehicleType :: self.m.Name <-- "chopper"
helo :: VehicleType :: self.m.Name <-- "helo"
bird :: VehicleType :: self.m.Name <-- "bird"
minivan :: VehicleType :: self.m.Name <-- "minivan"
ambulance :: VehicleType :: self.m.Name <-- "ambulance"
aircraft :: VehicleType :: self.m.Name <-- "aircraft"
tattoo :: Body_decorationType :: self.m.Name <-- "tattoo"
make-up :: Body_decorationType :: self.m.Name <-- "make-up"
mascara :: Body_decorationType :: self.m.Name <-- "mascara"
eyeliner :: Body_decorationType :: self.m.Name <-- "eyeliner"
rouge :: Body_decorationType :: self.m.Name <-- "rouge"
blusher :: Body_decorationType :: self.m.Name <-- "blusher"
concealer :: Body_decorationType :: self.m.Name <-- "concealer"
lipstick :: Body_decorationType :: self.m.Name <-- "lipstick"
foundation :: Body_decorationType :: self.m.Name <-- "foundation"
eyeshadow :: Body_decorationType :: self.m.Name <-- "eyeshadow"
kohl :: Body_decorationType :: self.m.Name <-- "kohl"
tome :: TextType :: self.m.Name <-- "tome"
fanzine :: TextType :: self.m.Name <-- "fanzine"
epilogue :: TextType :: self.m.Name <-- "epilogue"
benediction :: TextType :: self.m.Name <-- "benediction"
imprecation :: TextType :: self.m.Name <-- "imprecation"
eulogy :: TextType :: self.m.Name <-- "eulogy"
autobiography :: TextType :: self.m.Name <-- "autobiography"
ballad :: TextType :: self.m.Name <-- "ballad"
biography :: TextType :: self.m.Name <-- "biography"
chronicle :: TextType :: self.m.Name <-- "chronicle"
comedy :: TextType :: self.m.Name <-- "comedy"
diary :: TextType :: self.m.Name <-- "diary"
drama :: TextType :: self.m.Name <-- "drama"
elegy :: TextType :: self.m.Name <-- "elegy"
epic :: TextType :: self.m.Name <-- "epic"
epigram :: TextType :: self.m.Name <-- "epigram"
epistle :: TextType :: self.m.Name <-- "epistle"
essay :: TextType :: self.m.Name <-- "essay"
exemplum :: TextType :: self.m.Name <-- "exemplum"
fable :: TextType :: self.m.Name <-- "fable"
festschrift :: TextType :: self.m.Name <-- "festschrift"
haiku :: TextType :: self.m.Name <-- "haiku"
letter :: TextType :: self.m.Name <-- "letter"
limerick :: TextType :: self.m.Name <-- "limerick"
lyric :: TextType :: self.m.Name <-- "lyric"
memoir :: TextType :: self.m.Name <-- "memoir"
monograph :: TextType :: self.m.Name <-- "monograph"
mystery :: TextType :: self.m.Name <-- "mystery"
novel :: TextType :: self.m.Name <-- "novel"
novelette :: TextType :: self.m.Name <-- "novelette"
novella :: TextType :: self.m.Name <-- "novella"
ode :: TextType :: self.m.Name <-- "ode"
poetry :: TextType :: self.m.Name <-- "poetry"
poem :: TextType :: self.m.Name <-- "poem"
rhyme :: TextType :: self.m.Name <-- "rhyme"
saga :: TextType :: self.m.Name <-- "saga"
song :: TextType :: self.m.Name <-- "song"
sonnet :: TextType :: self.m.Name <-- "sonnet"
speech :: TextType :: self.m.Name <-- "speech"
tetralogy :: TextType :: self.m.Name <-- "tetralogy"
thriller :: TextType :: self.m.Name <-- "thriller"
tragedy :: TextType :: self.m.Name <-- "tragedy"
trilogy :: TextType :: self.m.Name <-- "trilogy"
whodunit :: TextType :: self.m.Name <-- "whodunit"
manual :: TextType :: self.m.Name <-- "manual"
handbook :: TextType :: self.m.Name <-- "handbook"
paperback :: TextType :: self.m.Name <-- "paperback"
hardback :: TextType :: self.m.Name <-- "hardback"
grimoire :: TextType :: self.m.Name <-- "grimoire"
spellbook :: TextType :: self.m.Name <-- "spellbook"
lay :: TextType :: self.m.Name <-- "lay"
book :: TextType :: self.m.Name <-- "book"
magazine :: TextType :: self.m.Name <-- "magazine"
account :: TextType :: self.m.Name <-- "account"
sermon :: TextType :: self.m.Name <-- "sermon"
tract :: TextType :: self.m.Name <-- "tract"
screenplay :: TextType :: self.m.Name <-- "screenplay"
script :: TextType :: self.m.Name <-- "script"
article :: TextType :: self.m.Name <-- "article"
obituary :: TextType :: self.m.Name <-- "obituary"
volume :: TextType :: self.m.Name <-- "volume"
mag :: TextType :: self.m.Name <-- "mag"
edition :: TextType :: self.m.Name <-- "edition"
treatise :: TextType :: self.m.Name <-- "treatise"
report :: TextType :: self.m.Name <-- "report"
bulletin :: TextType :: self.m.Name <-- "bulletin"
tractate :: TextType :: self.m.Name <-- "tractate"
hagiography :: TextType :: self.m.Name <-- "hagiography"
journal :: TextType :: self.m.Name <-- "journal"
periodical :: TextType :: self.m.Name <-- "periodical"
editorial :: TextType :: self.m.Name <-- "editorial"
meditation :: TextType :: self.m.Name <-- "meditation"
booklet :: TextType :: self.m.Name <-- "booklet"
fiction :: TextType :: self.m.Name <-- "fiction"
writings :: TextType :: self.m.Name <-- "writings"
missive :: TextType :: self.m.Name <-- "missive"
newspaper :: TextType :: self.m.Name <-- "newspaper"
list :: TextType :: self.m.Name <-- "list"
manuscript :: TextType :: self.m.Name <-- "manuscript"
literature :: TextType :: self.m.Name <-- "literature"
history :: TextType :: self.m.Name <-- "history"
brochure :: TextType :: self.m.Name <-- "brochure"
material :: TextType :: self.m.Name <-- "material"
pamphlet :: TextType :: self.m.Name <-- "pamphlet"
issue :: TextType :: self.m.Name <-- "issue"
paper [newspaper] :: TextType :: self.m.Name <-- "paper [newspaper]"
paper [article] :: TextType :: self.m.Name <-- "paper [article]"
publication :: TextType :: self.m.Name <-- "publication"
life :: TextType :: self.m.Name <-- "life"
record :: TextType :: self.m.Name <-- "record"
visa :: DocumentsType :: self.m.Name <-- "visa"
card :: DocumentsType :: self.m.Name <-- "card"
passport :: DocumentsType :: self.m.Name <-- "passport"
subpoena :: DocumentsType :: self.m.Name <-- "subpoena"
warrant :: DocumentsType :: self.m.Name <-- "warrant"
certificate :: DocumentsType :: self.m.Name <-- "certificate"
papers :: DocumentsType :: self.m.Name <-- "papers"
license :: DocumentsType :: self.m.Name <-- "license"
summons :: DocumentsType :: self.m.Name <-- "summons"
diploma :: DocumentsType :: self.m.Name <-- "diploma"
deed :: DocumentsType :: self.m.Name <-- "deed"
lease :: DocumentsType :: self.m.Name <-- "lease"
agreement :: DocumentsType :: self.m.Name <-- "agreement"
treaty :: DocumentsType :: self.m.Name <-- "treaty"
charter :: DocumentsType :: self.m.Name <-- "charter"
authorization :: DocumentsType :: self.m.Name <-- "authorization"
deposition :: DocumentsType :: self.m.Name <-- "deposition"
brief :: DocumentsType :: self.m.Name <-- "brief"
writ :: DocumentsType :: self.m.Name <-- "writ"
affidavit :: DocumentsType :: self.m.Name <-- "affidavit"
will :: DocumentsType :: self.m.Name <-- "will"
testimony :: DocumentsType :: self.m.Name <-- "testimony"
testament :: DocumentsType :: self.m.Name <-- "testament"
ruling :: DocumentsType :: self.m.Name <-- "ruling"
finding :: DocumentsType :: self.m.Name <-- "finding"
opinion :: DocumentsType :: self.m.Name <-- "opinion"
title :: DocumentsType :: self.m.Name <-- "title"
orders :: DocumentsType :: self.m.Name <-- "orders"
contract :: DocumentsType :: self.m.Name <-- "contract"
permit :: DocumentsType :: self.m.Name <-- "permit"
document :: DocumentsType :: self.m.Name <-- "document"
accord :: DocumentsType :: self.m.Name <-- "accord"
confirmation :: DocumentsType :: self.m.Name <-- "confirmation"
identification :: DocumentsType :: self.m.Name <-- "identification"
book :: RecordsType :: self.m.Name <-- "book"
log :: RecordsType :: self.m.Name <-- "log"
record :: RecordsType :: self.m.Name <-- "record"
journal :: RecordsType :: self.m.Name <-- "journal"
recording :: RecordsType :: self.m.Name <-- "recording"
money :: MoneyType :: self.m.Name <-- "money"
cash :: MoneyType :: self.m.Name <-- "cash"
funds :: MoneyType :: self.m.Name <-- "funds"
dough :: MoneyType :: self.m.Name <-- "dough"
capital :: MoneyType :: self.m.Name <-- "capital"
dinero :: MoneyType :: self.m.Name <-- "dinero"
sterling :: MoneyType :: self.m.Name <-- "sterling"
board (forum) :: Information_displayType :: self.m.Name <-- "board (forum)"
board (written) :: Information_displayType :: self.m.Name <-- "board (written)"
monitor :: Information_displayType :: self.m.Name <-- "monitor"
button :: Controller_objectType :: self.m.Name <-- "button"
board :: Controller_objectType :: self.m.Name <-- "board"
knob :: Controller_objectType :: self.m.Name <-- "knob"
switch :: Controller_objectType :: self.m.Name <-- "switch"
control :: Controller_objectType :: self.m.Name <-- "control"
switchboard :: Controller_objectType :: self.m.Name <-- "switchboard"
key :: KeyType :: self.m.Name <-- "key"
combination :: KeyType :: self.m.Name <-- "combination"
password :: KeyType :: self.m.Name <-- "password"
passcard :: KeyType :: self.m.Name <-- "passcard"
keycard :: KeyType :: self.m.Name <-- "keycard"
stethoscope :: Medical_instrumentsType :: self.m.Name <-- "stethoscope"
bronchoscope :: Medical_instrumentsType :: self.m.Name <-- "bronchoscope"
colonoscope :: Medical_instrumentsType :: self.m.Name <-- "colonoscope"
endoscope :: Medical_instrumentsType :: self.m.Name <-- "endoscope"
catheter :: Medical_instrumentsType :: self.m.Name <-- "catheter"
forceps :: Medical_instrumentsType :: self.m.Name <-- "forceps"
cholecystoscope :: Medical_instrumentsType :: self.m.Name <-- "cholecystoscope"
fluoroscope :: Medical_instrumentsType :: self.m.Name <-- "fluoroscope"
gastroscope :: Medical_instrumentsType :: self.m.Name <-- "gastroscope"
laparoscope :: Medical_instrumentsType :: self.m.Name <-- "laparoscope"
ophthalmoscope :: Medical_instrumentsType :: self.m.Name <-- "ophthalmoscope"
oscilloscope :: Medical_instrumentsType :: self.m.Name <-- "oscilloscope"
sigmoidoscope :: Medical_instrumentsType :: self.m.Name <-- "sigmoidoscope"
needle :: Medical_instrumentsType :: self.m.Name <-- "needle"
scalpel :: Medical_instrumentsType :: self.m.Name <-- "scalpel"
speculum :: Medical_instrumentsType :: self.m.Name <-- "speculum"
syringe :: Medical_instrumentsType :: self.m.Name <-- "syringe"
otoscope :: Medical_instrumentsType :: self.m.Name <-- "otoscope"
blood pressure cuff :: Medical_instrumentsType :: self.m.Name <-- "blood pressure cuff"
photo :: Physical_artworksType :: self.m.Name <-- "photo"
photograph :: Physical_artworksType :: self.m.Name <-- "photograph"
painting :: Physical_artworksType :: self.m.Name <-- "painting"
picture :: Physical_artworksType :: self.m.Name <-- "picture"
drawing :: Physical_artworksType :: self.m.Name <-- "drawing"
statue :: Physical_artworksType :: self.m.Name <-- "statue"
statuette :: Physical_artworksType :: self.m.Name <-- "statuette"
bronze :: Physical_artworksType :: self.m.Name <-- "bronze"
diagram :: Physical_artworksType :: self.m.Name <-- "diagram"
sculpture :: Physical_artworksType :: self.m.Name <-- "sculpture"
image :: Physical_artworksType :: self.m.Name <-- "image"
poster :: Physical_artworksType :: self.m.Name <-- "poster"
trace :: Physical_artworksType :: self.m.Name <-- "trace"
tracing :: Physical_artworksType :: self.m.Name <-- "tracing"
fire break :: Fire_breakType :: self.m.Name <-- "fire break"
fire line :: Fire_breakType :: self.m.Name <-- "fire line"
life :: Biological_entityType :: self.m.Name <-- "life"
lifeform :: Biological_entityType :: self.m.Name <-- "lifeform"
organism :: Biological_entityType :: self.m.Name <-- "organism"
people :: PeopleType :: self.m.Name <-- "people"
person :: PeopleType :: self.m.Name <-- "person"
un :: PeopleType :: self.m.Name <-- "un"
guy :: PeopleType :: self.m.Name <-- "guy"
dude :: PeopleType :: self.m.Name <-- "dude"
lady :: PeopleType :: self.m.Name <-- "lady"
man :: PeopleType :: self.m.Name <-- "man"
woman :: PeopleType :: self.m.Name <-- "woman"
fellow :: PeopleType :: self.m.Name <-- "fellow"
gentleman :: PeopleType :: self.m.Name <-- "gentleman"
girl :: PeopleType :: self.m.Name <-- "girl"
individual :: PeopleType :: self.m.Name <-- "individual"
chap :: PeopleType :: self.m.Name <-- "chap"
human :: PeopleType :: self.m.Name <-- "human"
human being :: PeopleType :: self.m.Name <-- "human being"
folks :: PeopleType :: self.m.Name <-- "folks"
life :: PeopleType :: self.m.Name <-- "life"
pax :: PeopleType :: self.m.Name <-- "pax"
folk :: PeopleType :: self.m.Name <-- "folk"
geezer :: People_by_ageType :: self.m.Name <-- "geezer"
coot :: People_by_ageType :: self.m.Name <-- "coot"
spring chicken :: People_by_ageType :: self.m.Name <-- "spring chicken"
adolescent :: People_by_ageType :: self.m.Name <-- "adolescent"
adult :: People_by_ageType :: self.m.Name <-- "adult"
baby :: People_by_ageType :: self.m.Name <-- "baby"
boy :: People_by_ageType :: self.m.Name <-- "boy"
child :: People_by_ageType :: self.m.Name <-- "child"
infant :: People_by_ageType :: self.m.Name <-- "infant"
neonate :: People_by_ageType :: self.m.Name <-- "neonate"
teenager :: People_by_ageType :: self.m.Name <-- "teenager"
kid :: People_by_ageType :: self.m.Name <-- "kid"
youth :: People_by_ageType :: self.m.Name <-- "youth"
youngster :: People_by_ageType :: self.m.Name <-- "youngster"
elderly :: People_by_ageType :: self.m.Name <-- "elderly"
newborn :: People_by_ageType :: self.m.Name <-- "newborn"
Mexican :: People_by_originType :: self.m.Name <-- "Mexican"
New Yorker :: People_by_originType :: self.m.Name <-- "New Yorker"
Frenchman :: People_by_originType :: self.m.Name <-- "Frenchman"
English :: People_by_originType :: self.m.Name <-- "English"
foreigner :: People_by_originType :: self.m.Name <-- "foreigner"
American :: People_by_originType :: self.m.Name <-- "American"
American [N and S Am] :: People_by_originType :: self.m.Name <-- "American [N and S Am]"
Frenchwoman :: People_by_originType :: self.m.Name <-- "Frenchwoman"
Frenchy :: People_by_originType :: self.m.Name <-- "Frenchy"
Kraut :: People_by_originType :: self.m.Name <-- "Kraut"
Brit :: People_by_originType :: self.m.Name <-- "Brit"
Denverite :: People_by_originType :: self.m.Name <-- "Denverite"
Chicagoan :: People_by_originType :: self.m.Name <-- "Chicagoan"
Californian :: People_by_originType :: self.m.Name <-- "Californian"
Iranian :: People_by_originType :: self.m.Name <-- "Iranian"
Irish :: People_by_originType :: self.m.Name <-- "Irish"
Dubliner :: People_by_originType :: self.m.Name <-- "Dubliner"
Persian :: People_by_originType :: self.m.Name <-- "Persian"
Greek :: People_by_originType :: self.m.Name <-- "Greek"
Turk :: People_by_originType :: self.m.Name <-- "Turk"
italian :: People_by_originType :: self.m.Name <-- "italian"
ottoman :: People_by_originType :: self.m.Name <-- "ottoman"
german :: People_by_originType :: self.m.Name <-- "german"
Indian [American] :: People_by_originType :: self.m.Name <-- "Indian [American]"
englishwoman :: People_by_originType :: self.m.Name <-- "englishwoman"
muslim :: People_by_religionType :: self.m.Name <-- "muslim"
christian :: People_by_religionType :: self.m.Name <-- "christian"
faithful :: People_by_religionType :: self.m.Name <-- "faithful"
baptist :: People_by_religionType :: self.m.Name <-- "baptist"
buddhist :: People_by_religionType :: self.m.Name <-- "buddhist"
pagan :: People_by_religionType :: self.m.Name <-- "pagan"
mormon :: People_by_religionType :: self.m.Name <-- "mormon"
infidel :: People_by_religionType :: self.m.Name <-- "infidel"
zealot :: People_by_religionType :: self.m.Name <-- "zealot"
jew :: People_by_religionType :: self.m.Name <-- "jew"
citizen :: People_by_jurisdictionType :: self.m.Name <-- "citizen"
parishioner :: People_by_jurisdictionType :: self.m.Name <-- "parishioner"
national :: People_by_jurisdictionType :: self.m.Name <-- "national"
subject :: People_by_jurisdictionType :: self.m.Name <-- "subject"
citizenry :: People_by_jurisdictionType :: self.m.Name <-- "citizenry"
politician :: People_by_vocationType :: self.m.Name <-- "politician"
farmer :: People_by_vocationType :: self.m.Name <-- "farmer"
attendant :: People_by_vocationType :: self.m.Name <-- "attendant"
clerk :: People_by_vocationType :: self.m.Name <-- "clerk"
consultant :: People_by_vocationType :: self.m.Name <-- "consultant"
gardener :: People_by_vocationType :: self.m.Name <-- "gardener"
lawyer :: People_by_vocationType :: self.m.Name <-- "lawyer"
maid :: People_by_vocationType :: self.m.Name <-- "maid"
manager :: People_by_vocationType :: self.m.Name <-- "manager"
professor :: People_by_vocationType :: self.m.Name <-- "professor"
receptionist :: People_by_vocationType :: self.m.Name <-- "receptionist"
salesman :: People_by_vocationType :: self.m.Name <-- "salesman"
servant :: People_by_vocationType :: self.m.Name <-- "servant"
waiter :: People_by_vocationType :: self.m.Name <-- "waiter"
carpenter :: People_by_vocationType :: self.m.Name <-- "carpenter"
scientist :: People_by_vocationType :: self.m.Name <-- "scientist"
private eye :: People_by_vocationType :: self.m.Name <-- "private eye"
actress :: People_by_vocationType :: self.m.Name <-- "actress"
waitress :: People_by_vocationType :: self.m.Name <-- "waitress"
technician :: People_by_vocationType :: self.m.Name <-- "technician"
toxicologist :: People_by_vocationType :: self.m.Name <-- "toxicologist"
engineer :: People_by_vocationType :: self.m.Name <-- "engineer"
double agent :: People_by_vocationType :: self.m.Name <-- "double agent"
researcher :: People_by_vocationType :: self.m.Name <-- "researcher"
archaeologist :: People_by_vocationType :: self.m.Name <-- "archaeologist"
agent :: People_by_vocationType :: self.m.Name <-- "agent"
journalist :: People_by_vocationType :: self.m.Name <-- "journalist"
judge :: People_by_vocationType :: self.m.Name <-- "judge"
mechanic :: People_by_vocationType :: self.m.Name <-- "mechanic"
oilman :: People_by_vocationType :: self.m.Name <-- "oilman"
reporter :: People_by_vocationType :: self.m.Name <-- "reporter"
scholar :: People_by_vocationType :: self.m.Name <-- "scholar"
veterinarian :: People_by_vocationType :: self.m.Name <-- "veterinarian"
trader :: People_by_vocationType :: self.m.Name <-- "trader"
mole :: People_by_vocationType :: self.m.Name <-- "mole"
spy :: People_by_vocationType :: self.m.Name <-- "spy"
businessperson :: People_by_vocationType :: self.m.Name <-- "businessperson"
speculator :: People_by_vocationType :: self.m.Name <-- "speculator"
architect :: People_by_vocationType :: self.m.Name <-- "architect"
plain-clothes man :: People_by_vocationType :: self.m.Name <-- "plain-clothes man"
magistrate :: People_by_vocationType :: self.m.Name <-- "magistrate"
officer :: People_by_vocationType :: self.m.Name <-- "officer"
police officer :: People_by_vocationType :: self.m.Name <-- "police officer"
spokesperson :: People_by_vocationType :: self.m.Name <-- "spokesperson"
spokesman :: People_by_vocationType :: self.m.Name <-- "spokesman"
spokeswoman :: People_by_vocationType :: self.m.Name <-- "spokeswoman"
policeman :: People_by_vocationType :: self.m.Name <-- "policeman"
bodyguard :: People_by_vocationType :: self.m.Name <-- "bodyguard"
police :: People_by_vocationType :: self.m.Name <-- "police"
tailor :: People_by_vocationType :: self.m.Name <-- "tailor"
correspondent :: People_by_vocationType :: self.m.Name <-- "correspondent"
cook :: People_by_vocationType :: self.m.Name <-- "cook"
manservant :: People_by_vocationType :: self.m.Name <-- "manservant"
actress :: PerformersType :: self.m.Name <-- "actress"
actor :: PerformersType :: self.m.Name <-- "actor"
player :: PerformersType :: self.m.Name <-- "player"
musician :: PerformersType :: self.m.Name <-- "musician"
physician :: Medical_professionalsType :: self.m.Name <-- "physician"
surgeon :: Medical_professionalsType :: self.m.Name <-- "surgeon"
allergist :: Medical_professionalsType :: self.m.Name <-- "allergist"
doctor :: Medical_professionalsType :: self.m.Name <-- "doctor"
cardiologist :: Medical_professionalsType :: self.m.Name <-- "cardiologist"
anesthesiologist :: Medical_professionalsType :: self.m.Name <-- "anesthesiologist"
chiropractor :: Medical_professionalsType :: self.m.Name <-- "chiropractor"
dermatologist :: Medical_professionalsType :: self.m.Name <-- "dermatologist"
endocrinologist :: Medical_professionalsType :: self.m.Name <-- "endocrinologist"
gastroenterologist :: Medical_professionalsType :: self.m.Name <-- "gastroenterologist"
gerontologist :: Medical_professionalsType :: self.m.Name <-- "gerontologist"
homeopathist :: Medical_professionalsType :: self.m.Name <-- "homeopathist"
immunologist :: Medical_professionalsType :: self.m.Name <-- "immunologist"
neonatologist :: Medical_professionalsType :: self.m.Name <-- "neonatologist"
nephrologist :: Medical_professionalsType :: self.m.Name <-- "nephrologist"
neurologist :: Medical_professionalsType :: self.m.Name <-- "neurologist"
obstetrician :: Medical_professionalsType :: self.m.Name <-- "obstetrician"
gynaecologist :: Medical_professionalsType :: self.m.Name <-- "gynaecologist"
oncologist :: Medical_professionalsType :: self.m.Name <-- "oncologist"
orthopaedist :: Medical_professionalsType :: self.m.Name <-- "orthopaedist"
pediatrician :: Medical_professionalsType :: self.m.Name <-- "pediatrician"
proctologist :: Medical_professionalsType :: self.m.Name <-- "proctologist"
psychiatrist :: Medical_professionalsType :: self.m.Name <-- "psychiatrist"
psychoanalyst :: Medical_professionalsType :: self.m.Name <-- "psychoanalyst"
radiologist :: Medical_professionalsType :: self.m.Name <-- "radiologist"
rheumatologist :: Medical_professionalsType :: self.m.Name <-- "rheumatologist"
family practitioner :: Medical_professionalsType :: self.m.Name <-- "family practitioner"
therapist :: Medical_professionalsType :: self.m.Name <-- "therapist"
ophthalmologist :: Medical_professionalsType :: self.m.Name <-- "ophthalmologist"
radiation oncologist :: Medical_professionalsType :: self.m.Name <-- "radiation oncologist"
midwife :: Medical_professionalsType :: self.m.Name <-- "midwife"
psychologist :: Medical_professionalsType :: self.m.Name <-- "psychologist"
psychotherapist :: Medical_professionalsType :: self.m.Name <-- "psychotherapist"
shaman :: Medical_professionalsType :: self.m.Name <-- "shaman"
urologist :: Medical_professionalsType :: self.m.Name <-- "urologist"
speech therapist :: Medical_professionalsType :: self.m.Name <-- "speech therapist"
nurse :: Medical_professionalsType :: self.m.Name <-- "nurse"
soldier :: Member_of_militaryType :: self.m.Name <-- "soldier"
marine :: Member_of_militaryType :: self.m.Name <-- "marine"
sailor :: Member_of_militaryType :: self.m.Name <-- "sailor"
airman :: Member_of_militaryType :: self.m.Name <-- "airman"
troop :: Member_of_militaryType :: self.m.Name <-- "troop"
service member :: Member_of_militaryType :: self.m.Name <-- "service member"
commando :: Member_of_militaryType :: self.m.Name <-- "commando"
spokesman :: RepresentativeType :: self.m.Name <-- "spokesman"
representative :: RepresentativeType :: self.m.Name <-- "representative"
spokeswoman :: RepresentativeType :: self.m.Name <-- "spokeswoman"
spokesperson :: RepresentativeType :: self.m.Name <-- "spokesperson"
villain :: People_by_moralityType :: self.m.Name <-- "villain"
reprobate :: People_by_moralityType :: self.m.Name <-- "reprobate"
degenerate :: People_by_moralityType :: self.m.Name <-- "degenerate"
sinner :: People_by_moralityType :: self.m.Name <-- "sinner"
miscreant :: People_by_moralityType :: self.m.Name <-- "miscreant"
fink :: People_by_moralityType :: self.m.Name <-- "fink"
bad apple :: People_by_moralityType :: self.m.Name <-- "bad apple"
malefactor :: People_by_moralityType :: self.m.Name <-- "malefactor"
evildoer :: People_by_moralityType :: self.m.Name <-- "evildoer"
delinquent :: People_by_moralityType :: self.m.Name <-- "delinquent"
low life :: People_by_moralityType :: self.m.Name <-- "low life"
wrongdoer :: People_by_moralityType :: self.m.Name <-- "wrongdoer"
saint :: People_by_moralityType :: self.m.Name <-- "saint"
left :: People_along_political_spectrumType :: self.m.Name <-- "left"
leftist :: People_along_political_spectrumType :: self.m.Name <-- "leftist"
conservative :: People_along_political_spectrumType :: self.m.Name <-- "conservative"
far-left :: People_along_political_spectrumType :: self.m.Name <-- "far-left"
far left :: People_along_political_spectrumType :: self.m.Name <-- "far left"
roommate :: People_by_residenceType :: self.m.Name <-- "roommate"
housemate :: People_by_residenceType :: self.m.Name <-- "housemate"
neighbor :: People_by_residenceType :: self.m.Name <-- "neighbor"
combatant :: Irregular_combatantsType :: self.m.Name <-- "combatant"
militant :: Irregular_combatantsType :: self.m.Name <-- "militant"
fighter :: Irregular_combatantsType :: self.m.Name <-- "fighter"
belligerent :: Irregular_combatantsType :: self.m.Name <-- "belligerent"
hostile :: Irregular_combatantsType :: self.m.Name <-- "hostile"
guerrilla :: Irregular_combatantsType :: self.m.Name <-- "guerrilla"
non-combatant :: NoncombatantType :: self.m.Name <-- "non-combatant"
civilian :: NoncombatantType :: self.m.Name <-- "civilian"
civvie :: NoncombatantType :: self.m.Name <-- "civvie"
dog :: AnimalsType :: self.m.Name <-- "dog"
cat :: AnimalsType :: self.m.Name <-- "cat"
pig :: AnimalsType :: self.m.Name <-- "pig"
cow :: AnimalsType :: self.m.Name <-- "cow"
sheep :: AnimalsType :: self.m.Name <-- "sheep"
animal :: AnimalsType :: self.m.Name <-- "animal"
tree :: PlantsType :: self.m.Name <-- "tree"
weed :: PlantsType :: self.m.Name <-- "weed"
